{"version":3,"sources":["UI/component/Users/Paginator.module.css","UI/component/Users/Users.module.css","UI/assets/img/no_image.png","BLL/Reducers/profile-reducer.tsx","DAL/api.tsx","BLL/Reducers/dialogs-reducer.tsx","UI/component/Common/FormsControl/forms.module.css","BLL/Reducers/users-reducer.tsx","UI/component/Users/Paginator.tsx","UI/component/Users/oneUser.tsx","UI/component/Users/Users.tsx","BLL/users-selectors.tsx","UI/component/Users/UsersConteiner.tsx","UI/component/Nav/Nav.tsx","UI/component/Header/Header.tsx","BLL/Reducers/authorization-reducer.tsx","UI/component/Header/HeaderConteiner.tsx","UI/component/login/login.tsx","BLL/Reducers/app-reducer.tsx","UI/HOC/WithSuspense.tsx","App.tsx","reportWebVitals.ts","BLL/store.tsx","index.tsx","UI/component/Nav/Nav.module.css","UI/assets/img/looading.gif","UI/component/Common/Preloader/Preloader.tsx","UI/component/Common/FormsControl/FormsControl.tsx","UI/component/Users/oneUser.module.css","UI/component/login/login.module.css","UI/utils/validators/validators.tsx","UI/component/Header/Header.module.css"],"names":["module","exports","ADD_POST","DELETE_POST","SET_USER_PROFILE","SET_STATUS","SAVE_PHOTO","initialState","profile","postsDataArray","id","post","likeCount","status","ProfileReducer","state","action","type","text","massages","filter","x","photos","getOneProfileTC","dispatch","a","usersAPI","getProfile","response","setOneProfileAC","data","getStatusTC","profileAPI","getStatus","updateStatusAC","updateStatusTC","updateStatus","resultCode","console","log","updatePhotoTC","file","updatePhoto","updatePhotoAC","updateInfoProfileTC","getState","userId","auth","updateInfoProfile","stopSubmit","_error","messages","Promise","reject","addPostAC","deletePostAC","instanse","axios","create","withCredentials","headers","baseURL","getUsers","currentPages","pagesize","get","then","follow","unFollow","delete","getFriendsUsers","userID","statusText","put","formData","FormData","append","authorizationAPI","me","login","email","password","rememberMe","captcha","logout","securityAPI","getCaptchaUrl","messagesAPI","getSelectedDialog","sendMessage","body","getUsersTalkedWith","GET_SELECTED_DIALOG","GET_USERS_TALKED_WITH","recipientId","oneMessage","users","dialogReducer","items","usersArray","getSelectedDialogTC","getSelectedDialogAC","senMessageTC","getUsersTalkedWithTC","getUsersTalkedWithAC","FOLLOW","UN_FOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","SET_USERID_FOR_DISABLE","TOGGLE_IS_FOLLOW","usersData","pageSize","totalUsersCount","isFetching","userIdForDisabled","isFollow","followAC","unFollowAC","setUsersAC","setTotalUsersCountAC","total","totalCounter","setUserIdForDisabledAC","IsFollowingProgress","toggleIsFetchingAC","Paginator","props","pagesCount","Math","ceil","totalItemsCount","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","onClick","map","className","style","selectPage","notselectPage","e","onPageChanget","User","user","container","photo","to","width","height","src","small","no_image","name","buttonFollow","followed","disabled","some","unfollow","follower","vewProffile","Users","block","FiendsAC","userContainer","u","getUsersCreateSelector","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPages","getIsFetching","getIsFollowingProgress","UsersAPI","pageNumber","getUsersThunk","SetCurrentPage","this","prevProps","prevState","snapshot","Preloader","setIsFollowingProgress","React","Component","UsersContainer","compose","connect","setUsers","setTotalUsersCount","toogleIsFetching","totalCount","Nav","item","activeClassName","act","Header","icon","navR","isAuthorization","Button","color","logOut","component","NavLink","SET_USER_DATA","GET_CAPTCHA","captchaURl","getAuthorizationDataTC","dispath","setAuthorizationDataAC","getCaptchaTC","captchaUrl","url","setCaptchaAC","HeaderConteinerConnect","HeaderConteiner","maxLengthValidator","maxLength","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","Field","placeholder","Input","validate","requiredField","createFormField","s","formSunnierError","IconButton","LoginContainer","isAuth","errorMessages","length","loginTC","another","Typography","variant","SET_INITIALIZED","initialized","initializedSuccessAC","WithSuspenseHOC","Suspense","fallback","DialogsConteiner","lazy","ProfileConteinerConnect","App","catchAllUnhandleError","promiseRejectEvent","alert","initializeApp","window","addEventListener","removeEventListener","exact","path","render","AppContainer","withRouter","app","promise","all","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","dialog","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddlewere","ReactDOM","document","getElementById","looading","Textarea","input","meta","hasError","touched","formControl","validator","value"],"mappings":"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","file":"static/js/main.c5a483ff.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectPage\":\"Paginator_selectPage__YtUBj\",\"notselectPage\":\"Paginator_notselectPage__1kTkj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Users_nav__2krN3\",\"item\":\"Users_item__3P74k\",\"ac\":\"Users_ac__2WkW7\",\"block\":\"Users_block__31TRx\",\"userContainer\":\"Users_userContainer__hTkmv\"};","export default __webpack_public_path__ + \"static/media/no_image.4a9ff6fc.png\";","import {profileAPI, usersAPI} from \"../../DAL/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst ADD_POST = \"ADD_POST\"\r\nconst DELETE_POST = \"DELETE_POST\"\r\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\"\r\nconst SET_STATUS = \"SET_STATUS\"\r\nconst SAVE_PHOTO = \"SAVE_PHOTO\"\r\n\r\n// Type for Reduces\r\ntype AddPostType = {\r\n    type: \"ADD_POST\"\r\n    massages: string\r\n}\r\ntype DeletePostType = {\r\n    type: \"DELETE_POST\"\r\n    id: number\r\n}\r\ntype SetProfileType = {\r\n    type: \"SET_USER_PROFILE\"\r\n    profile: any\r\n}\r\ntype UpdateStatusType = {\r\n    type: \"SET_STATUS\"\r\n    status: any\r\n}\r\n\r\ntype UpdatePhotoType = {\r\n    type: \"SAVE_PHOTO\"\r\n    photos: any\r\n}\r\n\r\n// type for Action\r\nexport type ActionType = AddPostType\r\n    | SetProfileType\r\n    | UpdateStatusType\r\n    | DeletePostType\r\n    | UpdatePhotoType\r\n\r\n//   Initial State\r\nexport type StateType = {\r\n    profile: any\r\n    postsDataArray: {\r\n        id: number;\r\n        post: string;\r\n        likeCount: number;\r\n    }[];\r\n    status: string\r\n}\r\nlet initialState: StateType = {\r\n    profile: null,\r\n    postsDataArray: [\r\n        {id: 1, post: \"Приветики??\", likeCount: 1},\r\n        {id: 2, post: \"Ребята аууу...\", likeCount: 0},\r\n        {id: 3, post: \"Это мой первый пост!\", likeCount: 1200}\r\n    ],\r\n    status: \"\"\r\n}\r\n\r\n\r\nexport const ProfileReducer = (state: StateType = initialState, action: ActionType): StateType => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let text = action.massages\r\n            return {\r\n                ...state,\r\n                postsDataArray: [{id: 4, post: text, likeCount: 10}, ...state.postsDataArray]\r\n            }\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                postsDataArray: state.postsDataArray.filter(x => x.id !== action.id)\r\n            }\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        case SAVE_PHOTO:\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.photos}\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n//Thunk Creator\r\n// с сервера берет всю инфу о профайле выбранного пользователя\r\nexport const getOneProfileTC = (id: any) => {\r\n    return async (dispatch: any) => {\r\n        let response = await usersAPI.getProfile(id)\r\n        dispatch(setOneProfileAC(response.data))\r\n    }\r\n}\r\n// с сервера достает статус выбранного пользователя\r\nexport const getStatusTC = (id: any) => {\r\n    return async (dispatch: any) => {\r\n        let response = await profileAPI.getStatus(id)\r\n        dispatch(updateStatusAC(response.data))\r\n    }\r\n}\r\n// обновляет статус на сервере\r\nexport const updateStatusTC = (status: string) => {\r\n    return async (dispatch: any) => {\r\n        try {\r\n            let response = await profileAPI.updateStatus(status)\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(updateStatusAC(status))\r\n            }\r\n        } catch (error: any) {\r\n            console.log(\"я перехватил ошибку \")\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n// обновляет фото на сервере\r\nexport const updatePhotoTC = (file: any) => {\r\n    return async (dispatch: any) => {\r\n        let response = await profileAPI.updatePhoto(file)\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(updatePhotoAC(response.data.data.photos))\r\n        }\r\n    }\r\n}\r\n// обновляет информацию о профиле на сервере\r\nexport const updateInfoProfileTC = (profile: any) => async (dispatch: any, getState: any) => {\r\n    const userId = getState().auth.userId\r\n    let response = await profileAPI.updateInfoProfile(profile)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getOneProfileTC(userId))\r\n    } else {\r\n        dispatch(stopSubmit(\"editProfile\", {_error: response.data.messages[0]}))\r\n        return Promise.reject()\r\n    }\r\n}\r\n\r\n//Action Creator\r\nexport const setOneProfileAC = (profile: any): SetProfileType => ({type: SET_USER_PROFILE, profile})\r\nexport const updateStatusAC = (status: string): UpdateStatusType => ({type: SET_STATUS, status})\r\nexport const updatePhotoAC = (photos: any): UpdatePhotoType => ({type: SAVE_PHOTO, photos})\r\nexport const addPostAC = (massages: string): AddPostType => ({type: ADD_POST, massages})\r\nexport const deletePostAC = (id: number): DeletePostType => ({type: DELETE_POST, id})\r\n\r\n\r\n","import axios from \"axios\";\r\n\r\n\r\nconst instanse = axios.create({\r\n    withCredentials: true,\r\n    headers: {\r\n       \"API-KEY\": \"603ef8c0-4933-4294-ab5f-b170d3ebe6d8\"\r\n       //  \"API-KEY\": \"48cd781d-ab35-4a63-97ba-b184f71ed662\"\r\n    },\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/'\r\n})\r\n\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPages: any, pagesize: any) {\r\n        return (\r\n            instanse.get(`users?page=${currentPages}&count=${pagesize}`, {})\r\n                .then(response => response.data)\r\n        )\r\n    },\r\n    follow(id: any) {\r\n        return (\r\n            instanse.post(`follow/${id}`, {}, {})\r\n                .then(response => response.data)\r\n        )\r\n    },\r\n    getProfile(id: any) {\r\n        return profileAPI.getProfile(id)\r\n    },\r\n    unFollow(id: any) {\r\n        return (\r\n            instanse.delete(`follow/${id}`, {})\r\n                .then(response => response.data)\r\n        )\r\n    },\r\n    getFriendsUsers(currentPages: any, pagesize: any) {\r\n        return (\r\n            instanse.get(`users?page=${currentPages}&count=${pagesize}&friend=true`, {})\r\n                .then(response => response.data)\r\n        )\r\n    }\r\n\r\n}\r\nexport const profileAPI = {\r\n    getProfile(id: any) {\r\n        return (\r\n            instanse.get(`profile/${id}`)\r\n        )\r\n    },\r\n    getStatus(userID: any) {\r\n        return (\r\n            instanse.get(`/profile/status/${userID}`)\r\n        )\r\n    },\r\n    updateStatus(statusText: string) {\r\n        return (\r\n            instanse.put(`/profile/status`, {status: statusText})\r\n        )\r\n    },\r\n    updatePhoto(file: any) {\r\n        let formData = new FormData();\r\n        formData.append(\"image\", file)\r\n        return (instanse.put(`profile/photo`, formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            })\r\n        )\r\n    },\r\n    updateInfoProfile(profile: any) {\r\n        return instanse.put(`/profile`, profile)\r\n    }\r\n}\r\nexport const authorizationAPI = {\r\n    me() {\r\n        return (\r\n            instanse.get(`auth/me`, {})\r\n        )\r\n    },\r\n    login(email: string, password: string, rememberMe: boolean = false, captcha: any) {\r\n        return (\r\n            instanse.post(`auth/login`, {email, password, rememberMe, captcha}, {})\r\n\r\n        )\r\n    },\r\n    logout() {\r\n        return (\r\n            instanse.delete(`auth/login`, {})\r\n        )\r\n    }\r\n}\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return (\r\n            instanse.get(`security/get-captcha-url`)\r\n        )\r\n    }\r\n}\r\nexport const messagesAPI = {\r\n    getSelectedDialog(userId: any) {\r\n        return (\r\n            instanse.get(`dialogs/${userId}/messages`, {})\r\n                .then(response => response.data)\r\n        )\r\n    },\r\n    sendMessage(userId: any, body: string) {\r\n        return (\r\n            instanse.post(`dialogs/${userId}/messages`, {body}, {})\r\n        )\r\n    },\r\n    getUsersTalkedWith() {\r\n        return (\r\n            instanse.get(`dialogs`, {})\r\n                .then(response => response.data)\r\n        )\r\n    }\r\n}\r\n","import { messagesAPI} from \"../../DAL/api\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nconst GET_SELECTED_DIALOG = \"GET_SELECTED_DIALOG\"\r\nconst GET_USERS_TALKED_WITH = \"GET_USERS_TALKED_WITH\"\r\n//type for Reduces\r\ntype GetSelectedDialogType = {\r\n    type: \"GET_SELECTED_DIALOG\"\r\n    items: any;\r\n}\r\ntype GetUsersTalkedWithType = {\r\n    type: \"GET_USERS_TALKED_WITH\"\r\n    usersArray: any;\r\n}\r\n\r\n//type for Action\r\ntype ActionType = GetSelectedDialogType | GetUsersTalkedWithType\r\n\r\n//initial State\r\ntype StateType = {\r\n    recipientId: number | null\r\n    messages: any\r\n    oneMessage: string\r\n    users: any\r\n}\r\nlet initialState: StateType = {\r\n    recipientId: null,\r\n    messages: null,\r\n    oneMessage: \"\",\r\n    users: null\r\n}\r\n\r\nexport const dialogReducer = (state: StateType = initialState, action: ActionType): StateType => {\r\n    if (state) {\r\n        switch (action.type) {\r\n            case GET_SELECTED_DIALOG:\r\n                return {\r\n                    ...state,\r\n                    messages: action.items\r\n                }\r\n                case GET_USERS_TALKED_WITH:\r\n                return {\r\n                    ...state,\r\n                    users: action.usersArray\r\n                }\r\n            default:\r\n                return state;\r\n        }\r\n    } else return state\r\n}\r\n\r\n\r\n//Thunk Creator\r\n// получить с сервера список сообщений с выбранным пользователем\r\nexport const getSelectedDialogTC = (id: any) => async (dispatch: Dispatch) => {\r\n    let response = await messagesAPI.getSelectedDialog(id)\r\n    dispatch(getSelectedDialogAC(response.items));\r\n}\r\n// отправить сообщение на сервер\r\nexport const senMessageTC = (userId:any, body:string) => async (dispatch: any) => {\r\n    let response = await messagesAPI.sendMessage(userId,body)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getSelectedDialogTC(userId))\r\n    }\r\n}\r\n// получить список пользователей с кем общался\r\nexport const getUsersTalkedWithTC = () => async (dispatch: Dispatch) => {\r\n    let response = await messagesAPI.getUsersTalkedWith()\r\n    dispatch(getUsersTalkedWithAC(response));\r\n\r\n}\r\n\r\n// Action Creator\r\nexport const getSelectedDialogAC = (items: any): GetSelectedDialogType => ({\r\n    type: GET_SELECTED_DIALOG,\r\n    items: items\r\n})\r\nexport const getUsersTalkedWithAC=(users: any):GetUsersTalkedWithType=>({\r\n    type: GET_USERS_TALKED_WITH,\r\n    usersArray: users\r\n})\r\n\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"forms_formControl__3EHfj\",\"error\":\"forms_error__bwAEw\",\"formSunnierError\":\"forms_formSunnierError__1NCLm\"};","import {usersAPI} from \"../../DAL/api\";\r\n\r\nconst FOLLOW = \"FOLLOW\"\r\nconst UN_FOLLOW = \"UN_FOLLOW\"\r\nconst SET_USERS = \"SET_USERS\"\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\"\r\nconst SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\"\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\"\r\nconst SET_USERID_FOR_DISABLE = \"SET_USERID_FOR_DISABLE\"\r\nconst TOGGLE_IS_FOLLOW = \"TOGGLE_IS_FOLLOW\"\r\n\r\n\r\n//type for Reduces\r\ntype FollowType = {\r\n    type: \"FOLLOW\"\r\n    userId: number\r\n}\r\ntype UNfollowType = {\r\n    type: \"UN_FOLLOW\"\r\n    userId: number\r\n}\r\ntype SetUsersType = {\r\n    type: \"SET_USERS\"\r\n    users: []\r\n}\r\ntype SetCurrentPageType = {\r\n    type: \"SET_CURRENT_PAGE\"\r\n    currentPages: number\r\n}\r\ntype SetTotalUsersCountACType = {\r\n    type: \"SET_TOTAL_USERS_COUNT\"\r\n    totalCounter: number\r\n}\r\ntype ToggleIsFetchingType = {\r\n    type: \"TOGGLE_IS_FETCHING\"\r\n    isFetching: boolean\r\n}\r\ntype SetUserIdForDisableType = {\r\n    type: \"SET_USERID_FOR_DISABLE\"\r\n    IsFollowingProgress: boolean\r\n    userId: any\r\n}\r\ntype ToggleIsFollowType = {\r\n    type: \"TOGGLE_IS_FOLLOW\"\r\n    follow: boolean\r\n}\r\n\r\n//type for Action\r\ntype ActionType =\r\n    FollowType\r\n    | UNfollowType\r\n    | SetUsersType\r\n    | SetCurrentPageType\r\n    | SetTotalUsersCountACType\r\n    | ToggleIsFetchingType\r\n    | SetUserIdForDisableType\r\n    | ToggleIsFollowType\r\n\r\n//initial State type\r\nexport type OneUsersType = {\r\n    id: number,\r\n    followed: boolean,\r\n    name: string,\r\n    status: string,\r\n    photos: any\r\n    uniqueUrlName: any\r\n}\r\ntype UsersType = {\r\n    usersData: Array<OneUsersType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPages: number\r\n    isFetching: boolean\r\n    userIdForDisabled: any\r\n    isFollow: boolean\r\n}\r\nlet initialState: UsersType = {\r\n    usersData: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPages: 1,\r\n    isFetching: true,\r\n    userIdForDisabled: [],\r\n    isFollow: false\r\n}\r\n\r\nexport const UsersReducer = (state: UsersType = initialState, action: ActionType): UsersType => {\r\n    if (state) {\r\n        switch (action.type) {\r\n            case TOGGLE_IS_FOLLOW:\r\n                return {\r\n                    ...state,\r\n                    isFollow: action.follow\r\n                }\r\n            case FOLLOW:\r\n                return {\r\n                    ...state,\r\n                    usersData: state.usersData.map((x) => {\r\n                        if (x.id === action.userId) {\r\n                            return {...x, followed: true}\r\n                        } else return x\r\n                    })\r\n                }\r\n            case UN_FOLLOW:\r\n                return {\r\n                    ...state,\r\n                    usersData: state.usersData.map((x) => {\r\n                        if (x.id === action.userId) {\r\n                            return {...x, followed: false}\r\n                        } else return x\r\n                    })\r\n                }\r\n            case SET_USERS:\r\n                return {...state, usersData: [...action.users]}\r\n            case SET_CURRENT_PAGE:\r\n                return {...state, currentPages: action.currentPages}\r\n            case SET_TOTAL_USERS_COUNT:\r\n                return {...state, totalUsersCount: action.totalCounter}\r\n            case TOGGLE_IS_FETCHING:\r\n                return {...state, isFetching: action.isFetching}\r\n            case SET_USERID_FOR_DISABLE:\r\n                return {\r\n                    ...state,\r\n                    userIdForDisabled: action.IsFollowingProgress\r\n                        ? [action.userId]\r\n                        : []\r\n                }\r\n            default:\r\n                return state;\r\n        }\r\n    } else return state\r\n}\r\n\r\n//Thunk Creator\r\n// делает запрос на сервер, возвращет всех пользователей\r\nexport const getUsersTC = (currentPages: number, pagesize: number, follow: boolean) => {\r\n    return async (dispatch: any) => {\r\n        dispatch(toggleIsFetchingAC(true))\r\n        let response;\r\n        // если ищем друзей, то выполняем один запрос на серве\r\n        if (follow) {\r\n            response = await usersAPI.getFriendsUsers(currentPages, pagesize)\r\n        } else {\r\n            response = await usersAPI.getUsers(currentPages, pagesize)\r\n        }\r\n        dispatch(toggleIsFetchingAC(false))\r\n        dispatch(setUsersAC(response.items))\r\n        dispatch(setTotalUsersCountAC(response.totalCount))\r\n    }\r\n}\r\n// делает запрос на сервер, меняет на сервере свойство фоллоу на true\r\nexport const followTC = (id: any) => {\r\n    return async (dispatch: any) => {\r\n        dispatch(setUserIdForDisabledAC(true, id))\r\n        let response = await usersAPI.follow(id)\r\n        if (response.resultCode === 0) {\r\n            dispatch(followAC(id))\r\n        }\r\n        dispatch(setUserIdForDisabledAC(false, id))\r\n    }\r\n}\r\n// делает запрос на сервер, удаляет на сервере свойство фоллоу(ставит по умолчанию false)\r\nexport const unFollowTC = (id: any) => {\r\n    return async (dispatch: any) => {\r\n        dispatch(setUserIdForDisabledAC(true, id))\r\n        let response = await usersAPI.unFollow(id)\r\n        if (response.resultCode === 0) {\r\n            dispatch(unFollowAC(id))\r\n        }\r\n        dispatch(setUserIdForDisabledAC(false, id))\r\n    }\r\n}\r\n\r\n//ActionCreator\r\nexport const followAC = (userId: number): FollowType =>\r\n    ({type: FOLLOW, userId})\r\nexport const unFollowAC = (userId: number): UNfollowType =>\r\n    ({type: UN_FOLLOW, userId})\r\n\r\n\r\nexport const setUsersAC = (users: []): SetUsersType =>\r\n    ({type: SET_USERS, users})\r\nexport const setCurrentPageAC = (currentPages: number): SetCurrentPageType =>\r\n    ({type: SET_CURRENT_PAGE, currentPages})\r\nexport const setTotalUsersCountAC = (total: number): SetTotalUsersCountACType =>\r\n    ({\r\n        type: SET_TOTAL_USERS_COUNT,\r\n        totalCounter: total\r\n    })\r\n// isFoll.Pr true, то в IsFollowingProgress в стейте записываем айди выбранного пользователя, иначе пустой массив\r\nexport const setUserIdForDisabledAC = (IsFollowingProgress: boolean, userId: any): SetUserIdForDisableType =>\r\n    ({\r\n        type: SET_USERID_FOR_DISABLE,\r\n        IsFollowingProgress: IsFollowingProgress,\r\n        userId\r\n    })\r\n\r\n\r\n// меняем в стейте значение isFetching. тру, значит, еще в процессе загрузки.\r\nexport const toggleIsFetchingAC = (isFetching: boolean): ToggleIsFetchingType =>\r\n    ({\r\n        type: TOGGLE_IS_FETCHING,\r\n        isFetching: isFetching\r\n    })\r\nexport const toggleFollowAC = (follow: boolean): ToggleIsFollowType =>\r\n    ({type: TOGGLE_IS_FOLLOW, follow})\r\n\r\n","import React, {useState} from 'react';\r\nimport style from \"./Paginator.module.css\"\r\n\r\ntype PaginatorPropsType = {\r\n    pagesize: number\r\n    totalItemsCount: number\r\n    onPageChanget: (x: any) => void\r\n    currentPages: number\r\n}\r\nexport const Paginator = (props: PaginatorPropsType) => {\r\n    let portionSize = 10;\r\n    let pagesCount = Math.ceil(props.totalItemsCount / props.pagesize)\r\n    let pages = []\r\n\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize)\r\n    let [portionNumber, setPortionNumber] = useState(1)\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n    let rightPortionPageNumber = portionNumber * portionSize\r\n\r\n\r\n    return (\r\n        <div>\r\n            {portionNumber > 1 &&\r\n            <button onClick={() => {\r\n                setPortionNumber(portionNumber - 1)\r\n            }}>prev</button>}\r\n            {pages\r\n                .filter(x => x >= leftPortionPageNumber && x <= rightPortionPageNumber)\r\n                .map(x => {\r\n                    return <span className={props.currentPages === x ? style.selectPage : style.notselectPage}\r\n                          key={x}\r\n                          onClick={(e) => {\r\n                              props.onPageChanget(x)\r\n                          }}>|{x}|</span>\r\n                })}\r\n            {portionCount > portionNumber &&\r\n            <button onClick={() => {\r\n                setPortionNumber(portionNumber + 1)\r\n            }}>next</button>}\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport no_image from '../../assets/img/no_image.png'\r\nimport {NavLink} from 'react-router-dom';\r\nimport {Button} from \"@material-ui/core\";\r\nimport style from \"./oneUser.module.css\"\r\n\r\ntype UsersComponentType = {\r\n    user: any\r\n    follower: (id: number) => void\r\n    unfollow: (id: number) => void\r\n    userIdForDisabled: any\r\n}\r\n\r\nexport let User = (props: UsersComponentType) => {\r\n    let user = props.user\r\n\r\n    return <div className={style.container}>\r\n\r\n        <div className={style.photo}>\r\n            <NavLink to={'/profile/' + user.id}> <img width={\"90px\"} height={\"90px\"}\r\n                                                      src={user.photos.small != null ? user.photos.small : no_image}/>\r\n            </NavLink>\r\n        </div>\r\n\r\n\r\n        <div>\r\n            <div>{user.name}</div>\r\n            <div>что то о</div>\r\n        </div>\r\n\r\n        <div className={style.buttonFollow}>\r\n            {user.followed\r\n                ?//arr.some возвращает true, если хотя бы для одного элемента массива условие верно\r\n                //при раздизабл. кнопки к нам прихоидот пустой массив\r\n                <button\r\n                    disabled={props.userIdForDisabled.some((id: any) => id === user.id)}\r\n                    onClick={() => {\r\n                        props.unfollow(user.id)\r\n                    }\r\n                    }>Unfollow</button>\r\n                :\r\n                <button\r\n                    disabled={props.userIdForDisabled.some((id: any) => id === user.id)}\r\n                    onClick={() => {\r\n                        props.follower(user.id)\r\n                    }\r\n                    }>Follow</button>}\r\n            <button>chat</button>\r\n        </div>\r\n        <div className={style.vewProffile}>\r\n            <button>vew profile</button>\r\n        </div>\r\n\r\n\r\n    </div>\r\n\r\n\r\n}","import React from 'react';\r\nimport { OneUsersType} from \"../../../BLL/Reducers/users-reducer\";\r\nimport {Paginator} from \"./Paginator\";\r\nimport {User} from \"./oneUser\";\r\nimport style from \"./Users.module.css\"\r\n\r\ntype UsersComponentType = {\r\n    users: OneUsersType[]\r\n    pagesize: number\r\n    totalUsersCount: number\r\n    currentPages: number\r\n    follower: (id: number) => void\r\n    unfollow: (id: number) => void\r\n    onPageChanget: (x: any) => void\r\n    setIsFollowingProgress: (x: any, id: any) => void\r\n    IsFollowingProgress: any\r\n    isFollow: boolean\r\n    FiendsAC: any\r\n}\r\n\r\nexport let Users = (props: UsersComponentType) => {\r\n\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pagesize)\r\n    let pages = []\r\n\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n\r\n    return <div className={style.block}>\r\n        <Paginator pagesize={props.pagesize}\r\n                   totalItemsCount={props.totalUsersCount}\r\n                   onPageChanget={props.onPageChanget}\r\n                   currentPages={props.currentPages}/>\r\n        <button onClick={()=>{props.FiendsAC(true)}}>find friends</button>\r\n        <button onClick={()=>{props.FiendsAC(false)}}>show all</button>\r\n<div className={style.userContainer}>\r\n        {props.users.map((u: OneUsersType) =><User user={u}\r\n                                                   follower={props.follower}\r\n                                                   unfollow={props.unfollow}\r\n                                                   userIdForDisabled={props.IsFollowingProgress}/>\r\n\r\n        )\r\n        }\r\n</div>\r\n    </div>\r\n}","import React from 'react';\r\nimport { createSelector } from 'reselect';\r\n\r\nexport const getUsers=(state: any)=>{\r\n    return state.usersPage.usersData\r\n}\r\nexport const getUsersCreateSelector=createSelector(getUsers,(users)=>{\r\n    return users.filter((x:any)=>true)\r\n})\r\nexport const getPageSize=(state: any)=>{\r\n    return state.usersPage.pageSize\r\n}\r\nexport const getTotalUsersCount=(state: any)=>{\r\n    return state.usersPage.totalUsersCount\r\n}\r\nexport const getCurrentPages=(state: any)=>{\r\n    return state.usersPage.currentPages\r\n}\r\nexport const getIsFetching=(state: any)=>{\r\n    return state.usersPage.isFetching\r\n}\r\nexport const getIsFollowingProgress=(state: any)=>{\r\n    return state.usersPage.userIdForDisabled\r\n}\r\n","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    followTC, getUsersTC, toggleFollowAC,\r\n    setCurrentPageAC, toggleIsFetchingAC, setUserIdForDisabledAC,\r\n    setTotalUsersCountAC,\r\n    setUsersAC,\r\n    unFollowTC,\r\n    OneUsersType\r\n} from \"../../../BLL/Reducers/users-reducer\";\r\nimport {StoreStateType} from \"../../../BLL/store\";\r\nimport {Users} from \"./Users\";\r\nimport {Preloader} from \"../Common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPages,\r\n    getIsFetching,\r\n    getIsFollowingProgress,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n     getUsersCreateSelector\r\n} from \"../../../BLL/users-selectors\";\r\nimport thunk from \"redux-thunk\";\r\n\r\n\r\nexport type MapStateToPropsType = {\r\n    users: OneUsersType[]\r\n    pagesize: number\r\n    totalUsersCount: number\r\n    currentPages: number\r\n    isFetching: boolean\r\n    IsFollowingProgress:boolean\r\n    isFollow: boolean\r\n}\r\nexport type MapDispatchTopropsType = {\r\n    follower: (id: number) => void\r\n    unfollow: (id: number) => void\r\n    setUsers: (x: []) => void\r\n    SetCurrentPage: (x: number) => void\r\n    setTotalUsersCount: (x: number) => void\r\n    toogleIsFetching: (x: boolean) => void\r\n    setIsFollowingProgress: any\r\n    getUsersThunk: any\r\n    FiendsAC:any\r\n}\r\n\r\nlet mapStateToProps = (state: StoreStateType): MapStateToPropsType => {\r\n\r\n    return {\r\n        users: getUsersCreateSelector(state),\r\n        pagesize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPages: getCurrentPages(state),\r\n        isFetching: getIsFetching(state),\r\n        IsFollowingProgress: getIsFollowingProgress(state),\r\n        isFollow: state.usersPage.isFollow\r\n    }\r\n}\r\n\r\nclass UsersAPI extends React.Component<MapDispatchTopropsType & MapStateToPropsType, any> {\r\n    componentDidMount() {\r\n\r\n        this.props.getUsersThunk(this.props.currentPages, this.props.pagesize, this.props.isFollow)\r\n\r\n    }\r\n    componentDidUpdate(prevProps: Readonly<MapDispatchTopropsType & MapStateToPropsType>, prevState: Readonly<any>, snapshot?: any) {\r\n       if(this.props.isFollow!==prevProps.isFollow)\r\n        this.props.getUsersThunk(this.props.currentPages, this.props.pagesize, this.props.isFollow)\r\n    }\r\n\r\n\r\n    onPageChanget = (pageNumber: number) => {\r\n        this.props.getUsersThunk(pageNumber, this.props.pagesize,  this.props.isFollow)\r\n\r\n        this.props.SetCurrentPage(pageNumber);\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n\r\n            <Users users={this.props.users}\r\n                   totalUsersCount={this.props.totalUsersCount}\r\n                   currentPages={this.props.currentPages}\r\n                   pagesize={this.props.pagesize}\r\n                   follower={this.props.follower}\r\n                   unfollow={this.props.unfollow}\r\n                   onPageChanget={this.onPageChanget}\r\n                   IsFollowingProgress={this.props.IsFollowingProgress}\r\n                   setIsFollowingProgress={this.props.setIsFollowingProgress}\r\n                   isFollow={this.props.isFollow}\r\n                   FiendsAC={this.props.FiendsAC}/>\r\n        </>\r\n    }\r\n}\r\n\r\nexport const UsersContainer:any = compose(/*WithAuthRedirect,*/connect(mapStateToProps, {\r\n\r\n    follower:followTC,\r\n    unfollow: unFollowTC,\r\n    setUsers:setUsersAC,\r\n    SetCurrentPage:setCurrentPageAC,\r\n    setTotalUsersCount: setTotalUsersCountAC,\r\n    setIsFollowingProgress: setUserIdForDisabledAC,\r\n    toogleIsFetching:toggleIsFetchingAC,\r\n    getUsersThunk: getUsersTC,\r\n    FiendsAC: toggleFollowAC\r\n    //getUsersThunk: getFriendsThunkCreater\r\n}))(UsersAPI)\r\n\r\n\r\n","import React from 'react';\r\nimport  style from './Nav.module.css'\r\n\r\nimport {NavLink} from \"react-router-dom\"\r\n\r\nexport const Nav = () => {\r\n    return (\r\n        <div className={style.block} >\r\n            <div className={style.item}>\r\n                <NavLink to=\"/profile\" activeClassName={style.act}><b>Profile</b></NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink to=\"/dialogs\" activeClassName={style.act}><b>Messages</b></NavLink>\r\n            </div>\r\n\r\n            <div className={style.item}>\r\n                <NavLink to=\"/findUsers\" activeClassName={style.act}><b>Find Users</b></NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {Button} from \"@material-ui/core\";\r\nimport style from \"./Header.module.css\"\r\nimport {Nav} from \"../Nav/Nav\";\r\n\r\n\r\ntype HeaderPropsType = {\r\n    isAuthorization: any\r\n    login: any\r\n    logOut: any\r\n}\r\n\r\nexport const Header = (props: HeaderPropsType) => {\r\n    return (\r\n        <div className={style.block}>\r\n            <div className={style.icon}>\r\n\r\n            </div>\r\n            <div className={style.navR}>\r\n                <div >\r\n                    <Nav/>\r\n                </div>\r\n                <div >\r\n                    {props.isAuthorization\r\n                        ? <>{props.login} |\r\n                            <Button color=\"inherit\"\r\n                                    onClick={props.logOut}\r\n                                    component={NavLink}\r\n                                    to={'/login'}>LogOut</Button>\r\n                        </>\r\n                        : <Button color=\"inherit\"\r\n                                  component={NavLink}\r\n                                  to={'/login'}>Login</Button>}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import {authorizationAPI, securityAPI} from \"../../DAL/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nconst SET_USER_DATA = \"SET_USER_DATA\"\r\nconst GET_CAPTCHA = \"CAPTCHA\"\r\n\r\n//type for Reduces\r\ntype SetUserType = {\r\n    type: \"SET_USER_DATA\"\r\n    userId: any,\r\n    email: any,\r\n    login: any,\r\n    isAuthorization: any\r\n}\r\ntype GetCaptchaType = {\r\n    type: \"CAPTCHA\"\r\n    captchaURl: any\r\n}\r\n\r\n\r\n///////type for Action\r\ntype ActionType = SetUserType | GetCaptchaType\r\n\r\n/////initial State\r\ntype AuthorizationStateType = {\r\n    userId: number | null\r\n    email: string | null\r\n    login: boolean | null\r\n    isAuthorization: boolean | null\r\n    captchaURl: any\r\n}\r\n\r\nlet initialState: AuthorizationStateType = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuthorization: false,\r\n    captchaURl: null\r\n}\r\n\r\nexport const AuthorizationReducer = (state: AuthorizationStateType = initialState, action: ActionType): AuthorizationStateType => {\r\n    if (state) {\r\n        switch (action.type) {\r\n            case SET_USER_DATA:\r\n                return {\r\n                    ...state,\r\n                    userId: action.userId,\r\n                    email: action.email,\r\n                    login: action.login,\r\n                    isAuthorization: action.isAuthorization\r\n                }\r\n                case GET_CAPTCHA:\r\n                return {\r\n                    ...state,\r\n                    captchaURl: action.captchaURl\r\n                }\r\n            default:\r\n                return state;\r\n        }\r\n    } else return state\r\n}\r\n//Thunk Creator\r\n// авторизируемся\r\nexport const loginTC = (email: string, password: string, rememberMe: boolean, captcha: any) => async (dispath: any) => {\r\n    let response = await authorizationAPI.login(email, password, rememberMe, captcha)\r\n    // если авт прошла успешно, то выполняем это\r\n    if (response.data.resultCode === 0) {\r\n        dispath(getAuthorizationDataTC())\r\n    }\r\n    else {\r\n        if (response.data.resultCode === 10){\r\n            dispath(getCaptchaTC())\r\n        }\r\n        let errorMessages = response.data.messages.length > 0\r\n            ? response.data.messages[0]\r\n            : \"some error\"\r\n        dispath(stopSubmit(\"Login\", {_error: errorMessages}))\r\n    }\r\n}\r\n//получаем данные о пользователе, который авторизировался\r\nexport const getAuthorizationDataTC = () => async (dispath: Dispatch) => {\r\n    // т к авт прошла успешно, то делаем запрос, от куда берем даные текущего пользователя\r\n    let response = await authorizationAPI.me()\r\n    if (response.data.resultCode === 0) {\r\n        let {id, email, login} = response.data.data\r\n        dispath(setAuthorizationDataAC(id, email, login, true))\r\n    }\r\n}\r\n//делаем запрос на сервер, удаляем свои данные для автаризации\r\nexport const logoutTC = () => async (dispath: Dispatch) => {\r\n    let response = await authorizationAPI.logout()\r\n    if (response.data.resultCode === 0) {\r\n        dispath(setAuthorizationDataAC(null, null, null, false))\r\n    }\r\n}\r\n// делаем запрос на сервер, получаем картинку антибот\r\nexport const getCaptchaTC = () => async (dispath: Dispatch) => {\r\n    let response = await securityAPI.getCaptchaUrl()\r\n    let captchaUrl = response.data.url\r\n    debugger\r\n    dispath(setCaptchaAC(captchaUrl))\r\n}\r\n\r\n//ACTION CREATOR\r\n// меняем данные в в стейте на данные авторизированного пользователя\r\nexport const setAuthorizationDataAC = (userId: number | null, email: string | null, login: string | null, isAuthorization: boolean | null): SetUserType => ({\r\n    type: SET_USER_DATA,\r\n    userId: userId,\r\n    email: email,\r\n    login: login,\r\n    isAuthorization: isAuthorization\r\n})\r\n// добовляем капчу, пришедшую из сервера, в наш стейт\r\nexport const setCaptchaAC = (captchaURl: any): GetCaptchaType => ({\r\n    type: GET_CAPTCHA,\r\n    captchaURl: captchaURl\r\n})","import React from 'react';\r\nimport {Header} from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logoutTC} from \"../../../BLL/Reducers/authorization-reducer\";\r\nimport {StoreStateType} from \"../../../BLL/store\";\r\n\r\nclass HeaderConteinerConnect extends React.Component<any, any> {\r\n    render() {\r\n        return (\r\n            <Header login={this.props.login} isAuthorization={this.props.isAuthorization} logOut={this.props.logOut}/>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: StoreStateType) => ({\r\n    isAuthorization: state.auth.isAuthorization,\r\n    login: state.auth.login\r\n})\r\nlet mapDispatchToProps = (dispatch: any) => {\r\n    return {\r\n        logOut: () => {\r\n            dispatch(logoutTC())\r\n        }\r\n    }\r\n}\r\nexport const HeaderConteiner = connect(mapStateToProps, mapDispatchToProps)(HeaderConteinerConnect)","import React from 'react'\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport {createFormField, Input} from \"../Common/FormsControl/FormsControl\";\r\nimport {maxLength, requiredField} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {loginTC} from \"../../../BLL/Reducers/authorization-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {StoreStateType} from \"../../../BLL/store\";\r\nimport s from \"../Common/FormsControl/forms.module.css\"\r\nimport {Grid, IconButton, Typography} from \"@material-ui/core\";\r\nimport style from \"./login.module.css\"\r\n\r\n\r\nconst maxLengthValidator = maxLength(50)\r\nconst LoginForm = ({handleSubmit, error, x}: any) => {\r\n    console.log(error)\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <Field placeholder={\"Email\"}\r\n                       component={Input}\r\n                       name={\"email\"}\r\n                       validate={[requiredField, maxLengthValidator]}/>\r\n            </div>\r\n            <div>\r\n                <Field placeholder={\"Password\"}\r\n                       component={Input}\r\n                       name={\"password\"}\r\n                       validate={[requiredField, maxLengthValidator]}/>\r\n            </div>\r\n            <div>\r\n                <Field type={\"checkbox\"}\r\n                       component={Input}\r\n                       name={\"rememberMe\"}\r\n                       validate={[maxLengthValidator]}/> Remember me\r\n            </div>\r\n            {x && <img src={x}/>}\r\n\r\n            {x && createFormField(\"captcha URl\", \"captcha\", [], Input, {})}\r\n\r\n            {error && <div className={s.formSunnierError}>\r\n                {error}\r\n            </div>}\r\n            <div>\r\n                <IconButton type='submit' color=\"primary\">Login</IconButton>\r\n            </div>\r\n        </form>\r\n\r\n    )\r\n}\r\n\r\nexport const Login = (props: any) => {\r\n    const onSubmit = (formData: any) => {\r\n\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha)\r\n    }\r\n    if (props.isAuth) return <Redirect to={\"/profile\"}/>\r\n    return <div className={style.block}>\r\n        <div className={style.container}>\r\n            <div className={style.another}>another</div>\r\n            <div className={style.login} >\r\n                <Typography variant=\"h4\">\r\n                    Login\r\n                </Typography>\r\n                <LoginReduxForm onSubmit={onSubmit} x={props.captcha}/>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\nconst LoginReduxForm: any = reduxForm({\r\n    form: 'Login'\r\n})(LoginForm)\r\n\r\nconst mapStateToProps = (state: StoreStateType) => ({\r\n    isAuth: state.auth.isAuthorization,\r\n    captcha: state.auth.captchaURl\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n    return {\r\n        login: (email: string, password: string, rememberMe: boolean, captcha: any) => {\r\n            dispatch(loginTC(email, password, rememberMe, captcha))\r\n        }\r\n    }\r\n}\r\n\r\nexport const LoginContainer = connect(\r\n    mapStateToProps, mapDispatchToProps)(Login)\r\n","import {getAuthorizationDataTC} from \"./authorization-reducer\";\r\n\r\nconst SET_INITIALIZED = \"SET_INITIALIZED\"\r\n\r\n//type for Reduces\r\ntype InitializedType = {\r\n    type: \"SET_INITIALIZED\"\r\n}\r\n\r\n//type for Action\r\ntype ActionType = InitializedType\r\n\r\n//initial State\r\ntype StateType = {\r\n    initialized: boolean\r\n}\r\nlet initialState: StateType = {\r\n    initialized: false\r\n}\r\n\r\nexport const AppReducer = (state: StateType = initialState, action: ActionType): StateType => {\r\n    if (state) {\r\n        switch (action.type) {\r\n            case SET_INITIALIZED:{\r\n                return {\r\n                    ...state,\r\n                    initialized: true\r\n                }\r\n            }\r\n            default:\r\n                return state;\r\n        }\r\n    }\r\n    else return state\r\n}\r\n\r\n//Thunk Creator\r\nexport const initializeTC = () => (dispath: any) => {\r\n   let promise= dispath(getAuthorizationDataTC());\r\n    Promise.all([promise]).then(()=>{\r\n        dispath(initializedSuccessAC());\r\n    })\r\n}\r\n\r\n// Action Creator\r\nexport const initializedSuccessAC = (): InitializedType => ({type: SET_INITIALIZED})\r\n\r\n\r\n","import React from \"react\";\r\nimport {Preloader} from \"../component/Common/Preloader/Preloader\";\r\n\r\n\r\nexport const WithSuspenseHOC=(Component:any)=>{\r\n\r\n   return(props: any)=>{\r\n       return <React.Suspense fallback={<Preloader/>}>\r\n           <Component{...props}/>\r\n       </React.Suspense>\r\n   }\r\n\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport {Nav} from \"./UI/component/Nav/Nav\";\r\nimport {Redirect, Route, Switch, withRouter} from \"react-router-dom\"\r\nimport {UsersContainer} from \"./UI/component/Users/UsersConteiner\";\r\nimport {HeaderConteiner} from \"./UI/component/Header/HeaderConteiner\";\r\nimport {LoginContainer} from './UI/component/login/login';\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializeTC} from \"./BLL/Reducers/app-reducer\";\r\nimport {StoreStateType} from \"./BLL/store\";\r\nimport {Preloader} from \"./UI/component/Common/Preloader/Preloader\";\r\nimport {WithSuspenseHOC} from \"./UI/HOC/WithSuspense\";\r\nimport {AppBar, Button, Container, Grid, IconButton, MenuItem, Paper, Toolbar, Typography} from \"@material-ui/core\";\r\n\r\n// лейзи говорит, что он компаненту не импортирую. когда ее надо будет отрисоввать, он запросится с сервера\r\nconst DialogsConteiner = React.lazy(() => import('./UI/component/Dialog/DialogCONTEINER'));\r\nconst ProfileConteinerConnect = React.lazy(() => import('./UI/component/Profile/ProfoleConteiner'));\r\n\r\n\r\nclass App extends React.Component<any, any> {\r\n// componentDidMount срабатывает один раз, когда К. вмонтируется\r\n    catchAllUnhandleError = (promiseRejectEvent: PromiseRejectionEvent) => {\r\n        alert(promiseRejectEvent)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.initializeApp()\r\n        window.addEventListener(\"unhandledrejection\", this.catchAllUnhandleError)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"unhandledrejection\", this.catchAllUnhandleError)\r\n\r\n    }\r\n\r\n    render() {\r\n        // при первой загрузке у на нет данных, показываем поэтому крутилку\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n// задача К. вернуть jsx(tsx) в зависимости от пропсов либо личного локального стейта\r\n        // exact требует полное совпадение урла. Можно добавить <Switch>..роутер..</Switch> и тогда при первом совпадении будет отрисовка.\r\n        // в этом случает лучше точные урлы ставить выше, а общие ниже\r\n        return (\r\n            <div>\r\n                <div  >\r\n                  <HeaderConteiner/>\r\n\r\n                    <div >\r\n{/*\r\n                        <Nav/>\r\n*/}\r\n                    </div>\r\n                    <div >\r\n                        <Switch>\r\n                            <Route exact path='/'\r\n                                   render={() => <Redirect to={'/profile'}/>}/>\r\n                            <Route path='/profile/:userID?'\r\n                                   render={WithSuspenseHOC(ProfileConteinerConnect)}/>\r\n                            <Route path='/dialogs/:userID?'\r\n                                   render={WithSuspenseHOC(DialogsConteiner)}/>\r\n\r\n                            <Route path='/findUsers'\r\n                                   render={() => <UsersContainer/>}\r\n                            />\r\n                            <Route path='/login'\r\n                                   render={() => <LoginContainer/>}\r\n                            /> <Route path='*'\r\n                                   render={() => <LoginContainer/>}\r\n                            />\r\n\r\n                        </Switch>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: StoreStateType) => ({\r\n    initialized: state.app.initialized\r\n})\r\n// compose создает контейнернкю компанету, применяя один за одним HOCи=>\r\n// (компанента высшего порядка-это функция, которая принимает одну компаненту и возвращает другую компаненту.\r\n// Это нужно для того, что бы наша компанента получила какие-то данные)\r\n\r\n// connect  дает данные из Store с помощью mapStateToProps и mapDispatchToProps\r\n// withRouter дает компоненте данные из url\r\nexport const AppContainer: any = compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp: initializeTC}))(App)\r\n\r\n\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport {ProfileReducer} from \"./Reducers/profile-reducer\";\r\nimport {UsersReducer} from \"./Reducers/users-reducer\";\r\nimport {AuthorizationReducer} from \"./Reducers/authorization-reducer\";\r\nimport thunkMiddlewere from \"redux-thunk\";//thunk as thunkMiddleWere\r\nimport  {reducer as formReducer} from 'redux-form'\r\nimport {AppReducer} from \"./Reducers/app-reducer\";\r\nimport {dialogReducer} from \"./Reducers/dialogs-reducer\";\r\n\r\n\r\nexport const reducers = combineReducers(\r\n    {\r\n        profile: ProfileReducer,\r\n        dialog: dialogReducer,\r\n        usersPage: UsersReducer,\r\n        auth: AuthorizationReducer,\r\n        form: formReducer,\r\n        app: AppReducer\r\n    }\r\n)\r\n\r\nexport type StoreStateType = ReturnType<typeof reducers>\r\n\r\nconst composeEnhancers = (window && (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\nexport const store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddlewere)));\r\n\r\n// @ts-ignore\r\nwindow.store = store\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {AppContainer} from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {store} from \"./BLL/store\";\r\nimport {Provider} from \"react-redux\";\r\nimport {BrowserRouter, HashRouter} from \"react-router-dom\";\r\n\r\n// BrowserRouter добовляет\r\n// Provider добовляет store в контекст, из которого все компаненты могут брать данные ( наприер стор, тема темная/светлая, язык)\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <BrowserRouter>\r\n            <AppContainer/>\r\n        </BrowserRouter>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\nreportWebVitals();\r\n// реакт библиотека- это библиотека, которая эффективно отрисовывает html. Эффективно, в плане она не перерисовывает те элементы, которые не надо\r\n// реакт загружается и живет в браузере\r\n//компанента возвращает тсикс или джсикс\r\n\r\n//сайдэффект= запросы на сервер, сетТаймаут, обращение к дом элементам на прямую\r\n//  шудКомпонентАпдейт - реакт.Мемо\r\n// пьюрКомпонент\r\n//\r\n//\r\n///\r\n// редакс это система стейт менеджмента, то что позволчет управлять удобно стейто\r\n// редакс состоит из одного главного обьекта стор(хранилище,обьект ооп) .В стор мы засовываем редьюсеры, из которых он будет состоять.\r\n// редьюсеры это функции преобразователи. они получают на входе\r\n// экшен(обьект, инструкция, у которого минимум есть тип и мб данные) и часть стейта и преобразовывает стейт\r\n// делает преобраования он иммутабельно( изменяет не стейт а его копию)\r\n//\r\n// стор(хранилище) обьект ооп,  с ним можно взаимодействовать через его интерфейс( методы и свойства)\r\n// есть три главных метода:\r\n//getState позволяет получить из стора актуальный стейт\r\n//subscribe позволяет подписаться подпищику на изменение стейта\r\n//dispatch позволяет приобразовать стейт\r\n\r\n\r\n// реакт редакс для связки реакта и редакса. обеспечивает связь коспоненты со стором.\r\n// на помощь для связи комп. со стором приходит фунция connect\r\n// connect это хок. он создает вокгруг нашей компаненты другую компаненту. она снабжает нашу компаненты\r\n// connect(mstp, mdtp). mstp берет из стейта часть, которая использоваться будет в нашей компаненте( в нашу комп приходит это впропсах)\r\n// mdtp берем функцию (метод диспатч у стора) , который возвращает нам колбеки в которых диспатчи\r\n// в новой компаненте есть доступ к стору, у которого она может вызывать подписку на изменения стейта.\r\n// все обернута провайдером из р-р для того, что бы у всего приложения был доступ к стейту в контексте\r\n\r\n\r\n\r\n\r\n\r\n// node js это альтернатива браузеру. это платформа, позолябщая писать на js  любые приложения. его моно загрузить в телевизор холодильник пылесос север..\r\n// конкретно нам он нужен для подключения куси пакетов\r\n\r\n// компаненты\r\n// фунцкциональная компонента это функц принимающая пропсы и возврашает jsx\r\n\r\n// классовая компанента.\r\n\r\n// фунция мар принимает один обькт возвращает массив других обьектов (всегда добовлять key)\r\n// идентпотентность или детерменированность - получаем на входе одно и тоже и на выходе получаем одно и тоже\r\n// в чистой функции нет сайдэффектов, локального стейта\r\n// имьютабельность - функция не может менять то, что в нее приходит.\r\n\r\n\r\n\r\n// SERVER API\r\n// интрфейс сервера- это эндпоинты(урлы, на которые мы делаем запрос).рест апи это правила. какой тип запроса, какой ответ будет\r\n// делаем запросы с помощью axios. нам возвращаются промисы. у промиса  есть метод then, в которую мы передаем коллбек , который срабатывает когдп промис выполнился\r\n\r\n//ajax запросы выносим в контейнерную компаненту. контейнерных коспанент может быть много.\r\n// хок withRouter. тягает данные из урла. как коннект\r\n\r\n// thunk- это функция, которая принимает метод диспаитч, и внутри себя делаем асинхронную опирация и разные диспатчи\r\n// используем санк креатер. санку можно задиспатчить. 3\r\n//что бы ui не общался ни с кем, кроме блл.\r\n\r\n\r\n// редакс форм. есть пакет релакс форм реакт. он для того, что бы работал\r\n// флакс круговорот(ничего не появляется в юай без появления этого сначала в блл. например логин и пароль)\r\n\r\n\r\n// селекторы для mstp в connect. они для того случая, если очень тяжело достаются данные из стейта. что бы не засорять мстпya","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Nav_block__3NF6i\",\"item\":\"Nav_item__25nBV\",\"act\":\"Nav_act__3tTfs\"};","export default __webpack_public_path__ + \"static/media/looading.c1b8565f.gif\";","import looading from '../../../assets/img/looading.gif'\r\nimport React from \"react\";\r\n\r\nexport const Preloader=()=>{\r\n    return <img src={looading}/>\r\n}","import React from 'react';\r\nimport style from './forms.module.css'\r\nimport {Field} from \"redux-form\";\r\n\r\nexport const Textarea = ({input, meta, ...props}: any) => {\r\n    const hasError = meta.touched && meta.error\r\n    return <div className={style.formControl + \" \" + (hasError ? style.error : \"\")}>\r\n        <textarea {...input} {...props}/>\r\n        <div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    </div>\r\n}\r\nexport const Input = ({input, meta, ...props}: any) => {\r\n    const hasError = meta.touched && meta.error\r\n    return <div className={style.formControl + \" \" + (hasError ? style.error : \"\")}>\r\n        <input {...input} {...props}/>\r\n        <div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    </div>\r\n}\r\nexport const Form = ({input, meta, el, ...props}: any) => {\r\n    const hasError = meta.touched && meta.error\r\n    return <div className={style.formControl + \" \" + (hasError ? style.error : \"\")}>\r\n        <props.el {...input} {...props}/>\r\n        <div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport const createFormField = (placeholder: any, name: any, validator: any, component: any, props = {}, text = \"\") => (\r\n    <div>\r\n        <Field placeholder={placeholder}\r\n               name={name}\r\n               validate={validator}\r\n               component={component}\r\n               {...props}/> {text}\r\n    </div>\r\n)\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"oneUser_container__2R9Nx\",\"vewProffile\":\"oneUser_vewProffile__3r3mK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"login_block__oBQpF\",\"container\":\"login_container__1XkqZ\",\"another\":\"login_another__5Vs3c\",\"login\":\"login_login__3ZnbQ\"};","export const requiredField=(value:any)=>{\r\n    if(value) return undefined\r\n    return \"Field is required\"\r\n}\r\nexport const maxLength=(maxLength: number)=>(value:any)=>{\r\n    if(value && value.length>maxLength) return `max lenght is ${maxLength} symbols`\r\n    return undefined\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Header_block__2zvu-\",\"header\":\"Header_header__3OIz_\",\"loginBlock\":\"Header_loginBlock__vJX1Q\",\"navR\":\"Header_navR__3Ilzl\",\"nav\":\"Header_nav__35RLB\",\"auth\":\"Header_auth__q80ee\"};"],"sourceRoot":""}
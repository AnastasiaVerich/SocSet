{"version":3,"sources":["ui-new/profile-page/profile.module.scss","ui-new/profile-page/menu-items/view-profile/view-profile.module.scss","ui-new/profile-page/menu-items/view-contacts/view-contacts.module.scss","ui-new/profile-page/menu-items/about-me/about-me.module.scss","ui-new/profile-page/menu-items/view-friends/view-friends.module.scss","ui-new/profile-page/menu-items/view-profile/view-profile.tsx","ui-new/profile-page/menu-items/view-contacts/view-contacts.tsx","ui-new/profile-page/menu-items/about-me/about-me.tsx","ui-new/profile-page/menu-items/view-friends/view-friends.tsx","ui-new/profile-page/menu-items/view-friends/view-friends-container.tsx","ui-new/profile-page/profile.tsx","ui-new/profile-page/profile-container.tsx"],"names":["module","exports","ViewProfile","props","className","s","viewProfile","titleMenu","container","columnTitles","item","columnDescriptions","profile","fullName","ViewContacts","contactsBlock","Object","keys","contacts","map","key","contactTitle","contactValue","Contact","oneContact","AboutMe","aboutMeBlock","aboutMeField","aboutMe","ViewFrinds","viewFriendsBlock","users","user","oneFriendContainer","photo","src","photos","small","no_image","alt","name","btn","followed","disabled","IsFollowingProgress","some","id","onClick","unfollow","follower","to","viewProfileBtn","UsersAPI","onPageChanget","pageNumber","getUsersThunk","pagesize","isFollow","SetCurrentPage","this","currentPages","prevProps","prevState","snapshot","isFetching","Preloader","totalUsersCount","setIsFollowingProgress","React","Component","ViewFriendsContainer","compose","connect","state","getUsersCreateSelector","getPageSize","getTotalUsersCount","getCurrentPages","getIsFetching","getIsFollowingProgress","usersPage","followTC","unFollowTC","setUsers","setUsersAC","setCurrentPageAC","setTotalUsersCount","setTotalUsersCountAC","setUserIdForDisabledAC","toogleIsFetching","toggleIsFetchingAC","getUsersTC","FiendsAC","toggleFollowAC","Profile","useState","x","setX","y","setY","z","setZ","w","setW","block","topContainer","infoContainer","large","buttons","ownerId","userId","buttonItem","bottomContainer","menuBlock","menuContainer","menuItem","profileSelectedBlock","profileSelectedContainer","ProfileConteiner","match","params","userID","authorizationUserId","history","push","getOneProfile","refreshProfile","status","updateStatus","updatePhoto","updateInfoProfile","ProfileContainerConnect","auth","isAuthorization","dispatch","getOneProfileTC","getStatus","getStatusTC","updateStatusTC","file","updatePhotoTC","updateInfoProfileTC","withRouter"],"mappings":"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","file":"static/js/3.e79febe5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"profile_block__3TeRo\",\"topContainer\":\"profile_topContainer__10mjt\",\"infoContainer\":\"profile_infoContainer__mJdOh\",\"photo\":\"profile_photo__3zgjr\",\"name\":\"profile_name__2Pxmc\",\"buttons\":\"profile_buttons__2PLqJ\",\"buttonItem\":\"profile_buttonItem__13Myt\",\"bottomContainer\":\"profile_bottomContainer__AKtuQ\",\"menuBlock\":\"profile_menuBlock__OUQrA\",\"menuContainer\":\"profile_menuContainer__39Fc-\",\"menuItem\":\"profile_menuItem__3QSzV\",\"profileSelectedBlock\":\"profile_profileSelectedBlock__3yGO4\",\"profileSelectedContainer\":\"profile_profileSelectedContainer__3L6gF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"viewProfile\":\"view-profile_viewProfile__xHpFH\",\"titleMenu\":\"view-profile_titleMenu__1tRfF\",\"container\":\"view-profile_container__2XU15\",\"columnTitles\":\"view-profile_columnTitles__3X7lE\",\"item\":\"view-profile_item__2nYsT\",\"columnDescriptions\":\"view-profile_columnDescriptions__rl7xw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsBlock\":\"view-contacts_contactsBlock__1Nx8I\",\"titleMenu\":\"view-contacts_titleMenu__36fLz\",\"container\":\"view-contacts_container__2xa8-\",\"oneContact\":\"view-contacts_oneContact__3FFYr\",\"columnTitles\":\"view-contacts_columnTitles__2A3v8\",\"item\":\"view-contacts_item__1aYrJ\",\"columnDescriptions\":\"view-contacts_columnDescriptions__7rbeV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"aboutMeBlock\":\"about-me_aboutMeBlock__2cmWb\",\"titleMenu\":\"about-me_titleMenu__3Wsqt\",\"container\":\"about-me_container__26m70\",\"aboutMeField\":\"about-me_aboutMeField__1aHx8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"viewFriendsBlock\":\"view-friends_viewFriendsBlock__2lbL8\",\"oneFriendContainer\":\"view-friends_oneFriendContainer__-yiqp\",\"photo\":\"view-friends_photo__1ZzZv\",\"name\":\"view-friends_name__3y0t3\",\"btn\":\"view-friends_btn__2uzAk\",\"item\":\"view-friends_item__2Zjb1\",\"viewProfileBtn\":\"view-friends_viewProfileBtn__3itJR\"};","import s from \"./view-profile.module.scss\";\r\nimport React from \"react\";\r\n\r\nexport const ViewProfile = (props: any) => {\r\n    return (\r\n        <div className={s.viewProfile}>\r\n            <div className={s.titleMenu}> View Profile</div>\r\n            <div className={s.container}>\r\n                <div className={s.columnTitles}>\r\n                    <div className={s.item}>Name</div>\r\n                    <div className={s.item}>Day of Birth</div>\r\n                    <div className={s.item}>Sex</div>\r\n                    <div className={s.item}>City</div>\r\n                    <div className={s.item}>Country</div>\r\n                </div>\r\n                <div className={s.columnDescriptions}>\r\n                    <div className={s.item}>{props.profile.fullName}</div>\r\n                    <div className={s.item}>18.11.1996</div>\r\n                    <div className={s.item}>W</div>\r\n                    <div className={s.item}>Minsk</div>\r\n                    <div className={s.item}>Belarus</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import s from \"./view-contacts.module.scss\";\r\nimport React from \"react\";\r\n\r\nexport const ViewContacts = (props: any) => {\r\n    return (\r\n        <div className={s.contactsBlock}>\r\n            <div className={s.titleMenu}> My contacts</div>\r\n            <div className={s.container}>\r\n                {Object.keys(props.profile.contacts).map(key => {\r\n                    return <Contact key={key} contactTitle={key}\r\n                                    contactValue={props.profile.contacts[key]}/>\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst Contact = (props: any) => {\r\n    return (\r\n        <div className={s.oneContact}>\r\n            <div className={s.columnTitles}>\r\n                <div className={s.item}>{props.contactTitle}</div>\r\n            </div>\r\n            <div className={s.columnDescriptions}>\r\n                <div className={s.item}>{props.contactValue}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import s from \"./about-me.module.scss\";\r\nimport React from \"react\";\r\n\r\nexport const AboutMe = (props: any) => {\r\n    return (\r\n        <div className={s.aboutMeBlock}>\r\n            <div className={s.titleMenu}> about me</div>\r\n            <div className={s.container}>\r\n                <div className={s.aboutMeField}>\r\n                    {props.profile.aboutMe}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import s from \"./view-friends.module.scss\";\r\nimport React from \"react\";\r\nimport {OneUsersType} from \"../../../../BLL/Reducers/users-reducer\";\r\nimport no_image from \"../../../assets/img/no_image.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {AiOutlineMail} from \"react-icons/ai\";\r\nimport {AiOutlineUserAdd, AiOutlineUserDelete} from \"react-icons/all\";\r\n\r\nexport const ViewFrinds = (props: any) => {\r\n    return (\r\n        <div className={s.viewFriendsBlock}>\r\n\r\n            {props.users.map((user: OneUsersType) =>\r\n                <div key={user.id} className={s.oneFriendContainer}>\r\n                    <img className={s.photo}\r\n                         src={user.photos.small != null ? user.photos.small : no_image} alt={\"\"}/>\r\n                    <div className={s.name}>{user.name}</div>\r\n                    <div className={s.btn}>\r\n                        {user.followed\r\n                            ?//arr.some возвращает true, если хотя бы для одного элемента массива условие верно\r\n                            //при раздизабл. кнопки к нам прихоидот пустой массив\r\n                            <button className={s.item}\r\n                                    disabled={props.IsFollowingProgress.some((id: any) => id === user.id)}\r\n                                    onClick={() => {\r\n                                        props.unfollow(user.id)\r\n                                    }\r\n                                    }><AiOutlineUserDelete/></button>\r\n                            :\r\n                            <button className={s.item}\r\n                                    disabled={props.IsFollowingProgress.some((id: any) => id === user.id)}\r\n                                    onClick={() => {\r\n                                        props.follower(user.id)\r\n                                    }\r\n                                    }><AiOutlineUserAdd/></button>}\r\n                        <NavLink to={'/messages/' + user.id} className={s.item}>\r\n                            <AiOutlineMail/>\r\n                        </NavLink></div>\r\n                    <NavLink className={s.viewProfileBtn} to={'/profile/' + user.id}>\r\n                        view profile\r\n                    </NavLink></div>\r\n            )\r\n            }\r\n        </div>\r\n    )\r\n\r\n}","import {\r\n    followTC, getUsersTC,\r\n    OneUsersType,\r\n    setCurrentPageAC,\r\n    setTotalUsersCountAC, setUserIdForDisabledAC,\r\n    setUsersAC, toggleFollowAC, toggleIsFetchingAC,\r\n    unFollowTC\r\n} from \"../../../../BLL/Reducers/users-reducer\";\r\nimport {StoreStateType} from \"../../../../BLL/store\";\r\nimport {\r\n    getCurrentPages, getIsFetching, getIsFollowingProgress,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsersCreateSelector\r\n} from \"../../../../BLL/users-selectors\";\r\nimport React from \"react\";\r\nimport {compose} from \"redux\";\r\n\r\n import {connect} from \"react-redux\";\r\n\r\nimport {ViewFrinds} from \"./view-friends\";\r\nimport {Preloader} from \"../../../Common/preloader/Preloader\";\r\n\r\nexport type MapStateToPropsType = {\r\n    users: OneUsersType[]\r\n    pagesize: number\r\n    totalUsersCount: number\r\n    currentPages: number\r\n    isFetching: boolean\r\n    IsFollowingProgress:boolean\r\n    isFollow: boolean\r\n}\r\nexport type MapDispatchTopropsType = {\r\n    follower: (id: number) => void\r\n    unfollow: (id: number) => void\r\n    setUsers: (x: []) => void\r\n    SetCurrentPage: (x: number) => void\r\n    setTotalUsersCount: (x: number) => void\r\n    toogleIsFetching: (x: boolean) => void\r\n    setIsFollowingProgress: any\r\n    getUsersThunk: any\r\n    FiendsAC:any\r\n}\r\n\r\nlet mapStateToProps = (state: StoreStateType): MapStateToPropsType => {\r\n\r\n    return {\r\n        users: getUsersCreateSelector(state),\r\n        pagesize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPages: getCurrentPages(state),\r\n        isFetching: getIsFetching(state),\r\n        IsFollowingProgress: getIsFollowingProgress(state),\r\n        isFollow: state.usersPage.isFollow\r\n    }\r\n}\r\n\r\nclass UsersAPI extends React.Component<MapDispatchTopropsType & MapStateToPropsType, any> {\r\n    componentDidMount() {\r\n\r\n        this.props.getUsersThunk(this.props.currentPages, this.props.pagesize, true)\r\n\r\n    }\r\n    componentDidUpdate(prevProps: Readonly<MapDispatchTopropsType & MapStateToPropsType>, prevState: Readonly<any>, snapshot?: any) {\r\n        if(this.props.isFollow!==prevProps.isFollow)\r\n            this.props.getUsersThunk(this.props.currentPages, this.props.pagesize, this.props.isFollow)\r\n    }\r\n\r\n\r\n    onPageChanget = (pageNumber: number) => {\r\n        this.props.getUsersThunk(pageNumber, this.props.pagesize,  this.props.isFollow)\r\n\r\n        this.props.SetCurrentPage(pageNumber);\r\n\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n\r\n            <ViewFrinds users={this.props.users}\r\n                   totalUsersCount={this.props.totalUsersCount}\r\n                   currentPages={this.props.currentPages}\r\n                   pagesize={this.props.pagesize}\r\n                   follower={this.props.follower}\r\n                   unfollow={this.props.unfollow}\r\n                   onPageChanget={this.onPageChanget}\r\n                   IsFollowingProgress={this.props.IsFollowingProgress}\r\n                   setIsFollowingProgress={this.props.setIsFollowingProgress}\r\n                   isFollow={this.props.isFollow}\r\n                   />\r\n        </>\r\n    }\r\n}\r\n\r\nexport const ViewFriendsContainer:any = compose(/*WithAuthRedirect,*/connect(mapStateToProps, {\r\n\r\n    follower:followTC,\r\n    unfollow: unFollowTC,\r\n    setUsers:setUsersAC,\r\n    SetCurrentPage:setCurrentPageAC,\r\n    setTotalUsersCount: setTotalUsersCountAC,\r\n    setIsFollowingProgress: setUserIdForDisabledAC,\r\n    toogleIsFetching:toggleIsFetchingAC,\r\n    getUsersThunk: getUsersTC,\r\n    FiendsAC: toggleFollowAC\r\n    //getUsersThunk: getFriendsThunkCreater\r\n}))(UsersAPI)","import React, {useState} from 'react'\r\nimport s from \"./profile.module.scss\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport no_image from \"../assets/img/no_image.png\";\r\nimport {ViewProfile} from \"./menu-items/view-profile/view-profile\";\r\nimport {ViewContacts} from \"./menu-items/view-contacts/view-contacts\";\r\nimport {AboutMe} from \"./menu-items/about-me/about-me\";\r\nimport {ViewFriendsContainer} from \"./menu-items/view-friends/view-friends-container\";\r\nimport {AiOutlineMail} from \"react-icons/ai\";\r\nimport {AiOutlineUser} from \"react-icons/ai\";\r\nimport {FaUserFriends, SiAboutDotMe, SiMailDotRu} from \"react-icons/all\";\r\nimport {Preloader} from \"../Common/preloader/Preloader\";\r\n\r\nexport const Profile = (props: any) => {\r\n    let [x, setX] = useState(true)\r\n    let [y, setY] = useState(false)\r\n    let [z, setZ] = useState(false)\r\n    let [w, setW] = useState(false)\r\n\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    } else {\r\n        return <div className={s.block}>\r\n            <div className={s.topContainer}>\r\n                {/*показываетс в мобильной версии*/}\r\n                <div className={s.infoContainer}>\r\n                    {props.profile.photos.large === null\r\n                        ? <img className={s.photo} src={no_image} alt={\"\"}/>\r\n                        : <img className={s.photo} src={props.profile.photos.large} alt={\"\"}/>}\r\n                    <div className={s.name}>\r\n                        {props.profile.fullName}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={s.buttons}>\r\n                    {/*{ <div className={s.buttonItem}*/}\r\n                    {/*        onClick={() => {*/}\r\n                    {/*            props.follower(props.profile.userId)*/}\r\n                    {/*        }*/}\r\n                    {/*        }>Follow</div>}*/}\r\n                    {!props.ownerId && <NavLink to={'/messages/' + props.profile.userId} className={s.buttonItem}>\r\n                        <AiOutlineMail/>\r\n                    </NavLink>}\r\n\r\n                </div>\r\n            </div>\r\n            <div className={s.bottomContainer}>\r\n                <div className={s.menuBlock}>\r\n                    {/*показывается в комп версии*/}\r\n                    <div className={s.infoContainer}>\r\n                        {props.profile.photos.large === null\r\n                            ? <img className={s.photo} src={no_image} alt={\"\"}/>\r\n                            : <img className={s.photo} src={props.profile.photos.large} alt={\"\"}/>}\r\n                        <div className={s.name}>\r\n                            {props.profile.fullName}\r\n                        </div>\r\n                    </div>\r\n                    <div className={s.menuContainer}>\r\n                        <div className={s.menuItem} onClick={() => {\r\n                            setX(true);\r\n                            setY(false);\r\n                            setZ(false);\r\n                            setW(false)\r\n                        }}><AiOutlineUser/>\r\n                        </div>\r\n                        <div className={s.menuItem} onClick={() => {\r\n                            setX(false);\r\n                            setY(true);\r\n                            setZ(false);\r\n                            setW(false)\r\n                        }}><SiMailDotRu/>\r\n                        </div>\r\n                        <div className={s.menuItem} onClick={() => {\r\n                            setX(false);\r\n                            setY(false);\r\n                            setZ(true);\r\n                            setW(false)\r\n\r\n                        }}><SiAboutDotMe/>\r\n                        </div>\r\n                        {props.ownerId && <div className={s.menuItem} onClick={() => {\r\n                            setX(false);\r\n                            setY(false);\r\n                            setZ(false);\r\n                            setW(true)\r\n                        }}><FaUserFriends/>\r\n                        </div>}\r\n                    </div>\r\n                </div>\r\n                <div className={s.profileSelectedBlock}>\r\n                    <div className={s.profileSelectedContainer}>\r\n                        {/* посмотреть профиль*/}\r\n                        {x && <ViewProfile profile={props.profile}/>}\r\n                        {/*посмотреть друзей*/}\r\n                        {w && <ViewFriendsContainer/>}\r\n                        {/*мои соц сети*/}\r\n                        {y && <ViewContacts profile={props.profile}/>}\r\n                        {/*обо мне*/}\r\n                        {z && <AboutMe profile={props.profile}/>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\n","import React from \"react\";\r\nimport {Profile} from \"./profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {StoreStateType} from \"../../BLL/store\";\r\nimport {\r\n    getOneProfileTC,\r\n    getStatusTC,\r\n    updateInfoProfileTC,\r\n    updatePhotoTC,\r\n    updateStatusTC\r\n} from \"../../BLL/Reducers/profile-reducer\";\r\nimport {followTC} from \"../../BLL/Reducers/users-reducer\";\r\n\r\n\r\nclass ProfileConteiner extends React.Component<any, any>{\r\n// match из  withRouter  взялся\r\n    refreshProfile(){\r\n        let ownerId =this.props.match.params.userID\r\n        // если айди не найден, то задаем айди авторизированного пользователя\r\n        if (!ownerId){\r\n            ownerId=this.props.authorizationUserId\r\n            // если пользователь не авторизирован, то в айди ничего нет и мы редеректемся на страницу логина\r\n            if(!ownerId){\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }if(ownerId)\r\n        this.props.getOneProfile(ownerId)\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        this.refreshProfile()\r\n    }\r\n    componentDidUpdate(prevProps: Readonly<any>, prevState: Readonly<any>, snapshot?: any) {\r\n        if(this.props.match.params.userID !==prevProps.match.params.userID )\r\n            this.refreshProfile()\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Profile profile={this.props.profile}\r\n                     ownerId={!this.props.match.params.userID}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}\r\n                     updatePhoto={this.props.updatePhoto}\r\n                     updateInfoProfile={this.props.updateInfoProfile}\r\n                     follower={this.props.follower}/>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nlet mapStateToprops=(state:StoreStateType):any=>{\r\n    return{\r\n        profile: state.profile.profile,\r\n        status: state.profile.status,\r\n        authorizationUserId: state.auth.userId,\r\n        isAuthorization: state.auth.isAuthorization\r\n\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch: any)  => {\r\n    return {\r\n        getOneProfile: (id: number) => {\r\n            dispatch(getOneProfileTC(id))\r\n        },\r\n        getStatus: (id: number) => {\r\n            dispatch(getStatusTC(id))\r\n        },updateStatus: (status: string) => {\r\n            dispatch(updateStatusTC(status))\r\n        },updatePhoto: (file: any) => {\r\n            dispatch(updatePhotoTC(file))\r\n        },\r\n        updateInfoProfile: (profile: any) => {\r\n            dispatch(updateInfoProfileTC(profile))\r\n        },\r\n        follower:(id: any)=>{\r\n            dispatch(followTC(id))\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst ProfileContainerConnect:any= compose(\r\n    connect (mapStateToprops,mapDispatchToProps)\r\n    ,withRouter\r\n)(ProfileConteiner)\r\nexport default ProfileContainerConnect\r\n"],"sourceRoot":""}
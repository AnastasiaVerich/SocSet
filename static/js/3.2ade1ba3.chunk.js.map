{"version":3,"sources":["ui-new/profile-page/profile.module.scss","ui-new/profile-page/menu-items/view-profile/view-profile.module.scss","ui-new/profile-page/menu-items/view-contacts/view-contacts.module.scss","ui-new/profile-page/menu-items/about-me/about-me.module.scss","ui-new/profile-page/menu-items/view-friends/view-friends.module.scss","ui-new/profile-page/menu-items/view-profile/view-profile.tsx","ui-new/profile-page/menu-items/view-contacts/view-contacts.tsx","ui-new/profile-page/menu-items/about-me/about-me.tsx","ui-new/profile-page/menu-items/view-friends/view-friends.tsx","ui-new/profile-page/menu-items/view-friends/view-friends-container.tsx","ui-new/profile-page/profile.tsx","ui-new/profile-page/profile-container.tsx"],"names":["module","exports","ViewProfile","props","className","s","viewProfile","titleMenu","selectionMainContainer","titleColumn","item","descriptionColumn","profile","fullName","ViewContacts","Object","keys","contacts","map","key","contactTitle","contactValue","Contact","oneContact","AboutMe","aboutMeField","aboutMe","ViewFrinds","viewFriends","users","user","friendContainer","ava","src","photos","small","no_image","name","butt","followed","butItem","disabled","IsFollowingProgress","some","id","onClick","unfollow","follower","to","viewProfileFriend","UsersAPI","onPageChanget","pageNumber","getUsersThunk","pagesize","isFollow","SetCurrentPage","this","currentPages","prevProps","prevState","snapshot","isFetching","Preloader","totalUsersCount","setIsFollowingProgress","React","Component","ViewFriendsContainer","compose","connect","state","getUsersCreateSelector","getPageSize","getTotalUsersCount","getCurrentPages","getIsFetching","getIsFollowingProgress","usersPage","followTC","unFollowTC","setUsers","setUsersAC","setCurrentPageAC","setTotalUsersCount","setTotalUsersCountAC","setUserIdForDisabledAC","toogleIsFetching","toggleIsFetchingAC","getUsersTC","FiendsAC","toggleFollowAC","Profile","useState","x","setX","y","setY","z","setZ","w","setW","block","backgroundImage","topPart","avaName","avatarContainer","large","avatar","buttons","ownerId","userId","buttonItem","mainBlock","middlePart","menu","menuItem","bottomPart","menuSelection","ProfileConteiner","match","params","userID","authorizationUserId","history","push","getOneProfile","getStatus","refreshProfile","status","updateStatus","updatePhoto","updateInfoProfile","ProfileContainerConnect","auth","isAuthorization","getOneProfileTC","getStatusTC","updateStatusTC","updatePhotoTC","updateInfoProfileTC","withRouter"],"mappings":"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","file":"static/js/3.2ade1ba3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"profile_block__3TeRo\",\"backgroundImage\":\"profile_backgroundImage___Dtpd\",\"topPart\":\"profile_topPart__1WCz3\",\"avaName\":\"profile_avaName__1_gtl\",\"avatarContainer\":\"profile_avatarContainer__31rxw\",\"avatar\":\"profile_avatar__2jNWb\",\"name\":\"profile_name__2Pxmc\",\"buttons\":\"profile_buttons__2PLqJ\",\"buttonItem\":\"profile_buttonItem__13Myt\",\"mainBlock\":\"profile_mainBlock__3Pxw9\",\"middlePart\":\"profile_middlePart__bbHAV\",\"menu\":\"profile_menu__Uf_Gj\",\"menuItem\":\"profile_menuItem__3QSzV\",\"bottomPart\":\"profile_bottomPart__ZbAIW\",\"menuSelection\":\"profile_menuSelection__1waoy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"viewProfile\":\"view-profile_viewProfile__xHpFH\",\"titleMenu\":\"view-profile_titleMenu__1tRfF\",\"selectionMainContainer\":\"view-profile_selectionMainContainer__3VYIb\",\"titleColumn\":\"view-profile_titleColumn__1UXwi\",\"item\":\"view-profile_item__2nYsT\",\"descriptionColumn\":\"view-profile_descriptionColumn__1TNbF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"viewProfile\":\"view-contacts_viewProfile__2nrDs\",\"titleMenu\":\"view-contacts_titleMenu__36fLz\",\"selectionMainContainer\":\"view-contacts_selectionMainContainer__1VLxo\",\"aboutMeField\":\"view-contacts_aboutMeField__2wfgp\",\"oneContact\":\"view-contacts_oneContact__3FFYr\",\"titleColumn\":\"view-contacts_titleColumn__266T9\",\"item\":\"view-contacts_item__1aYrJ\",\"descriptionColumn\":\"view-contacts_descriptionColumn__1V-1v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"viewProfile\":\"about-me_viewProfile__gEaeb\",\"titleMenu\":\"about-me_titleMenu__3Wsqt\",\"selectionMainContainer\":\"about-me_selectionMainContainer__26H6L\",\"aboutMeField\":\"about-me_aboutMeField__1aHx8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"viewFriends\":\"view-friends_viewFriends__2GsFy\",\"friendContainer\":\"view-friends_friendContainer__1ohhO\",\"ava\":\"view-friends_ava__7SWnR\",\"name\":\"view-friends_name__3y0t3\",\"butt\":\"view-friends_butt__1gUkp\",\"butItem\":\"view-friends_butItem__ZMyPb\",\"viewProfileFriend\":\"view-friends_viewProfileFriend__12bgL\"};","import s from \"./view-profile.module.scss\";\r\nimport React from \"react\";\r\n\r\nexport const ViewProfile = (props: any) => {\r\n    return (\r\n        <div className={s.viewProfile}>\r\n            <div className={s.titleMenu}> View Profile</div>\r\n            <div className={s.selectionMainContainer}>\r\n                <div className={s.titleColumn}>\r\n                    <div className={s.item}>Name</div>\r\n                    <div className={s.item}>Day of Birth</div>\r\n                    <div className={s.item}>Sex</div>\r\n                    <div className={s.item}>City</div>\r\n                    <div className={s.item}>Country</div>\r\n                </div>\r\n                <div className={s.descriptionColumn}>\r\n                    <div className={s.item}>{props.profile.fullName}</div>\r\n                    <div className={s.item}>18.11.1996</div>\r\n                    <div className={s.item}>W</div>\r\n                    <div className={s.item}>Minsk</div>\r\n                    <div className={s.item\r\n                    }>Belarus\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import s from \"./view-contacts.module.scss\";\r\nimport React from \"react\";\r\n\r\nexport const ViewContacts = (props: any) => {\r\n    return (\r\n        <div className={s.viewProfile}>\r\n            <div className={s.titleMenu}> My contacts</div>\r\n            <div className={s.selectionMainContainer}>\r\n                {Object.keys(props.profile.contacts).map(key => {\r\n                    return <Contact key={key} contactTitle={key}\r\n                                    contactValue={props.profile.contacts[key]}/>\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst Contact = (props: any) => {\r\n    return (\r\n        <div className={s.oneContact}>\r\n            <div className={s.titleColumn}>\r\n                <div className={s.item}>{props.contactTitle}</div>\r\n            </div>\r\n            <div className={s.descriptionColumn}>\r\n                <div className={s.item}>{props.contactValue}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import s from \"./about-me.module.scss\";\r\nimport React from \"react\";\r\n\r\nexport const AboutMe = (props: any) => {\r\n    return (\r\n        <div className={s.viewProfile}>\r\n            <div className={s.titleMenu}> about me</div>\r\n            <div className={s.selectionMainContainer}>\r\n                <div className={s.aboutMeField}>\r\n                    {props.profile.aboutMe}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import s from \"./view-friends.module.scss\";\r\nimport React from \"react\";\r\nimport {OneUsersType} from \"../../../../BLL/Reducers/users-reducer\";\r\nimport {OneUser} from \"../../../users-page/one-user/oneUser\";\r\nimport no_image from \"../../../../UI/assets/img/no_image.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {AiOutlineMail} from \"react-icons/ai\";\r\nimport {AiOutlineUserAdd, AiOutlineUserDelete} from \"react-icons/all\";\r\n\r\nexport const ViewFrinds = (props: any) => {\r\n    return (\r\n        <div className={s.viewFriends}>\r\n\r\n            {props.users.map((user: OneUsersType) =>\r\n                <div className={s.friendContainer}>\r\n                    <img className={s.ava}\r\n                         src={user.photos.small != null ? user.photos.small : no_image}/>\r\n                    <div className={s.name}>{user.name}</div>\r\n                    <div className={s.butt}>\r\n                        {user.followed\r\n                            ?//arr.some возвращает true, если хотя бы для одного элемента массива условие верно\r\n                            //при раздизабл. кнопки к нам прихоидот пустой массив\r\n                            <button className={s.butItem}\r\n                                    disabled={props.IsFollowingProgress.some((id: any) => id === user.id)}\r\n                                    onClick={() => {\r\n                                        props.unfollow(user.id)\r\n                                    }\r\n                                    }><AiOutlineUserDelete/></button>\r\n                            :\r\n                            <button className={s.butItem}\r\n                                    disabled={props.IsFollowingProgress.some((id: any) => id === user.id)}\r\n                                    onClick={() => {\r\n                                        props.follower(user.id)\r\n                                    }\r\n                                    }><AiOutlineUserAdd/></button>}\r\n                        <NavLink to={'/messages/' + user.id} className={s.butItem}>\r\n                            <AiOutlineMail/>\r\n                        </NavLink></div>\r\n                    <NavLink className={s.viewProfileFriend} to={'/profile/' + user.id}>\r\n                        view profile\r\n                    </NavLink></div>\r\n            )\r\n            }\r\n        </div>\r\n    )\r\n\r\n}","import {\r\n    followTC, getUsersTC,\r\n    OneUsersType,\r\n    setCurrentPageAC,\r\n    setTotalUsersCountAC, setUserIdForDisabledAC,\r\n    setUsersAC, toggleFollowAC, toggleIsFetchingAC,\r\n    unFollowTC\r\n} from \"../../../../BLL/Reducers/users-reducer\";\r\nimport {StoreStateType} from \"../../../../BLL/store\";\r\nimport {\r\n    getCurrentPages, getIsFetching, getIsFollowingProgress,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsersCreateSelector\r\n} from \"../../../../BLL/users-selectors\";\r\nimport React from \"react\";\r\nimport {Preloader} from \"../../../Common/pr/Preloader\";\r\nimport {Users} from \"../../../users-page/users\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {ViewFrinds} from \"./view-friends\";\r\n\r\nexport type MapStateToPropsType = {\r\n    users: OneUsersType[]\r\n    pagesize: number\r\n    totalUsersCount: number\r\n    currentPages: number\r\n    isFetching: boolean\r\n    IsFollowingProgress:boolean\r\n    isFollow: boolean\r\n}\r\nexport type MapDispatchTopropsType = {\r\n    follower: (id: number) => void\r\n    unfollow: (id: number) => void\r\n    setUsers: (x: []) => void\r\n    SetCurrentPage: (x: number) => void\r\n    setTotalUsersCount: (x: number) => void\r\n    toogleIsFetching: (x: boolean) => void\r\n    setIsFollowingProgress: any\r\n    getUsersThunk: any\r\n    FiendsAC:any\r\n}\r\n\r\nlet mapStateToProps = (state: StoreStateType): MapStateToPropsType => {\r\n\r\n    return {\r\n        users: getUsersCreateSelector(state),\r\n        pagesize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPages: getCurrentPages(state),\r\n        isFetching: getIsFetching(state),\r\n        IsFollowingProgress: getIsFollowingProgress(state),\r\n        isFollow: state.usersPage.isFollow\r\n    }\r\n}\r\n\r\nclass UsersAPI extends React.Component<MapDispatchTopropsType & MapStateToPropsType, any> {\r\n    componentDidMount() {\r\n\r\n        this.props.getUsersThunk(this.props.currentPages, this.props.pagesize, true)\r\n\r\n    }\r\n    componentDidUpdate(prevProps: Readonly<MapDispatchTopropsType & MapStateToPropsType>, prevState: Readonly<any>, snapshot?: any) {\r\n        if(this.props.isFollow!==prevProps.isFollow)\r\n            this.props.getUsersThunk(this.props.currentPages, this.props.pagesize, this.props.isFollow)\r\n    }\r\n\r\n\r\n    onPageChanget = (pageNumber: number) => {\r\n        this.props.getUsersThunk(pageNumber, this.props.pagesize,  this.props.isFollow)\r\n\r\n        this.props.SetCurrentPage(pageNumber);\r\n\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n\r\n            <ViewFrinds users={this.props.users}\r\n                   totalUsersCount={this.props.totalUsersCount}\r\n                   currentPages={this.props.currentPages}\r\n                   pagesize={this.props.pagesize}\r\n                   follower={this.props.follower}\r\n                   unfollow={this.props.unfollow}\r\n                   onPageChanget={this.onPageChanget}\r\n                   IsFollowingProgress={this.props.IsFollowingProgress}\r\n                   setIsFollowingProgress={this.props.setIsFollowingProgress}\r\n                   isFollow={this.props.isFollow}\r\n                   />\r\n        </>\r\n    }\r\n}\r\n\r\nexport const ViewFriendsContainer:any = compose(/*WithAuthRedirect,*/connect(mapStateToProps, {\r\n\r\n    follower:followTC,\r\n    unfollow: unFollowTC,\r\n    setUsers:setUsersAC,\r\n    SetCurrentPage:setCurrentPageAC,\r\n    setTotalUsersCount: setTotalUsersCountAC,\r\n    setIsFollowingProgress: setUserIdForDisabledAC,\r\n    toogleIsFetching:toggleIsFetchingAC,\r\n    getUsersThunk: getUsersTC,\r\n    FiendsAC: toggleFollowAC\r\n    //getUsersThunk: getFriendsThunkCreater\r\n}))(UsersAPI)","import React, {useState} from 'react'\r\nimport s from \"./profile.module.scss\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport no_image from \"../../UI/assets/img/no_image.png\";\r\nimport {Preloader} from \"../Common/pr/Preloader\";\r\nimport {ViewProfile} from \"./menu-items/view-profile/view-profile\";\r\nimport {ViewFrinds} from \"./menu-items/view-friends/view-friends\";\r\nimport {ViewContacts} from \"./menu-items/view-contacts/view-contacts\";\r\nimport {AboutMe} from \"./menu-items/about-me/about-me\";\r\nimport {ViewFriendsContainer} from \"./menu-items/view-friends/view-friends-container\";\r\nimport c from \"../../UI/component/Nav/Nav.module.css\";\r\nimport style from \"../../UI/component/Profile/ProfileInfo/ProfileInfo.module.css\";\r\nimport {AiOutlineMail} from \"react-icons/ai\";\r\nimport {AiOutlineUser} from \"react-icons/ai\";\r\nimport {FaUserFriends, GrContactInfo, SiAboutDotMe, SiMailDotRu} from \"react-icons/all\";\r\n\r\nexport const Profile = (props: any) => {\r\n    let [x, setX] = useState(true)\r\n    let [y, setY] = useState(false)\r\n    let [z, setZ] = useState(false)\r\n    let [w, setW] = useState(false)\r\n\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    } else {\r\n        return <div className={s.block}>\r\n\r\n            <div className={s.backgroundImage}>\r\n                <div className={s.topPart}>\r\n                    <div className={s.avaName}>\r\n                        <div className={s.avatarContainer}>\r\n                            {props.profile.photos.large === null\r\n                                ? <img className={s.avatar} src={no_image}/>\r\n                                : <img className={s.avatar} src={props.profile.photos.large}/>}\r\n                        </div>\r\n                        <div className={s.name}> {props.profile.fullName}\r\n                        </div>\r\n\r\n\r\n\r\n                    </div>\r\n\r\n                    <div className={s.buttons}>\r\n                        {/*{ <div className={s.buttonItem}*/}\r\n                        {/*        onClick={() => {*/}\r\n                        {/*            props.follower(props.profile.userId)*/}\r\n                        {/*        }*/}\r\n                        {/*        }>Follow</div>}*/}\r\n                        {!props.ownerId && <NavLink to={'/messages/' + props.profile.userId} className={s.buttonItem}>\r\n                            <AiOutlineMail/>\r\n                        </NavLink>}\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={s.mainBlock}>\r\n                <div className={s.middlePart}>\r\n                    <div className={s.menu}>\r\n                        <div className={s.menuItem} onClick={() => {\r\n                            setX(true);\r\n                            setY(false);\r\n                            setZ(false);\r\n                            setW(false)\r\n                        }}><AiOutlineUser/>\r\n                        </div>\r\n                        <div className={s.menuItem} onClick={() => {\r\n                            setX(false);\r\n                            setY(true);\r\n                            setZ(false);\r\n                            setW(false)\r\n                        }}><SiMailDotRu/>\r\n                        </div>\r\n                        <div className={s.menuItem} onClick={() => {\r\n                            setX(false);\r\n                            setY(false);\r\n                            setZ(true);\r\n                            setW(false)\r\n\r\n                        }}><SiAboutDotMe/>\r\n                        </div>\r\n\r\n                        {props.ownerId && <div className={s.menuItem} onClick={() => {\r\n                            setX(false);\r\n                            setY(false);\r\n                            setZ(false);\r\n                            setW(true)\r\n                        }}><FaUserFriends/>\r\n                        </div>}\r\n                    </div>\r\n                </div>\r\n                <div className={s.bottomPart}>\r\n                    <div className={s.menuSelection}>\r\n                        {/* посмотреть профиль*/}\r\n                        {x && <ViewProfile profile={props.profile}/>}\r\n                        {/*посмотреть друзей*/}\r\n                        {w && <ViewFriendsContainer/>}\r\n                        {/*мои соц сети*/}\r\n                        {y && <ViewContacts profile={props.profile}/>}\r\n                        {/*обо мне*/}\r\n                        {z && <AboutMe profile={props.profile}/>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\n","import React from \"react\";\r\nimport {Profile} from \"./profile\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {StoreStateType} from \"../../BLL/store\";\r\nimport {\r\n    getOneProfileTC,\r\n    getStatusTC,\r\n    updateInfoProfileTC,\r\n    updatePhotoTC,\r\n    updateStatusTC\r\n} from \"../../BLL/Reducers/profile-reducer\";\r\nimport {followTC} from \"../../BLL/Reducers/users-reducer\";\r\n\r\n\r\nclass ProfileConteiner extends React.Component<any, any>{\r\n// match из  withRouter  взялся\r\n    refreshProfile(){\r\n        let ownerId =this.props.match.params.userID\r\n        // если айди не найден, то задаем айди авторизированного пользователя\r\n        if (!ownerId){\r\n            ownerId=this.props.authorizationUserId\r\n            // если пользователь не авторизирован, то в айди ничего нет и мы редеректемся на страницу логина\r\n            if(!ownerId){\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n        this.props.getOneProfile(ownerId)\r\n        this.props.getStatus(ownerId)\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        this.refreshProfile()\r\n    }\r\n    componentDidUpdate(prevProps: Readonly<any>, prevState: Readonly<any>, snapshot?: any) {\r\n        if(this.props.match.params.userID !==prevProps.match.params.userID )\r\n            this.refreshProfile()\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Profile profile={this.props.profile}\r\n                     ownerId={!this.props.match.params.userID}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}\r\n                     updatePhoto={this.props.updatePhoto}\r\n                     updateInfoProfile={this.props.updateInfoProfile}\r\n                     follower={this.props.follower}/>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nlet mapStateToprops=(state:StoreStateType):any=>{\r\n    return{\r\n        profile: state.profile.profile,\r\n        status: state.profile.status,\r\n        authorizationUserId: state.auth.userId,\r\n        isAuthorization: state.auth.isAuthorization\r\n\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch: any)  => {\r\n    return {\r\n        getOneProfile: (id: number) => {\r\n            dispatch(getOneProfileTC(id))\r\n        },\r\n        getStatus: (id: number) => {\r\n            dispatch(getStatusTC(id))\r\n        },updateStatus: (status: string) => {\r\n            dispatch(updateStatusTC(status))\r\n        },updatePhoto: (file: any) => {\r\n            dispatch(updatePhotoTC(file))\r\n        },\r\n        updateInfoProfile: (profile: any) => {\r\n            dispatch(updateInfoProfileTC(profile))\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst ProfileContainerConnect:any= compose(\r\n    connect (mapStateToprops,{\r\n        follower:followTC,\r\n        getOneProfile:getOneProfileTC,\r\n        getStatus:getStatusTC,\r\n        updateStatus: updateStatusTC,\r\n        updatePhoto: updatePhotoTC,\r\n        updateInfoProfile: updateInfoProfileTC\r\n    })\r\n    ,withRouter\r\n)(ProfileConteiner)\r\nexport default ProfileContainerConnect\r\n"],"sourceRoot":""}
{"version":3,"sources":["BLL/Reducers/dialogs-reducer.tsx","DAL/api.tsx","ui-new/header/header.module.scss","ui-new/nav/nav.module.scss","ui-new/login-page/login-form.module.scss","ui-new/users-page/one-user/one-user.module.scss","reportWebVitals.ts","BLL/Reducers/users-reducer.tsx","BLL/Reducers/authorization-reducer.tsx","BLL/Reducers/app-reducer.tsx","BLL/store.tsx","ui-new/header/header.tsx","ui-new/nav/nav.tsx","ui-new/login-page/login-form.tsx","ui-new/login-page/login-container.tsx","ui-new/login-page/login.tsx","BLL/users-selectors.tsx","ui-new/users-page/one-user/oneUser.tsx","ui-new/users-page/users.tsx","ui-new/users-page/users-container.tsx","UI/HOC/WithSuspense.tsx","ui-new/App.tsx","index.tsx","UI/component/Common/FormsControl/forms.module.css","ui-new/users-page/users.module.scss","UI/assets/img/looading.gif","ui-new/Common/pr/Preloader.tsx","UI/component/Common/FormsControl/FormsControl.tsx","UI/utils/validators/validators.tsx","ui-new/login-page/login.module.scss","ui-new/app.module.scss","ui-new/Common/pr/priloader.module.scss","UI/assets/img/no_image.png","BLL/Reducers/profile-reducer.tsx"],"names":["GET_SELECTED_DIALOG","GET_USERS_TALKED_WITH","initialState","recipientId","messages","oneMessage","users","dialogReducer","state","action","type","oldMessages","items","concat","usersArray","getSelectedDialogTC","id","currentPages","pagesize","dispatch","a","messagesAPI","getSelectedDialog","response","getSelectedDialogAC","senMessageTC","userId","body","sendMessage","data","resultCode","getUsersTalkedWithTC","getUsersTalkedWith","getUsersTalkedWithAC","instanse","axios","create","withCredentials","headers","baseURL","usersAPI","getUsers","get","then","follow","post","getProfile","profileAPI","unFollow","delete","getFriendsUsers","getStatus","userID","updateStatus","statusText","put","status","updatePhoto","file","formData","FormData","append","updateInfoProfile","profile","authorizationAPI","me","login","email","password","rememberMe","captcha","logout","securityAPI","getCaptchaUrl","module","exports","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","FOLLOW","UN_FOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","SET_USERID_FOR_DISABLE","TOGGLE_IS_FOLLOW","usersData","pageSize","totalUsersCount","isFetching","userIdForDisabled","isFollow","followAC","unFollowAC","setUsersAC","setTotalUsersCountAC","total","totalCounter","setUserIdForDisabledAC","IsFollowingProgress","toggleIsFetchingAC","SET_USER_DATA","GET_CAPTCHA","isAuthorization","captchaURl","getAuthorizationDataTC","dispath","setAuthorizationDataAC","getCaptchaTC","captchaUrl","url","setCaptchaAC","SET_INITIALIZED","initialized","initializedSuccessAC","reducers","combineReducers","ProfileReducer","dialog","usersPage","map","x","followed","auth","form","formReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddlewere","Header","className","s","block","icon","iconNetwork","src","container","info","ava","name","unLog","to","btn","Nav","item","buttonItem","maxLengthValidator","maxLength","LoginReduxForm","reduxForm","handleSubmit","error","onSubmit","loginForm","Field","placeholder","component","Input","validate","requiredField","props","input","checkbox","createFormField","formSunnierError","button","LoginContainer","connect","isAuth","errorMessages","length","stopSubmit","_error","loginTC","rightPart","pathContainer","firstText","secondText","oneAdvantage","description","title","desc","leftPart","welcome","console","log","getUsersCreateSelector","createSelector","filter","getPageSize","getTotalUsersCount","getCurrentPages","getIsFetching","getIsFollowingProgress","OneUser","user","friendContainer","photos","small","no_image","butt","butItem","disabled","some","onClick","unfollow","follower","viewProfileFriend","Users","pagesCount","Math","ceil","pages","i","push","search","inp","spn","viewFriends","UsersAPI","onPageChanget","pageNumber","getUsersThunk","SetCurrentPage","this","prevProps","prevState","snapshot","Preloader","setIsFollowingProgress","FiendsAC","React","Component","UsersContainer","setUsers","setTotalUsersCount","toogleIsFetching","totalCount","WithSuspenseHOC","Suspense","fallback","MessagesContainer","lazy","ProfileContainerConnect","App","catchAllUnhandleError","promiseRejectEvent","alert","initializeApp","addEventListener","removeEventListener","path","render","AppContainer","withRouter","promise","Promise","all","ReactDOM","document","getElementById","looading","pril","Textarea","meta","hasError","touched","style","formControl","validator","text","value","ADD_POST","DELETE_POST","SET_USER_PROFILE","SET_STATUS","SAVE_PHOTO","postsDataArray","likeCount","massages","getOneProfileTC","setOneProfileAC","getStatusTC","updateStatusAC","updateStatusTC","updatePhotoTC","updatePhotoAC","updateInfoProfileTC","getState","reject"],"mappings":"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","file":"static/js/main.0fb07e1f.chunk.js","sourcesContent":["import {messagesAPI} from \"../../DAL/api\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nconst GET_SELECTED_DIALOG = \"GET_SELECTED_DIALOG\"\r\nconst GET_USERS_TALKED_WITH = \"GET_USERS_TALKED_WITH\"\r\n//type for Reduces\r\ntype GetSelectedDialogType = {\r\n    type: \"GET_SELECTED_DIALOG\"\r\n    items: any;\r\n}\r\ntype GetUsersTalkedWithType = {\r\n    type: \"GET_USERS_TALKED_WITH\"\r\n    usersArray: any;\r\n}\r\n\r\n//type for Action\r\ntype ActionType = GetSelectedDialogType | GetUsersTalkedWithType\r\n\r\n//initial State\r\ntype StateType = {\r\n    recipientId: number | null\r\n    messages: any\r\n    oneMessage: string\r\n    users: any\r\n}\r\nlet initialState: StateType = {\r\n    recipientId: null,\r\n    messages: null,\r\n    oneMessage: \"\",\r\n    users: null\r\n}\r\n\r\nexport const dialogReducer = (state: StateType = initialState, action: ActionType): StateType => {\r\n    if (state) {\r\n        switch (action.type) {\r\n            case GET_SELECTED_DIALOG:\r\n                let oldMessages = {...state}\r\n                if (state.messages !== null) {\r\n                    return {\r\n                        ...state,\r\n                        messages: action.items.concat(oldMessages.messages)\r\n                    }\r\n                } else return {\r\n                    ...state,\r\n                    messages: action.items\r\n                }\r\n            case GET_USERS_TALKED_WITH:\r\n                return {\r\n                    ...state,\r\n                    users: action.usersArray\r\n                }\r\n\r\n            default:\r\n                return state;\r\n        }\r\n    } else return state\r\n}\r\n\r\n\r\n//Thunk Creator\r\n// получить с сервера список сообщений с выбранным пользователем\r\nexport const getSelectedDialogTC = (id: any, currentPages: any, pagesize: any) => async (dispatch: Dispatch) => {\r\n    let response = await messagesAPI.getSelectedDialog(id, currentPages, pagesize)\r\n    dispatch(getSelectedDialogAC(response.items));\r\n}\r\n// отправить сообщение на сервер\r\nexport const senMessageTC = (userId: any, body: string) => async (dispatch: any) => {\r\n    let response = await messagesAPI.sendMessage(userId, body)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getSelectedDialogTC(userId, 1, 20))\r\n    }\r\n}\r\n// получить список пользователей с кем общался\r\nexport const getUsersTalkedWithTC = () => async (dispatch: Dispatch) => {\r\n    let response = await messagesAPI.getUsersTalkedWith()\r\n    dispatch(getUsersTalkedWithAC(response));\r\n\r\n}\r\n\r\n// Action Creator\r\nexport const getSelectedDialogAC = (items: any): GetSelectedDialogType => ({\r\n    type: GET_SELECTED_DIALOG,\r\n    items: items\r\n})\r\nexport const getUsersTalkedWithAC = (users: any): GetUsersTalkedWithType => ({\r\n    type: GET_USERS_TALKED_WITH,\r\n    usersArray: users\r\n})\r\n\r\n\r\n\r\n\r\n","import axios from \"axios\";\r\n\r\n\r\nconst instanse = axios.create({\r\n    withCredentials: true,\r\n    headers: {\r\n       \"API-KEY\": \"603ef8c0-4933-4294-ab5f-b170d3ebe6d8\"\r\n       //  \"API-KEY\": \"48cd781d-ab35-4a63-97ba-b184f71ed662\"\r\n    },\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/'\r\n})\r\n\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPages: any, pagesize: any) {\r\n        return (\r\n            instanse.get(`users?page=${currentPages}&count=${pagesize}`, {})\r\n                .then(response => response.data)\r\n        )\r\n    },\r\n    follow(id: any) {\r\n        return (\r\n            instanse.post(`follow/${id}`, {}, {})\r\n                .then(response => response.data)\r\n        )\r\n    },\r\n    getProfile(id: any) {\r\n        return profileAPI.getProfile(id)\r\n    },\r\n    unFollow(id: any) {\r\n        return (\r\n            instanse.delete(`follow/${id}`, {})\r\n                .then(response => response.data)\r\n        )\r\n    },\r\n    getFriendsUsers(currentPages: any, pagesize: any) {\r\n        return (\r\n            instanse.get(`users?page=${currentPages}&count=${pagesize}&friend=true`, {})\r\n                .then(response => response.data)\r\n        )\r\n    }\r\n\r\n}\r\nexport const profileAPI = {\r\n    getProfile(id: any) {\r\n        return (\r\n            instanse.get(`profile/${id}`)\r\n        )\r\n    },\r\n    getStatus(userID: any) {\r\n        return (\r\n            instanse.get(`/profile/status/${userID}`)\r\n        )\r\n    },\r\n    updateStatus(statusText: string) {\r\n        return (\r\n            instanse.put(`/profile/status`, {status: statusText})\r\n        )\r\n    },\r\n    updatePhoto(file: any) {\r\n        let formData = new FormData();\r\n        formData.append(\"image\", file)\r\n        return (instanse.put(`profile/photo`, formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            })\r\n        )\r\n    },\r\n    updateInfoProfile(profile: any) {\r\n        return instanse.put(`/profile`, profile)\r\n    }\r\n}\r\nexport const authorizationAPI = {\r\n    me() {\r\n        return (\r\n            instanse.get(`auth/me`, {})\r\n        )\r\n    },\r\n    login(email: string, password: string, rememberMe: boolean = false, captcha: any) {\r\n        return (\r\n            instanse.post(`auth/login`, {email, password, rememberMe, captcha}, {})\r\n\r\n        )\r\n    },\r\n    logout() {\r\n        return (\r\n            instanse.delete(`auth/login`, {})\r\n        )\r\n    }\r\n}\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return (\r\n            instanse.get(`security/get-captcha-url`)\r\n        )\r\n    }\r\n}\r\nexport const messagesAPI = {\r\n    getSelectedDialog(userId: any,currentPages: any, pagesize: any ) {\r\n        return (\r\n            instanse.get(`dialogs/${userId}/messages?page=${currentPages}&count=${pagesize}`, {})\r\n                .then(response => response.data)\r\n        )\r\n    },\r\n    sendMessage(userId: any, body: string) {\r\n        return (\r\n            instanse.post(`dialogs/${userId}/messages`, {body}, {})\r\n        )\r\n    },\r\n    getUsersTalkedWith() {\r\n        return (\r\n            instanse.get(`dialogs`, {})\r\n                .then(response => response.data)\r\n        )\r\n    }\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"header_block__GGVhJ\",\"icon\":\"header_icon__2UwuE\",\"iconNetwork\":\"header_iconNetwork__2-Iwd\",\"container\":\"header_container__YiPjg\",\"info\":\"header_info__2xgWL\",\"ava\":\"header_ava__1FFaj\",\"unLog\":\"header_unLog__104om\",\"btn\":\"header_btn__2nH68\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"nav_block__1GB-e\",\"container\":\"nav_container__2NfBV\",\"item\":\"nav_item__2Fqq1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginForm\":\"login-form_loginForm__3Nfi0\",\"input\":\"login-form_input__624wX\",\"rememberMe\":\"login-form_rememberMe__2m9Np\",\"checkbox\":\"login-form_checkbox__2xz7W\",\"captcha\":\"login-form_captcha__lzo6i\",\"button\":\"login-form_button__1LSoq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendContainer\":\"one-user_friendContainer__1VDfw\",\"ava\":\"one-user_ava__36pc4\",\"name\":\"one-user_name__eLmQa\",\"butt\":\"one-user_butt__n9E_x\",\"butItem\":\"one-user_butItem__3lgTc\",\"viewProfileFriend\":\"one-user_viewProfileFriend__104mU\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {usersAPI} from \"../../DAL/api\";\r\n\r\nconst FOLLOW = \"FOLLOW\"\r\nconst UN_FOLLOW = \"UN_FOLLOW\"\r\nconst SET_USERS = \"SET_USERS\"\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\"\r\nconst SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\"\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\"\r\nconst SET_USERID_FOR_DISABLE = \"SET_USERID_FOR_DISABLE\"\r\nconst TOGGLE_IS_FOLLOW = \"TOGGLE_IS_FOLLOW\"\r\n\r\n\r\n//type for Reduces\r\ntype FollowType = {\r\n    type: \"FOLLOW\"\r\n    userId: number\r\n}\r\ntype UNfollowType = {\r\n    type: \"UN_FOLLOW\"\r\n    userId: number\r\n}\r\ntype SetUsersType = {\r\n    type: \"SET_USERS\"\r\n    users: []\r\n}\r\ntype SetCurrentPageType = {\r\n    type: \"SET_CURRENT_PAGE\"\r\n    currentPages: number\r\n}\r\ntype SetTotalUsersCountACType = {\r\n    type: \"SET_TOTAL_USERS_COUNT\"\r\n    totalCounter: number\r\n}\r\ntype ToggleIsFetchingType = {\r\n    type: \"TOGGLE_IS_FETCHING\"\r\n    isFetching: boolean\r\n}\r\ntype SetUserIdForDisableType = {\r\n    type: \"SET_USERID_FOR_DISABLE\"\r\n    IsFollowingProgress: boolean\r\n    userId: any\r\n}\r\ntype ToggleIsFollowType = {\r\n    type: \"TOGGLE_IS_FOLLOW\"\r\n    follow: boolean\r\n}\r\n\r\n//type for Action\r\ntype ActionType =\r\n    FollowType\r\n    | UNfollowType\r\n    | SetUsersType\r\n    | SetCurrentPageType\r\n    | SetTotalUsersCountACType\r\n    | ToggleIsFetchingType\r\n    | SetUserIdForDisableType\r\n    | ToggleIsFollowType\r\n\r\n//initial State type\r\nexport type OneUsersType = {\r\n    id: number,\r\n    followed: boolean,\r\n    name: string,\r\n    status: string,\r\n    photos: any\r\n    uniqueUrlName: any\r\n}\r\ntype UsersType = {\r\n    usersData: Array<OneUsersType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPages: number\r\n    isFetching: boolean\r\n    userIdForDisabled: any\r\n    isFollow: boolean\r\n}\r\nlet initialState: UsersType = {\r\n    usersData: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPages: 1,\r\n    isFetching: true,\r\n    userIdForDisabled: [],\r\n    isFollow: false\r\n}\r\n\r\nexport const UsersReducer = (state: UsersType = initialState, action: ActionType): UsersType => {\r\n    if (state) {\r\n        switch (action.type) {\r\n            case TOGGLE_IS_FOLLOW:\r\n                return {\r\n                    ...state,\r\n                    isFollow: action.follow\r\n                }\r\n            case FOLLOW:\r\n                return {\r\n                    ...state,\r\n                    usersData: state.usersData.map((x) => {\r\n                        if (x.id === action.userId) {\r\n                            return {...x, followed: true}\r\n                        } else return x\r\n                    })\r\n                }\r\n            case UN_FOLLOW:\r\n                return {\r\n                    ...state,\r\n                    usersData: state.usersData.map((x) => {\r\n                        if (x.id === action.userId) {\r\n                            return {...x, followed: false}\r\n                        } else return x\r\n                    })\r\n                }\r\n            case SET_USERS:\r\n                return {...state, usersData: [...action.users]}\r\n            case SET_CURRENT_PAGE:\r\n                return {...state, currentPages: action.currentPages}\r\n            case SET_TOTAL_USERS_COUNT:\r\n                return {...state, totalUsersCount: action.totalCounter}\r\n            case TOGGLE_IS_FETCHING:\r\n                return {...state, isFetching: action.isFetching}\r\n            case SET_USERID_FOR_DISABLE:\r\n                return {\r\n                    ...state,\r\n                    userIdForDisabled: action.IsFollowingProgress\r\n                        ? [action.userId]\r\n                        : []\r\n                }\r\n            default:\r\n                return state;\r\n        }\r\n    } else return state\r\n}\r\n\r\n//Thunk Creator\r\n// делает запрос на сервер, возвращет всех пользователей\r\nexport const getUsersTC = (currentPages: number, pagesize: number, follow: boolean) => {\r\n    return async (dispatch: any) => {\r\n        dispatch(toggleIsFetchingAC(true))\r\n        let response;\r\n        // если ищем друзей, то выполняем один запрос на серве\r\n        if (follow) {\r\n            response = await usersAPI.getFriendsUsers(currentPages, pagesize)\r\n        } else {\r\n            response = await usersAPI.getUsers(currentPages, pagesize)\r\n        }\r\n        dispatch(toggleIsFetchingAC(false))\r\n        dispatch(setUsersAC(response.items))\r\n        dispatch(setTotalUsersCountAC(response.totalCount))\r\n    }\r\n}\r\n// делает запрос на сервер, меняет на сервере свойство фоллоу на true\r\nexport const followTC = (id: any) => {\r\n    return async (dispatch: any) => {\r\n        dispatch(setUserIdForDisabledAC(true, id))\r\n        let response = await usersAPI.follow(id)\r\n        if (response.resultCode === 0) {\r\n            dispatch(followAC(id))\r\n        }\r\n        dispatch(setUserIdForDisabledAC(false, id))\r\n    }\r\n}\r\n// делает запрос на сервер, удаляет на сервере свойство фоллоу(ставит по умолчанию false)\r\nexport const unFollowTC = (id: any) => {\r\n    return async (dispatch: any) => {\r\n        dispatch(setUserIdForDisabledAC(true, id))\r\n        let response = await usersAPI.unFollow(id)\r\n        if (response.resultCode === 0) {\r\n            dispatch(unFollowAC(id))\r\n        }\r\n        dispatch(setUserIdForDisabledAC(false, id))\r\n    }\r\n}\r\n\r\n//ActionCreator\r\nexport const followAC = (userId: number): FollowType =>\r\n    ({type: FOLLOW, userId})\r\nexport const unFollowAC = (userId: number): UNfollowType =>\r\n    ({type: UN_FOLLOW, userId})\r\n\r\n\r\nexport const setUsersAC = (users: []): SetUsersType =>\r\n    ({type: SET_USERS, users})\r\nexport const setCurrentPageAC = (currentPages: number): SetCurrentPageType =>\r\n    ({type: SET_CURRENT_PAGE, currentPages})\r\nexport const setTotalUsersCountAC = (total: number): SetTotalUsersCountACType =>\r\n    ({\r\n        type: SET_TOTAL_USERS_COUNT,\r\n        totalCounter: total\r\n    })\r\n// isFoll.Pr true, то в IsFollowingProgress в стейте записываем айди выбранного пользователя, иначе пустой массив\r\nexport const setUserIdForDisabledAC = (IsFollowingProgress: boolean, userId: any): SetUserIdForDisableType =>\r\n    ({\r\n        type: SET_USERID_FOR_DISABLE,\r\n        IsFollowingProgress: IsFollowingProgress,\r\n        userId\r\n    })\r\n\r\n\r\n// меняем в стейте значение isFetching. тру, значит, еще в процессе загрузки.\r\nexport const toggleIsFetchingAC = (isFetching: boolean): ToggleIsFetchingType =>\r\n    ({\r\n        type: TOGGLE_IS_FETCHING,\r\n        isFetching: isFetching\r\n    })\r\nexport const toggleFollowAC = (follow: boolean): ToggleIsFollowType =>\r\n    ({type: TOGGLE_IS_FOLLOW, follow})\r\n\r\n","import {authorizationAPI, securityAPI} from \"../../DAL/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nconst SET_USER_DATA = \"SET_USER_DATA\"\r\nconst GET_CAPTCHA = \"CAPTCHA\"\r\n\r\n//type for Reduces\r\ntype SetUserType = {\r\n    type: \"SET_USER_DATA\"\r\n    userId: any,\r\n    email: any,\r\n    login: any,\r\n    isAuthorization: any\r\n}\r\ntype GetCaptchaType = {\r\n    type: \"CAPTCHA\"\r\n    captchaURl: any\r\n}\r\n\r\n\r\n///////type for Action\r\ntype ActionType = SetUserType | GetCaptchaType\r\n\r\n/////initial State\r\ntype AuthorizationStateType = {\r\n    userId: number | null\r\n    email: string | null\r\n    login: boolean | null\r\n    isAuthorization: boolean | null\r\n    captchaURl: any\r\n}\r\n\r\nlet initialState: AuthorizationStateType = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuthorization: false,\r\n    captchaURl: null\r\n}\r\n\r\nexport const AuthorizationReducer = (state: AuthorizationStateType = initialState, action: ActionType): AuthorizationStateType => {\r\n    if (state) {\r\n        switch (action.type) {\r\n            case SET_USER_DATA:\r\n                return {\r\n                    ...state,\r\n                    userId: action.userId,\r\n                    email: action.email,\r\n                    login: action.login,\r\n                    isAuthorization: action.isAuthorization\r\n                }\r\n                case GET_CAPTCHA:\r\n                return {\r\n                    ...state,\r\n                    captchaURl: action.captchaURl\r\n                }\r\n            default:\r\n                return state;\r\n        }\r\n    } else return state\r\n}\r\n//Thunk Creator\r\n// авторизируемся\r\nexport const loginTC = (email: string, password: string, rememberMe: boolean, captcha: any) => async (dispath: any) => {\r\n    let response = await authorizationAPI.login(email, password, rememberMe, captcha)\r\n    // если авт прошла успешно, то выполняем это\r\n    if (response.data.resultCode === 0) {\r\n        dispath(getAuthorizationDataTC())\r\n    }\r\n    else {\r\n        if (response.data.resultCode === 10){\r\n            dispath(getCaptchaTC())\r\n        }\r\n        let errorMessages = response.data.messages.length > 0\r\n            ? response.data.messages[0]\r\n            : \"some error\"\r\n        dispath(stopSubmit(\"Login\", {_error: errorMessages}))\r\n    }\r\n}\r\n//получаем данные о пользователе, который авторизировался\r\nexport const getAuthorizationDataTC = () => async (dispath: Dispatch) => {\r\n    // т к авт прошла успешно, то делаем запрос, от куда берем даные текущего пользователя\r\n    let response = await authorizationAPI.me()\r\n    if (response.data.resultCode === 0) {\r\n        let {id, email, login} = response.data.data\r\n        dispath(setAuthorizationDataAC(id, email, login, true))\r\n    }\r\n}\r\n//делаем запрос на сервер, удаляем свои данные для автаризации\r\nexport const logoutTC = () => async (dispath: Dispatch) => {\r\n    let response = await authorizationAPI.logout()\r\n    if (response.data.resultCode === 0) {\r\n        dispath(setAuthorizationDataAC(null, null, null, false))\r\n    }\r\n}\r\n// делаем запрос на сервер, получаем картинку антибот\r\nexport const getCaptchaTC = () => async (dispath: Dispatch) => {\r\n    let response = await securityAPI.getCaptchaUrl()\r\n    let captchaUrl = response.data.url\r\n    debugger\r\n    dispath(setCaptchaAC(captchaUrl))\r\n}\r\n\r\n//ACTION CREATOR\r\n// меняем данные в в стейте на данные авторизированного пользователя\r\nexport const setAuthorizationDataAC = (userId: number | null, email: string | null, login: string | null, isAuthorization: boolean | null): SetUserType => ({\r\n    type: SET_USER_DATA,\r\n    userId: userId,\r\n    email: email,\r\n    login: login,\r\n    isAuthorization: isAuthorization\r\n})\r\n// добовляем капчу, пришедшую из сервера, в наш стейт\r\nexport const setCaptchaAC = (captchaURl: any): GetCaptchaType => ({\r\n    type: GET_CAPTCHA,\r\n    captchaURl: captchaURl\r\n})","import {getAuthorizationDataTC} from \"./authorization-reducer\";\r\n\r\nconst SET_INITIALIZED = \"SET_INITIALIZED\"\r\n\r\n//type for Reduces\r\ntype InitializedType = {\r\n    type: \"SET_INITIALIZED\"\r\n}\r\n\r\n//type for Action\r\ntype ActionType = InitializedType\r\n\r\n//initial State\r\ntype StateType = {\r\n    initialized: boolean\r\n}\r\nlet initialState: StateType = {\r\n    initialized: false\r\n}\r\n\r\nexport const AppReducer = (state: StateType = initialState, action: ActionType): StateType => {\r\n    if (state) {\r\n        switch (action.type) {\r\n            case SET_INITIALIZED:{\r\n                return {\r\n                    ...state,\r\n                    initialized: true\r\n                }\r\n            }\r\n            default:\r\n                return state;\r\n        }\r\n    }\r\n    else return state\r\n}\r\n\r\n//Thunk Creator\r\nexport const initializeTC = () => (dispath: any) => {\r\n   let promise= dispath(getAuthorizationDataTC());\r\n    Promise.all([promise]).then(()=>{\r\n        dispath(initializedSuccessAC());\r\n    })\r\n}\r\n\r\n// Action Creator\r\nexport const initializedSuccessAC = (): InitializedType => ({type: SET_INITIALIZED})\r\n\r\n\r\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport {ProfileReducer} from \"./Reducers/profile-reducer\";\r\nimport {UsersReducer} from \"./Reducers/users-reducer\";\r\nimport {AuthorizationReducer} from \"./Reducers/authorization-reducer\";\r\nimport thunkMiddlewere from \"redux-thunk\";//thunk as thunkMiddleWere\r\nimport  {reducer as formReducer} from 'redux-form'\r\nimport {AppReducer} from \"./Reducers/app-reducer\";\r\nimport {dialogReducer} from \"./Reducers/dialogs-reducer\";\r\n\r\n\r\nexport const reducers = combineReducers(\r\n    {\r\n        profile: ProfileReducer,\r\n        dialog: dialogReducer,\r\n        usersPage: UsersReducer,\r\n        auth: AuthorizationReducer,\r\n        form: formReducer,\r\n        app: AppReducer\r\n    }\r\n)\r\n\r\nexport type StoreStateType = ReturnType<typeof reducers>\r\n\r\nconst composeEnhancers = (window && (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\nexport const store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddlewere)));\r\n\r\n// @ts-ignore\r\nwindow.store = store\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport s from \"./header.module.scss\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <div className={s.block}>\r\n\r\n            <div className={s.icon}>\r\n                <img className={s.iconNetwork}\r\n                     src={\"https://mythemestore.com/beehive-preview/wp-content/uploads/2020/07/logo-icon.svg\"}/>\r\n            </div>\r\n            <div className={s.container}>\r\n                <div className={s.info}>\r\n                    <div className={s.ava}></div>\r\n                    <div className={s.name}>Anastasia Verich</div>\r\n                </div>\r\n                <div className={s.unLog}>\r\n                    <NavLink to=\"/*\" className={s.btn}>\r\n                        Un login\r\n                    </NavLink></div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport s from \"./nav.module.scss\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\n\r\nexport const Nav =()=> {\r\n    return (<div className={s.block}>\r\n<div className={s.container}>\r\n    <div className={s.item}>\r\n        <NavLink to=\"/profile\" className={s.buttonItem}>\r\n            Profile\r\n        </NavLink>\r\n    </div>\r\n    <div className={s.item}>\r\n        <NavLink to=\"/messages\" className={s.buttonItem}>\r\n            Messages\r\n        </NavLink>\r\n    </div>\r\n    <div className={s.item}>\r\n        <NavLink to=\"/users\" className={s.buttonItem}>\r\n            Users\r\n        </NavLink>\r\n    </div>\r\n    <div className={s.item}>Set</div>\r\n\r\n</div>\r\n    </div>)\r\n}","import React from 'react'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {createFormField, Input} from \"../../UI/component/Common/FormsControl/FormsControl\";\r\nimport {maxLength, requiredField} from \"../../UI/utils/validators/validators\";\r\nimport s from \"./login-form.module.scss\";\r\n\r\nconst maxLengthValidator = maxLength(50)\r\n\r\nconst LoginForm = ({handleSubmit, error, x}: any) => {\r\n    return (\r\n/*        В пропсах теперь нам очень много всего приходит после оборачивания компоненты с формой в HOC.\r\n        В т.ч. метод handleSubmit, который позволяет не перезагружать страницу при отправке.*/\r\n        <form onSubmit={handleSubmit} className={s.loginForm}>\r\n                <Field placeholder={\"Email\"}\r\n                       component={Input}\r\n                       name={\"email\"}\r\n                       validate={[requiredField, maxLengthValidator]}\r\n                       props={{ className: s.input }}/>\r\n{/*Все поля в форме меняем на компоненты Field, которые пришли к нам из библиотеки, с указанием component аналогично пропсам*/}\r\n                <Field placeholder={\"Password\"}\r\n                       component={Input}\r\n                       name={\"password\"}\r\n                       validate={[requiredField, maxLengthValidator]}\r\n                       props={{ className: s.input }}/>\r\n            <div className={s.rememberMe}>\r\n                <Field type={\"checkbox\"}\r\n                       component={Input}\r\n                       name={\"rememberMe\"}\r\n                       validate={[maxLengthValidator]}\r\n                       props={{ className: s.checkbox }}/> Remember\r\n            </div>\r\n            {x && <img className={s.captcha} src={x}/>}\r\n\r\n            {x && createFormField(\"captcha URl\", \"captcha\", [], Input, {className: s.input})}\r\n\r\n            {error && <div className={s.formSunnierError}>\r\n                {error}\r\n            </div>}\r\n\r\n                <button className={s.button} type='submit' >Login</button>\r\n\r\n        </form>\r\n\r\n    )\r\n}\r\n//присвоили уникальное имя нашей новой форме в параметре – {form: 'login'}\r\n export const LoginReduxForm: any = reduxForm({\r\n    form: 'Login'\r\n})(LoginForm)\r\n\r\n// Теперь при вводе текста в форме в нашем стейте появляется временный объект login (имя нашей формы),\r\n// который содержит много объектов, свойствами которых являются наши поля (берутся по name).\r\n// Среди них объекты «было ли посещено поле», «было ли тронуто» и т.д.\r\n//     А также объект values, где в свойства (берутся по name) попадает вводимый текст.\r\n// можно вывести в консоль и посмотреть параметры, потом их использовать","import React from \"react\";\r\nimport {StoreStateType} from \"../../BLL/store\";\r\nimport {loginTC} from \"../../BLL/Reducers/authorization-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {Login} from \"./login\";\r\n\r\nconst mapStateToProps = (state: StoreStateType) => ({\r\n    isAuth: state.auth.isAuthorization,\r\n    captcha: state.auth.captchaURl\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n    return {\r\n        login: (email: string, password: string, rememberMe: boolean, captcha: any) => {\r\n            dispatch(loginTC(email, password, rememberMe, captcha))\r\n        }\r\n    }\r\n}\r\n\r\nexport const LoginContainer = connect(\r\n    mapStateToProps, mapDispatchToProps)(Login)","import React from 'react'\r\nimport s from \"./login.module.scss\"\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {LoginReduxForm} from \"./login-form\";\r\nimport {reset} from \"redux-form\";\r\n\r\nexport const Login = (props:any) => {\r\n/*    в месте вызова нашей компоненты с окончательной «редаксовской формой» теперь нужно повесить\r\n    произвольную функцию через onSubmit, которая соберет данные из полей из полей и обработает их при нажатии на кнопку:*/\r\n    const onSubmit = (formData: any) => {\r\n        console.log(formData)//здесь мы получаем данные с формы и будем из диспатчить потом\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha)\r\n        // dispatch(reset(\"profileAddPostForm\")) для очистки полей в форме, в кавычках имя формы\r\n    }\r\n    if (props.isAuth) return <Redirect to={\"/profile\"}/>\r\n\r\n    const on= false;\r\n\r\n    return (\r\n        <div className={s.block}>\r\n            <div className={s.container}>\r\n                <div className={s.rightPart}>\r\n                    <div className={s.pathContainer}>\r\n                        <div className={s.firstText}>Join the club</div>\r\n                        <div className={s.secondText}>Lorem ipsum dolor sit amet,\r\n                            consectetur adipiscing elit. Ut elit tellus, luctus.\r\n                        </div>\r\n                        <div className={s.oneAdvantage}>\r\n                            <div className={s.icon}> ♥icon</div>\r\n                            <div className={s.description}>\r\n                                <div className={s.title}>Community</div>\r\n                                <div className={s.desc}>At vero eos et accusamus et.</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className={s.oneAdvantage}>\r\n                            <div className={s.icon}/>\r\n                            <div className={s.description}>\r\n                                <div className={s.title}>Online shop</div>\r\n                                <div className={s.desc}>At vero eos et accusamus et.</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className={s.oneAdvantage}>\r\n                            <div className={s.icon}/>\r\n                            <div className={s.description}>\r\n                                <div className={s.title}>Job search</div>\r\n                                <div className={s.desc}>At vero eos et accusamus et.</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={s.leftPart}>\r\n                    <div className={s.pathContainer}>\r\n                        <img  className={s.iconNetwork} src={\"https://mythemestore.com/beehive-preview/wp-content/uploads/2020/07/logo-icon.svg\"}/>\r\n                        <div className={s.welcome}>Welcome</div>\r\n                        <LoginReduxForm onSubmit={onSubmit} x={props.captcha}/>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport { createSelector } from 'reselect';\r\n\r\nexport const getUsers=(state: any)=>{\r\n    return state.usersPage.usersData\r\n}\r\nexport const getUsersCreateSelector=createSelector(getUsers,(users)=>{\r\n    return users.filter((x:any)=>true)\r\n})\r\nexport const getPageSize=(state: any)=>{\r\n    return state.usersPage.pageSize\r\n}\r\nexport const getTotalUsersCount=(state: any)=>{\r\n    return state.usersPage.totalUsersCount\r\n}\r\nexport const getCurrentPages=(state: any)=>{\r\n    return state.usersPage.currentPages\r\n}\r\nexport const getIsFetching=(state: any)=>{\r\n    return state.usersPage.isFetching\r\n}\r\nexport const getIsFollowingProgress=(state: any)=>{\r\n    return state.usersPage.userIdForDisabled\r\n}\r\n","import s from \"./one-user.module.scss\";\r\nimport no_image from \"../../../UI/assets/img/no_image.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\nexport const OneUser = (props: any) => {\r\n    const user = props.user;\r\n    return (\r\n        <div className={s.friendContainer}>\r\n            <img className={s.ava}\r\n                 src={user.photos.small != null ? user.photos.small : no_image}/>\r\n\r\n            <div className={s.name}>{user.name}</div>\r\n            <div className={s.butt}>\r\n                {user.followed\r\n                    ?//arr.some возвращает true, если хотя бы для одного элемента массива условие верно\r\n                    //при раздизабл. кнопки к нам прихоидот пустой массив\r\n                    <button className={s.butItem}\r\n                            disabled={props.IsFollowingProgress.some((id: any) => id === user.id)}\r\n                            onClick={() => {\r\n                                props.unfollow(user.id)\r\n                            }\r\n                            }>Unfollow</button>\r\n                    :\r\n                    <button className={s.butItem}\r\n                            disabled={props.IsFollowingProgress.some((id: any) => id === user.id)}\r\n                            onClick={() => {\r\n                                props.follower(user.id)\r\n                            }\r\n                            }>Follow</button>}\r\n                <div className={s.butItem}> send sms</div>\r\n            </div>\r\n            <NavLink className={s.viewProfileFriend} to={'/profile/' + user.id}>\r\n                view profile\r\n            </NavLink>\r\n        </div>\r\n\r\n    )\r\n}","import React from 'react'\r\nimport s from \"./users.module.scss\"\r\nimport {OneUsersType} from \"../../BLL/Reducers/users-reducer\";\r\nimport {OneUser} from \"./one-user/oneUser\";\r\n\r\nexport const Users = (props:any) => {\r\n\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pagesize)\r\n    let pages = []\r\n\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    return (\r\n        <div className={s.block}>\r\n            {/*посмотреть друзей*/}\r\n            <div className={s.container}>\r\n                <div className={s.search}>\r\n                    <input className={s.inp}\r\n                           placeholder={\"Search Members\"}></input>\r\n                    <div className={s.spn}></div>\r\n                </div>\r\n                <div className={s.viewFriends}>\r\n                    {props.users.map((user: OneUsersType) =>\r\n                        <OneUser user={user}\r\n                                 unfollow={props.unfollow}\r\n                                 IsFollowingProgress={props.IsFollowingProgress}\r\n                                 follower={props.follower}\r\n                        />\r\n                    )\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    followTC, getUsersTC, toggleFollowAC,\r\n    setCurrentPageAC, toggleIsFetchingAC, setUserIdForDisabledAC,\r\n    setTotalUsersCountAC,\r\n    setUsersAC,\r\n    unFollowTC,\r\n    OneUsersType\r\n} from \"../../BLL/Reducers/users-reducer\";\r\nimport {StoreStateType} from \"../../BLL/store\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPages,\r\n    getIsFetching,\r\n    getIsFollowingProgress,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsersCreateSelector\r\n} from \"../../BLL/users-selectors\";\r\nimport {Users} from \"./users\";\r\nimport {Preloader} from \"../Common/pr/Preloader\";\r\n\r\n\r\nexport type MapStateToPropsType = {\r\n    users: OneUsersType[]\r\n    pagesize: number\r\n    totalUsersCount: number\r\n    currentPages: number\r\n    isFetching: boolean\r\n    IsFollowingProgress:boolean\r\n    isFollow: boolean\r\n}\r\nexport type MapDispatchTopropsType = {\r\n    follower: (id: number) => void\r\n    unfollow: (id: number) => void\r\n    setUsers: (x: []) => void\r\n    SetCurrentPage: (x: number) => void\r\n    setTotalUsersCount: (x: number) => void\r\n    toogleIsFetching: (x: boolean) => void\r\n    setIsFollowingProgress: any\r\n    getUsersThunk: any\r\n    FiendsAC:any\r\n}\r\n\r\nlet mapStateToProps = (state: StoreStateType): MapStateToPropsType => {\r\n\r\n    return {\r\n        users: getUsersCreateSelector(state),\r\n        pagesize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPages: getCurrentPages(state),\r\n        isFetching: getIsFetching(state),\r\n        IsFollowingProgress: getIsFollowingProgress(state),\r\n        isFollow: state.usersPage.isFollow\r\n    }\r\n}\r\n\r\nclass UsersAPI extends React.Component<MapDispatchTopropsType & MapStateToPropsType, any> {\r\n    componentDidMount() {\r\n\r\n        this.props.getUsersThunk(this.props.currentPages, this.props.pagesize, this.props.isFollow)\r\n\r\n    }\r\n    componentDidUpdate(prevProps: Readonly<MapDispatchTopropsType & MapStateToPropsType>, prevState: Readonly<any>, snapshot?: any) {\r\n        if(this.props.isFollow!==prevProps.isFollow)\r\n            this.props.getUsersThunk(this.props.currentPages, this.props.pagesize, this.props.isFollow)\r\n    }\r\n\r\n\r\n    onPageChanget = (pageNumber: number) => {\r\n        this.props.getUsersThunk(pageNumber, this.props.pagesize,  this.props.isFollow)\r\n\r\n        this.props.SetCurrentPage(pageNumber);\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n\r\n            <Users users={this.props.users}\r\n                   totalUsersCount={this.props.totalUsersCount}\r\n                   currentPages={this.props.currentPages}\r\n                   pagesize={this.props.pagesize}\r\n                   follower={this.props.follower}\r\n                   unfollow={this.props.unfollow}\r\n                   onPageChanget={this.onPageChanget}\r\n                   IsFollowingProgress={this.props.IsFollowingProgress}\r\n                   setIsFollowingProgress={this.props.setIsFollowingProgress}\r\n                   isFollow={this.props.isFollow}\r\n                   FiendsAC={this.props.FiendsAC}/>\r\n        </>\r\n    }\r\n}\r\n\r\nexport const UsersContainer:any = compose(/*WithAuthRedirect,*/connect(mapStateToProps, {\r\n\r\n    follower:followTC,\r\n    unfollow: unFollowTC,\r\n    setUsers:setUsersAC,\r\n    SetCurrentPage:setCurrentPageAC,\r\n    setTotalUsersCount: setTotalUsersCountAC,\r\n    setIsFollowingProgress: setUserIdForDisabledAC,\r\n    toogleIsFetching:toggleIsFetchingAC,\r\n    getUsersThunk: getUsersTC,\r\n    FiendsAC: toggleFollowAC\r\n    //getUsersThunk: getFriendsThunkCreater\r\n}))(UsersAPI)\r\n\r\n\r\n","import React from \"react\";\r\nimport {Preloader} from \"../../ui-new/Common/pr/Preloader\";\r\n\r\n\r\nexport const WithSuspenseHOC=(Component:any)=>{\r\n\r\n   return(props: any)=>{\r\n       return <React.Suspense fallback={<Preloader/>}>\r\n           <Component{...props}/>\r\n       </React.Suspense>\r\n   }\r\n\r\n}","import React from 'react';\r\nimport s from \"./app.module.scss\"\r\nimport {Redirect, Route, Switch, withRouter} from \"react-router-dom\";\r\nimport {Login} from \"./login-page/login\";\r\nimport {Profile} from \"./profile-page/profile\";\r\nimport {Messages} from \"./messages-page/messages\";\r\nimport {Users} from \"./users-page/users\";\r\nimport {Header} from \"./header/header\";\r\nimport {Nav} from \"./nav/nav\";\r\nimport {LoginContainer} from \"./login-page/login-container\";\r\n/*\r\nimport ProfileContainerConnect from \"./profile-page/profile-container\";\r\n*/\r\nimport {UsersContainer} from \"./users-page/users-container\";\r\nimport {Preloader} from \"./Common/pr/Preloader\";\r\nimport {HeaderConteiner} from \"../UI/component/Header/HeaderConteiner\";\r\nimport {WithSuspenseHOC} from \"../UI/HOC/WithSuspense\";\r\nimport {StoreStateType} from \"../BLL/store\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {initializeTC} from \"../BLL/Reducers/app-reducer\";\r\n/*\r\nimport MessagesContainer from \"./messages-page/messages-container\";\r\n*/\r\n\r\n// лейзи говорит, что он компаненту не импортирую. когда ее надо будет отрисоввать, он запросится с сервера\r\nconst MessagesContainer = React.lazy(() => import('./messages-page/messages-container'));\r\n\r\nconst ProfileContainerConnect = React.lazy(() => import('./profile-page/profile-container'));\r\n\r\n\r\n\r\n\r\nclass App extends React.Component<any, any> {\r\n// componentDidMount срабатывает один раз, когда К. вмонтируется\r\n    catchAllUnhandleError = (promiseRejectEvent: PromiseRejectionEvent) => {\r\n        alert(promiseRejectEvent)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.initializeApp()\r\n        window.addEventListener(\"unhandledrejection\", this.catchAllUnhandleError)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"unhandledrejection\", this.catchAllUnhandleError)\r\n\r\n    }\r\n\r\n    render() {\r\n        // при первой загрузке у на нет данных, показываем поэтому крутилку\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n// задача К. вернуть jsx(tsx) в зависимости от пропсов либо личного локального стейта\r\n        // exact требует полное совпадение урла. Можно добавить <Switch>..роутер..</Switch> и тогда при первом совпадении будет отрисовка.\r\n        // в этом случает лучше точные урлы ставить выше, а общие ниже\r\n        return (<div className={s.block}>\r\n                <Header/>\r\n                <div className={s.container}>\r\n                    <Nav/>\r\n                    <Switch>\r\n                        <Route path='/profile/:userID?'\r\n                               render={WithSuspenseHOC(ProfileContainerConnect)}/>\r\n                        <Route path='/messages/:userID?'\r\n                               render={WithSuspenseHOC(MessagesContainer)}/>\r\n                        <Route path='/users'\r\n                               render={() => <UsersContainer/>}/>\r\n                        <Route path='*'\r\n                               render={() => <LoginContainer/>}\r\n                        />\r\n\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: StoreStateType) => ({\r\n    initialized: state.app.initialized\r\n})\r\n// compose создает контейнернкю компанету, применяя один за одним HOCи=>\r\n// (компанента высшего порядка-это функция, которая принимает одну компаненту и возвращает другую компаненту.\r\n// Это нужно для того, что бы наша компанента получила какие-то данные)\r\n\r\n// connect  дает данные из Store с помощью mapStateToProps и mapDispatchToProps\r\n// withRouter дает компоненте данные из url\r\nexport const AppContainer: any = compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp: initializeTC}))(App)\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n// import {AppContainer} from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {store} from \"./BLL/store\";\r\nimport {Provider} from \"react-redux\";\r\nimport {BrowserRouter, HashRouter} from \"react-router-dom\";\r\nimport {Login} from \"./ui-new/login-page/login\";\r\nimport {Profile} from \"./ui-new/profile-page/profile\";\r\nimport {AppContainer} from \"./ui-new/App\";\r\nimport {Users} from \"./ui-new/users-page/users\";\r\nimport {Messages} from \"./ui-new/messages-page/messages\";\r\n\r\n// BrowserRouter добовляет\r\n// Provider добовляет store в контекст, из которого все компаненты могут брать данные ( наприер стор, тема темная/светлая, язык)\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <BrowserRouter>\r\n{/*\r\n            <AppContainer/>\r\n*/}\r\n\r\n\r\n            <AppContainer/>\r\n\r\n\r\n        </BrowserRouter>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\nreportWebVitals();\r\n// реакт библиотека- это библиотека, которая эффективно отрисовывает html. Эффективно, в плане она не перерисовывает те элементы, которые не надо\r\n// реакт загружается и живет в браузере\r\n//компанента возвращает тсикс или джсикс\r\n\r\n//сайдэффект= запросы на сервер, сетТаймаут, обращение к дом элементам на прямую\r\n//  шудКомпонентАпдейт - реакт.Мемо\r\n// пьюрКомпонент\r\n//\r\n//\r\n///\r\n// редакс это система стейт менеджмента, то что позволчет управлять удобно стейто\r\n// редакс состоит из одного главного обьекта стор(хранилище,обьект ооп) .В стор мы засовываем редьюсеры, из которых он будет состоять.\r\n// редьюсеры это функции преобразователи. они получают на входе\r\n// экшен(обьект, инструкция, у которого минимум есть тип и мб данные) и часть стейта и преобразовывает стейт\r\n// делает преобраования он иммутабельно( изменяет не стейт а его копию)\r\n//\r\n// стор(хранилище) обьект ооп,  с ним можно взаимодействовать через его интерфейс( методы и свойства)\r\n// есть три главных метода:\r\n//getState позволяет получить из стора актуальный стейт\r\n//subscribe позволяет подписаться подпищику на изменение стейта\r\n//dispatch позволяет приобразовать стейт\r\n\r\n\r\n// реакт редакс для связки реакта и редакса. обеспечивает связь коспоненты со стором.\r\n// на помощь для связи комп. со стором приходит фунция connect\r\n// connect это хок. он создает вокгруг нашей компаненты другую компаненту. она снабжает нашу компаненты\r\n// connect(mstp, mdtp). mstp берет из стейта часть, которая использоваться будет в нашей компаненте( в нашу комп приходит это впропсах)\r\n// mdtp берем функцию (метод диспатч у стора) , который возвращает нам колбеки в которых диспатчи\r\n// в новой компаненте есть доступ к стору, у которого она может вызывать подписку на изменения стейта.\r\n// все обернута провайдером из р-р для того, что бы у всего приложения был доступ к стейту в контексте\r\n\r\n\r\n\r\n\r\n\r\n// node js это альтернатива браузеру. это платформа, позолябщая писать на js  любые приложения. его моно загрузить в телевизор холодильник пылесос север..\r\n// конкретно нам он нужен для подключения куси пакетов\r\n\r\n// компаненты\r\n// фунцкциональная компонента это функц принимающая пропсы и возврашает jsx\r\n\r\n// классовая компанента.\r\n\r\n// фунция мар принимает один обькт возвращает массив других обьектов (всегда добовлять key)\r\n// идентпотентность или детерменированность - получаем на входе одно и тоже и на выходе получаем одно и тоже\r\n// в чистой функции нет сайдэффектов, локального стейта\r\n// имьютабельность - функция не может менять то, что в нее приходит.\r\n\r\n\r\n\r\n// SERVER API\r\n// интрфейс сервера- это эндпоинты(урлы, на которые мы делаем запрос).рест апи это правила. какой тип запроса, какой ответ будет\r\n// делаем запросы с помощью axios. нам возвращаются промисы. у промиса  есть метод then, в которую мы передаем коллбек , который срабатывает когдп промис выполнился\r\n\r\n//ajax запросы выносим в контейнерную компаненту. контейнерных коспанент может быть много.\r\n// хок withRouter. тягает данные из урла. как коннект\r\n\r\n// thunk- это функция, которая принимает метод диспаитч, и внутри себя делаем асинхронную опирация и разные диспатчи\r\n// используем санк креатер. санку можно задиспатчить. 3\r\n//что бы ui не общался ни с кем, кроме блл.\r\n\r\n\r\n// редакс форм. есть пакет релакс форм реакт. он для того, что бы работал\r\n// флакс круговорот(ничего не появляется в юай без появления этого сначала в блл. например логин и пароль)\r\n\r\n\r\n// селекторы для mstp в connect. они для того случая, если очень тяжело достаются данные из стейта. что бы не засорять мстпya","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"forms_formControl__3EHfj\",\"error\":\"forms_error__bwAEw\",\"formSunnierError\":\"forms_formSunnierError__1NCLm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"users_block__2UOdh\",\"container\":\"users_container__22NfB\",\"search\":\"users_search__1pKs8\",\"inp\":\"users_inp__15EnU\",\"spn\":\"users_spn__3G9ai\",\"viewFriends\":\"users_viewFriends__bDaB3\"};","export default __webpack_public_path__ + \"static/media/looading.c1b8565f.gif\";","import looading from '../../../UI/assets/img/looading.gif'\r\nimport React from \"react\";\r\nimport s from \"./priloader.module.scss\";\r\n\r\nexport const Preloader=()=>{\r\n    return <div className={s.block}><img src={looading} className={s.pril}/></div>\r\n}","import React from 'react';\r\nimport style from './forms.module.css'\r\nimport {Field} from \"redux-form\";\r\n\r\nexport const Textarea = ({input, meta, ...props}: any) => {\r\n    const hasError = meta.touched && meta.error\r\n    return <div  className={style.formControl + \" \" + (hasError ? style.error : \"\")}>\r\n        <textarea {...input} {...props}/>\r\n        <div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    </div>\r\n}\r\nexport const Input = ({input, meta, ...props}: any) => {\r\n    const hasError = meta.touched && meta.error\r\n    return <div className={style.formControl + \" \" + (hasError ? style.error : \"\")}>\r\n        <input {...input} {...props}/>\r\n        <div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    </div>\r\n}\r\nexport const Form = ({input, meta, el, ...props}: any) => {\r\n    const hasError = meta.touched && meta.error\r\n    return <div className={style.formControl + \" \" + (hasError ? style.error : \"\")}>\r\n        <props.el {...input} {...props}/>\r\n        <div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport const createFormField = (placeholder: any, name: any, validator: any, component: any, props = {}, text = \"\") => (\r\n    <>\r\n        <Field placeholder={placeholder}\r\n               name={name}\r\n               validate={validator}\r\n               component={component}\r\n               {...props}/> {text}\r\n    </>\r\n)\r\n","export const requiredField=(value:any)=>{\r\n    if(value) return undefined\r\n    return \"Field is required\"\r\n}\r\nexport const maxLength=(maxLength: number)=>(value:any)=>{\r\n    if(value && value.length>maxLength) return `max lenght is ${maxLength} symbols`\r\n    return undefined\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"login_block__3_udS\",\"container\":\"login_container__DukJL\",\"rightPart\":\"login_rightPart__1bKCf\",\"pathContainer\":\"login_pathContainer__1weu4\",\"firstText\":\"login_firstText__1ZYqQ\",\"secondText\":\"login_secondText__1g8Fr\",\"oneAdvantage\":\"login_oneAdvantage__1ClLI\",\"icon\":\"login_icon__W7cfQ\",\"description\":\"login_description__Wrkfh\",\"title\":\"login_title__3O8Pr\",\"desc\":\"login_desc__3GLNQ\",\"leftPart\":\"login_leftPart__QqwSH\",\"iconNetwork\":\"login_iconNetwork__2f7lo\",\"welcome\":\"login_welcome__3d5N8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"app_block__sEMSB\",\"container\":\"app_container__2QXCc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"priloader_block__1msor\",\"pril\":\"priloader_pril__1JhG9\"};","export default __webpack_public_path__ + \"static/media/no_image.4a9ff6fc.png\";","import {profileAPI, usersAPI} from \"../../DAL/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst ADD_POST = \"ADD_POST\"\r\nconst DELETE_POST = \"DELETE_POST\"\r\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\"\r\nconst SET_STATUS = \"SET_STATUS\"\r\nconst SAVE_PHOTO = \"SAVE_PHOTO\"\r\n\r\n// Type for Reduces\r\ntype AddPostType = {\r\n    type: \"ADD_POST\"\r\n    massages: string\r\n}\r\ntype DeletePostType = {\r\n    type: \"DELETE_POST\"\r\n    id: number\r\n}\r\ntype SetProfileType = {\r\n    type: \"SET_USER_PROFILE\"\r\n    profile: any\r\n}\r\ntype UpdateStatusType = {\r\n    type: \"SET_STATUS\"\r\n    status: any\r\n}\r\n\r\ntype UpdatePhotoType = {\r\n    type: \"SAVE_PHOTO\"\r\n    photos: any\r\n}\r\n\r\n// type for Action\r\nexport type ActionType = AddPostType\r\n    | SetProfileType\r\n    | UpdateStatusType\r\n    | DeletePostType\r\n    | UpdatePhotoType\r\n\r\n//   Initial State\r\nexport type StateType = {\r\n    profile: any\r\n    postsDataArray: {\r\n        id: number;\r\n        post: string;\r\n        likeCount: number;\r\n    }[];\r\n    status: string\r\n}\r\nlet initialState: StateType = {\r\n    profile: null,\r\n    postsDataArray: [\r\n        {id: 1, post: \"Приветики??\", likeCount: 1},\r\n        {id: 2, post: \"Ребята аууу...\", likeCount: 0},\r\n        {id: 3, post: \"Это мой первый пост!\", likeCount: 1200}\r\n    ],\r\n    status: \"\"\r\n}\r\n\r\n\r\nexport const ProfileReducer = (state: StateType = initialState, action: ActionType): StateType => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let text = action.massages\r\n            return {\r\n                ...state,\r\n                postsDataArray: [{id: 4, post: text, likeCount: 10}, ...state.postsDataArray]\r\n            }\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                postsDataArray: state.postsDataArray.filter(x => x.id !== action.id)\r\n            }\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        case SAVE_PHOTO:\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.photos}\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n//Thunk Creator\r\n// с сервера берет всю инфу о профайле выбранного пользователя\r\nexport const getOneProfileTC = (id: any) => {\r\n    return async (dispatch: any) => {\r\n        let response = await usersAPI.getProfile(id)\r\n        dispatch(setOneProfileAC(response.data))\r\n    }\r\n}\r\n// с сервера достает статус выбранного пользователя\r\nexport const getStatusTC = (id: any) => {\r\n    return async (dispatch: any) => {\r\n        let response = await profileAPI.getStatus(id)\r\n        dispatch(updateStatusAC(response.data))\r\n    }\r\n}\r\n// обновляет статус на сервере\r\nexport const updateStatusTC = (status: string) => {\r\n    return async (dispatch: any) => {\r\n        try {\r\n            let response = await profileAPI.updateStatus(status)\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(updateStatusAC(status))\r\n            }\r\n        } catch (error: any) {\r\n            console.log(\"я перехватил ошибку \")\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n// обновляет фото на сервере\r\nexport const updatePhotoTC = (file: any) => {\r\n    return async (dispatch: any) => {\r\n        let response = await profileAPI.updatePhoto(file)\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(updatePhotoAC(response.data.data.photos))\r\n        }\r\n    }\r\n}\r\n// обновляет информацию о профиле на сервере\r\nexport const updateInfoProfileTC = (profile: any) => async (dispatch: any, getState: any) => {\r\n    const userId = getState().auth.userId\r\n    let response = await profileAPI.updateInfoProfile(profile)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getOneProfileTC(userId))\r\n    } else {\r\n        dispatch(stopSubmit(\"editProfile\", {_error: response.data.messages[0]}))\r\n        return Promise.reject()\r\n    }\r\n}\r\n\r\n//Action Creator\r\nexport const setOneProfileAC = (profile: any): SetProfileType => ({type: SET_USER_PROFILE, profile})\r\nexport const updateStatusAC = (status: string): UpdateStatusType => ({type: SET_STATUS, status})\r\nexport const updatePhotoAC = (photos: any): UpdatePhotoType => ({type: SAVE_PHOTO, photos})\r\nexport const addPostAC = (massages: string): AddPostType => ({type: ADD_POST, massages})\r\nexport const deletePostAC = (id: number): DeletePostType => ({type: DELETE_POST, id})\r\n\r\n\r\n"],"sourceRoot":""}
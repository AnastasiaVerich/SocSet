{"version":3,"sources":["ui-new/profile-page/menu-items/view-friends/view-friends.module.scss","ui-new/login-page/login.module.scss","ui-new/profile-page/menu-items/view-profile/view-profile.module.scss","ui-new/users-page/users.module.scss","ui-new/header/header.module.scss","ui-new/nav/nav.module.scss","reportWebVitals.ts","DAL/api.tsx","BLL/Reducers/profile-reducer.tsx","BLL/Reducers/users-reducer.tsx","BLL/Reducers/authorization-reducer.tsx","BLL/Reducers/app-reducer.tsx","BLL/Reducers/dialogs-reducer.tsx","BLL/store.tsx","UI/utils/validators/validators.tsx","ui-new/messages-page/messages.tsx","ui-new/users-page/users.tsx","ui-new/header/header.tsx","ui-new/nav/nav.tsx","UI/component/Common/FormsControl/FormsControl.tsx","ui-new/login-page/login-form.tsx","ui-new/login-page/login-container.tsx","ui-new/login-page/login.tsx","UI/assets/img/no_image.png","UI/assets/img/looading.gif","UI/component/Common/Preloader/Preloader.tsx","ui-new/profile-page/menu-items/view-profile/view-profile.tsx","ui-new/profile-page/menu-items/view-friends/view-friends.tsx","ui-new/profile-page/menu-items/view-contacts/view-contacts.tsx","ui-new/profile-page/menu-items/about-me/about-me.tsx","ui-new/profile-page/profile.tsx","ui-new/profile-page/profile-container.tsx","ui-new/App.tsx","index.tsx","ui-new/login-page/login-form.module.scss","ui-new/profile-page/menu-items/view-contacts/view-contacts.module.scss","UI/component/Common/FormsControl/forms.module.css","ui-new/messages-page/messages.module.scss","ui-new/profile-page/menu-items/about-me/about-me.module.scss","ui-new/app.module.scss","ui-new/profile-page/profile.module.scss"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","instanse","axios","create","withCredentials","headers","baseURL","usersAPI","id","profileAPI","getProfile","get","getStatus","userID","updateStatus","statusText","put","status","updatePhoto","file","formData","FormData","append","updateInfoProfile","profile","authorizationAPI","email","password","rememberMe","captcha","post","securityAPI","ADD_POST","DELETE_POST","SET_USER_PROFILE","SET_STATUS","SAVE_PHOTO","initialState","postsDataArray","likeCount","getOneProfileTC","dispatch","a","response","setOneProfileAC","data","getStatusTC","updateStatusAC","updateStatusTC","resultCode","console","log","updatePhotoTC","updatePhotoAC","photos","updateInfoProfileTC","getState","userId","auth","stopSubmit","_error","messages","Promise","reject","type","FOLLOW","UN_FOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","SET_USERID_FOR_DISABLE","TOGGLE_IS_FOLLOW","usersData","pageSize","totalUsersCount","currentPages","isFetching","userIdForDisabled","isFollow","SET_USER_DATA","GET_CAPTCHA","login","isAuthorization","captchaURl","getAuthorizationDataTC","dispath","setAuthorizationDataAC","getCaptchaTC","captchaUrl","url","setCaptchaAC","SET_INITIALIZED","initialized","GET_SELECTED_DIALOG","GET_USERS_TALKED_WITH","recipientId","oneMessage","users","reducers","combineReducers","state","action","text","massages","filter","x","dialog","oldMessages","items","concat","usersArray","usersPage","follow","map","followed","totalCounter","IsFollowingProgress","form","formReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddlewere","maxLength","Messages","className","s","block","container","chats","search","inp","serBut","butMenu","btn","user","avatar","ava","main","name","lastMessages","info","time","countUnread","selectedChat","userSelected","ava2","name2","chat","chatField","my","sms","friend","sendField","printMess","sendMess","Users","placeholder","spn","viewFriends","friendContainer","butt","butItem","viewProfileFriend","Header","icon","iconNetwork","src","unLog","to","Nav","item","buttonItem","Input","input","meta","props","hasError","touched","error","style","formControl","createFormField","validator","component","Field","validate","requiredField","value","maxLengthValidator","length","LoginReduxForm","reduxForm","handleSubmit","onSubmit","loginForm","checkbox","formSunnierError","button","LoginContainer","connect","isAuth","errorMessages","loginTC","rightPart","pathContainer","firstText","secondText","oneAdvantage","description","title","desc","leftPart","welcome","Preloader","looading","ViewProfile","viewProfile","titleMenu","selectionMainContainer","titleColumn","descriptionColumn","fullName","ViewFrinds","ViewContacts","Object","keys","contacts","key","contactTitle","contactValue","Contact","oneContact","AboutMe","aboutMeField","aboutMe","Profile","useState","setX","y","setY","z","setZ","w","setW","backgroundImage","topPart","avaName","avatarContainer","large","no_image","buttons","mainBlock","middlePart","firstInfo","countFriends","pp","lookingForAJob","menu","menuItem","onClick","bottomPart","isFindWork","secondInfo","menuSelection","ProfileConteiner","ownerId","this","match","params","authorizationUserId","history","push","getOneProfile","refreshProfile","prevProps","prevState","snapshot","React","Component","ProfileContainerConnect","withRouter","App","path","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.9d0d3321.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"viewFriends\":\"view-friends_viewFriends__2GsFy\",\"friendContainer\":\"view-friends_friendContainer__1ohhO\",\"ava\":\"view-friends_ava__7SWnR\",\"name\":\"view-friends_name__3y0t3\",\"butt\":\"view-friends_butt__1gUkp\",\"butItem\":\"view-friends_butItem__ZMyPb\",\"viewProfileFriend\":\"view-friends_viewProfileFriend__12bgL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"login_block__3_udS\",\"container\":\"login_container__DukJL\",\"rightPart\":\"login_rightPart__1bKCf\",\"pathContainer\":\"login_pathContainer__1weu4\",\"firstText\":\"login_firstText__1ZYqQ\",\"secondText\":\"login_secondText__1g8Fr\",\"oneAdvantage\":\"login_oneAdvantage__1ClLI\",\"icon\":\"login_icon__W7cfQ\",\"description\":\"login_description__Wrkfh\",\"title\":\"login_title__3O8Pr\",\"desc\":\"login_desc__3GLNQ\",\"leftPart\":\"login_leftPart__QqwSH\",\"iconNetwork\":\"login_iconNetwork__2f7lo\",\"welcome\":\"login_welcome__3d5N8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"viewProfile\":\"view-profile_viewProfile__xHpFH\",\"titleMenu\":\"view-profile_titleMenu__1tRfF\",\"selectionMainContainer\":\"view-profile_selectionMainContainer__3VYIb\",\"titleColumn\":\"view-profile_titleColumn__1UXwi\",\"item\":\"view-profile_item__2nYsT\",\"descriptionColumn\":\"view-profile_descriptionColumn__1TNbF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"users_block__2UOdh\",\"container\":\"users_container__22NfB\",\"search\":\"users_search__1pKs8\",\"inp\":\"users_inp__15EnU\",\"spn\":\"users_spn__3G9ai\",\"viewFriends\":\"users_viewFriends__bDaB3\",\"friendContainer\":\"users_friendContainer__3ReDw\",\"ava\":\"users_ava__3eMqa\",\"name\":\"users_name__2hjCn\",\"butt\":\"users_butt__ZzZkp\",\"butItem\":\"users_butItem__3H9T-\",\"viewProfileFriend\":\"users_viewProfileFriend__1a0Yw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"header_block__GGVhJ\",\"icon\":\"header_icon__2UwuE\",\"iconNetwork\":\"header_iconNetwork__2-Iwd\",\"container\":\"header_container__YiPjg\",\"info\":\"header_info__2xgWL\",\"ava\":\"header_ava__1FFaj\",\"unLog\":\"header_unLog__104om\",\"btn\":\"header_btn__2nH68\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"nav_block__1GB-e\",\"container\":\"nav_container__2NfBV\",\"item\":\"nav_item__2Fqq1\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from \"axios\";\r\n\r\n\r\nconst instanse = axios.create({\r\n    withCredentials: true,\r\n    headers: {\r\n       \"API-KEY\": \"603ef8c0-4933-4294-ab5f-b170d3ebe6d8\"\r\n       //  \"API-KEY\": \"48cd781d-ab35-4a63-97ba-b184f71ed662\"\r\n    },\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/'\r\n})\r\n\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPages: any, pagesize: any) {\r\n        return (\r\n            instanse.get(`users?page=${currentPages}&count=${pagesize}`, {})\r\n                .then(response => response.data)\r\n        )\r\n    },\r\n    follow(id: any) {\r\n        return (\r\n            instanse.post(`follow/${id}`, {}, {})\r\n                .then(response => response.data)\r\n        )\r\n    },\r\n    getProfile(id: any) {\r\n        return profileAPI.getProfile(id)\r\n    },\r\n    unFollow(id: any) {\r\n        return (\r\n            instanse.delete(`follow/${id}`, {})\r\n                .then(response => response.data)\r\n        )\r\n    },\r\n    getFriendsUsers(currentPages: any, pagesize: any) {\r\n        return (\r\n            instanse.get(`users?page=${currentPages}&count=${pagesize}&friend=true`, {})\r\n                .then(response => response.data)\r\n        )\r\n    }\r\n\r\n}\r\nexport const profileAPI = {\r\n    getProfile(id: any) {\r\n        return (\r\n            instanse.get(`profile/${id}`)\r\n        )\r\n    },\r\n    getStatus(userID: any) {\r\n        return (\r\n            instanse.get(`/profile/status/${userID}`)\r\n        )\r\n    },\r\n    updateStatus(statusText: string) {\r\n        return (\r\n            instanse.put(`/profile/status`, {status: statusText})\r\n        )\r\n    },\r\n    updatePhoto(file: any) {\r\n        let formData = new FormData();\r\n        formData.append(\"image\", file)\r\n        return (instanse.put(`profile/photo`, formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            })\r\n        )\r\n    },\r\n    updateInfoProfile(profile: any) {\r\n        return instanse.put(`/profile`, profile)\r\n    }\r\n}\r\nexport const authorizationAPI = {\r\n    me() {\r\n        return (\r\n            instanse.get(`auth/me`, {})\r\n        )\r\n    },\r\n    login(email: string, password: string, rememberMe: boolean = false, captcha: any) {\r\n        return (\r\n            instanse.post(`auth/login`, {email, password, rememberMe, captcha}, {})\r\n\r\n        )\r\n    },\r\n    logout() {\r\n        return (\r\n            instanse.delete(`auth/login`, {})\r\n        )\r\n    }\r\n}\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return (\r\n            instanse.get(`security/get-captcha-url`)\r\n        )\r\n    }\r\n}\r\nexport const messagesAPI = {\r\n    getSelectedDialog(userId: any,currentPages: any, pagesize: any ) {\r\n        return (\r\n            instanse.get(`dialogs/${userId}/messages?page=${currentPages}&count=${pagesize}`, {})\r\n                .then(response => response.data)\r\n        )\r\n    },\r\n    sendMessage(userId: any, body: string) {\r\n        return (\r\n            instanse.post(`dialogs/${userId}/messages`, {body}, {})\r\n        )\r\n    },\r\n    getUsersTalkedWith() {\r\n        return (\r\n            instanse.get(`dialogs`, {})\r\n                .then(response => response.data)\r\n        )\r\n    }\r\n}\r\n","import {profileAPI, usersAPI} from \"../../DAL/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst ADD_POST = \"ADD_POST\"\r\nconst DELETE_POST = \"DELETE_POST\"\r\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\"\r\nconst SET_STATUS = \"SET_STATUS\"\r\nconst SAVE_PHOTO = \"SAVE_PHOTO\"\r\n\r\n// Type for Reduces\r\ntype AddPostType = {\r\n    type: \"ADD_POST\"\r\n    massages: string\r\n}\r\ntype DeletePostType = {\r\n    type: \"DELETE_POST\"\r\n    id: number\r\n}\r\ntype SetProfileType = {\r\n    type: \"SET_USER_PROFILE\"\r\n    profile: any\r\n}\r\ntype UpdateStatusType = {\r\n    type: \"SET_STATUS\"\r\n    status: any\r\n}\r\n\r\ntype UpdatePhotoType = {\r\n    type: \"SAVE_PHOTO\"\r\n    photos: any\r\n}\r\n\r\n// type for Action\r\nexport type ActionType = AddPostType\r\n    | SetProfileType\r\n    | UpdateStatusType\r\n    | DeletePostType\r\n    | UpdatePhotoType\r\n\r\n//   Initial State\r\nexport type StateType = {\r\n    profile: any\r\n    postsDataArray: {\r\n        id: number;\r\n        post: string;\r\n        likeCount: number;\r\n    }[];\r\n    status: string\r\n}\r\nlet initialState: StateType = {\r\n    profile: null,\r\n    postsDataArray: [\r\n        {id: 1, post: \"Приветики??\", likeCount: 1},\r\n        {id: 2, post: \"Ребята аууу...\", likeCount: 0},\r\n        {id: 3, post: \"Это мой первый пост!\", likeCount: 1200}\r\n    ],\r\n    status: \"\"\r\n}\r\n\r\n\r\nexport const ProfileReducer = (state: StateType = initialState, action: ActionType): StateType => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let text = action.massages\r\n            return {\r\n                ...state,\r\n                postsDataArray: [{id: 4, post: text, likeCount: 10}, ...state.postsDataArray]\r\n            }\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                postsDataArray: state.postsDataArray.filter(x => x.id !== action.id)\r\n            }\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        case SAVE_PHOTO:\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.photos}\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n//Thunk Creator\r\n// с сервера берет всю инфу о профайле выбранного пользователя\r\nexport const getOneProfileTC = (id: any) => {\r\n    return async (dispatch: any) => {\r\n        let response = await usersAPI.getProfile(id)\r\n        dispatch(setOneProfileAC(response.data))\r\n    }\r\n}\r\n// с сервера достает статус выбранного пользователя\r\nexport const getStatusTC = (id: any) => {\r\n    return async (dispatch: any) => {\r\n        let response = await profileAPI.getStatus(id)\r\n        dispatch(updateStatusAC(response.data))\r\n    }\r\n}\r\n// обновляет статус на сервере\r\nexport const updateStatusTC = (status: string) => {\r\n    return async (dispatch: any) => {\r\n        try {\r\n            let response = await profileAPI.updateStatus(status)\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(updateStatusAC(status))\r\n            }\r\n        } catch (error: any) {\r\n            console.log(\"я перехватил ошибку \")\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n// обновляет фото на сервере\r\nexport const updatePhotoTC = (file: any) => {\r\n    return async (dispatch: any) => {\r\n        let response = await profileAPI.updatePhoto(file)\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(updatePhotoAC(response.data.data.photos))\r\n        }\r\n    }\r\n}\r\n// обновляет информацию о профиле на сервере\r\nexport const updateInfoProfileTC = (profile: any) => async (dispatch: any, getState: any) => {\r\n    const userId = getState().auth.userId\r\n    let response = await profileAPI.updateInfoProfile(profile)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getOneProfileTC(userId))\r\n    } else {\r\n        dispatch(stopSubmit(\"editProfile\", {_error: response.data.messages[0]}))\r\n        return Promise.reject()\r\n    }\r\n}\r\n\r\n//Action Creator\r\nexport const setOneProfileAC = (profile: any): SetProfileType => ({type: SET_USER_PROFILE, profile})\r\nexport const updateStatusAC = (status: string): UpdateStatusType => ({type: SET_STATUS, status})\r\nexport const updatePhotoAC = (photos: any): UpdatePhotoType => ({type: SAVE_PHOTO, photos})\r\nexport const addPostAC = (massages: string): AddPostType => ({type: ADD_POST, massages})\r\nexport const deletePostAC = (id: number): DeletePostType => ({type: DELETE_POST, id})\r\n\r\n\r\n","import {usersAPI} from \"../../DAL/api\";\r\n\r\nconst FOLLOW = \"FOLLOW\"\r\nconst UN_FOLLOW = \"UN_FOLLOW\"\r\nconst SET_USERS = \"SET_USERS\"\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\"\r\nconst SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\"\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\"\r\nconst SET_USERID_FOR_DISABLE = \"SET_USERID_FOR_DISABLE\"\r\nconst TOGGLE_IS_FOLLOW = \"TOGGLE_IS_FOLLOW\"\r\n\r\n\r\n//type for Reduces\r\ntype FollowType = {\r\n    type: \"FOLLOW\"\r\n    userId: number\r\n}\r\ntype UNfollowType = {\r\n    type: \"UN_FOLLOW\"\r\n    userId: number\r\n}\r\ntype SetUsersType = {\r\n    type: \"SET_USERS\"\r\n    users: []\r\n}\r\ntype SetCurrentPageType = {\r\n    type: \"SET_CURRENT_PAGE\"\r\n    currentPages: number\r\n}\r\ntype SetTotalUsersCountACType = {\r\n    type: \"SET_TOTAL_USERS_COUNT\"\r\n    totalCounter: number\r\n}\r\ntype ToggleIsFetchingType = {\r\n    type: \"TOGGLE_IS_FETCHING\"\r\n    isFetching: boolean\r\n}\r\ntype SetUserIdForDisableType = {\r\n    type: \"SET_USERID_FOR_DISABLE\"\r\n    IsFollowingProgress: boolean\r\n    userId: any\r\n}\r\ntype ToggleIsFollowType = {\r\n    type: \"TOGGLE_IS_FOLLOW\"\r\n    follow: boolean\r\n}\r\n\r\n//type for Action\r\ntype ActionType =\r\n    FollowType\r\n    | UNfollowType\r\n    | SetUsersType\r\n    | SetCurrentPageType\r\n    | SetTotalUsersCountACType\r\n    | ToggleIsFetchingType\r\n    | SetUserIdForDisableType\r\n    | ToggleIsFollowType\r\n\r\n//initial State type\r\nexport type OneUsersType = {\r\n    id: number,\r\n    followed: boolean,\r\n    name: string,\r\n    status: string,\r\n    photos: any\r\n    uniqueUrlName: any\r\n}\r\ntype UsersType = {\r\n    usersData: Array<OneUsersType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPages: number\r\n    isFetching: boolean\r\n    userIdForDisabled: any\r\n    isFollow: boolean\r\n}\r\nlet initialState: UsersType = {\r\n    usersData: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPages: 1,\r\n    isFetching: true,\r\n    userIdForDisabled: [],\r\n    isFollow: false\r\n}\r\n\r\nexport const UsersReducer = (state: UsersType = initialState, action: ActionType): UsersType => {\r\n    if (state) {\r\n        switch (action.type) {\r\n            case TOGGLE_IS_FOLLOW:\r\n                return {\r\n                    ...state,\r\n                    isFollow: action.follow\r\n                }\r\n            case FOLLOW:\r\n                return {\r\n                    ...state,\r\n                    usersData: state.usersData.map((x) => {\r\n                        if (x.id === action.userId) {\r\n                            return {...x, followed: true}\r\n                        } else return x\r\n                    })\r\n                }\r\n            case UN_FOLLOW:\r\n                return {\r\n                    ...state,\r\n                    usersData: state.usersData.map((x) => {\r\n                        if (x.id === action.userId) {\r\n                            return {...x, followed: false}\r\n                        } else return x\r\n                    })\r\n                }\r\n            case SET_USERS:\r\n                return {...state, usersData: [...action.users]}\r\n            case SET_CURRENT_PAGE:\r\n                return {...state, currentPages: action.currentPages}\r\n            case SET_TOTAL_USERS_COUNT:\r\n                return {...state, totalUsersCount: action.totalCounter}\r\n            case TOGGLE_IS_FETCHING:\r\n                return {...state, isFetching: action.isFetching}\r\n            case SET_USERID_FOR_DISABLE:\r\n                return {\r\n                    ...state,\r\n                    userIdForDisabled: action.IsFollowingProgress\r\n                        ? [action.userId]\r\n                        : []\r\n                }\r\n            default:\r\n                return state;\r\n        }\r\n    } else return state\r\n}\r\n\r\n//Thunk Creator\r\n// делает запрос на сервер, возвращет всех пользователей\r\nexport const getUsersTC = (currentPages: number, pagesize: number, follow: boolean) => {\r\n    return async (dispatch: any) => {\r\n        dispatch(toggleIsFetchingAC(true))\r\n        let response;\r\n        // если ищем друзей, то выполняем один запрос на серве\r\n        if (follow) {\r\n            response = await usersAPI.getFriendsUsers(currentPages, pagesize)\r\n        } else {\r\n            response = await usersAPI.getUsers(currentPages, pagesize)\r\n        }\r\n        dispatch(toggleIsFetchingAC(false))\r\n        dispatch(setUsersAC(response.items))\r\n        dispatch(setTotalUsersCountAC(response.totalCount))\r\n    }\r\n}\r\n// делает запрос на сервер, меняет на сервере свойство фоллоу на true\r\nexport const followTC = (id: any) => {\r\n    return async (dispatch: any) => {\r\n        dispatch(setUserIdForDisabledAC(true, id))\r\n        let response = await usersAPI.follow(id)\r\n        if (response.resultCode === 0) {\r\n            dispatch(followAC(id))\r\n        }\r\n        dispatch(setUserIdForDisabledAC(false, id))\r\n    }\r\n}\r\n// делает запрос на сервер, удаляет на сервере свойство фоллоу(ставит по умолчанию false)\r\nexport const unFollowTC = (id: any) => {\r\n    return async (dispatch: any) => {\r\n        dispatch(setUserIdForDisabledAC(true, id))\r\n        let response = await usersAPI.unFollow(id)\r\n        if (response.resultCode === 0) {\r\n            dispatch(unFollowAC(id))\r\n        }\r\n        dispatch(setUserIdForDisabledAC(false, id))\r\n    }\r\n}\r\n\r\n//ActionCreator\r\nexport const followAC = (userId: number): FollowType =>\r\n    ({type: FOLLOW, userId})\r\nexport const unFollowAC = (userId: number): UNfollowType =>\r\n    ({type: UN_FOLLOW, userId})\r\n\r\n\r\nexport const setUsersAC = (users: []): SetUsersType =>\r\n    ({type: SET_USERS, users})\r\nexport const setCurrentPageAC = (currentPages: number): SetCurrentPageType =>\r\n    ({type: SET_CURRENT_PAGE, currentPages})\r\nexport const setTotalUsersCountAC = (total: number): SetTotalUsersCountACType =>\r\n    ({\r\n        type: SET_TOTAL_USERS_COUNT,\r\n        totalCounter: total\r\n    })\r\n// isFoll.Pr true, то в IsFollowingProgress в стейте записываем айди выбранного пользователя, иначе пустой массив\r\nexport const setUserIdForDisabledAC = (IsFollowingProgress: boolean, userId: any): SetUserIdForDisableType =>\r\n    ({\r\n        type: SET_USERID_FOR_DISABLE,\r\n        IsFollowingProgress: IsFollowingProgress,\r\n        userId\r\n    })\r\n\r\n\r\n// меняем в стейте значение isFetching. тру, значит, еще в процессе загрузки.\r\nexport const toggleIsFetchingAC = (isFetching: boolean): ToggleIsFetchingType =>\r\n    ({\r\n        type: TOGGLE_IS_FETCHING,\r\n        isFetching: isFetching\r\n    })\r\nexport const toggleFollowAC = (follow: boolean): ToggleIsFollowType =>\r\n    ({type: TOGGLE_IS_FOLLOW, follow})\r\n\r\n","import {authorizationAPI, securityAPI} from \"../../DAL/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nconst SET_USER_DATA = \"SET_USER_DATA\"\r\nconst GET_CAPTCHA = \"CAPTCHA\"\r\n\r\n//type for Reduces\r\ntype SetUserType = {\r\n    type: \"SET_USER_DATA\"\r\n    userId: any,\r\n    email: any,\r\n    login: any,\r\n    isAuthorization: any\r\n}\r\ntype GetCaptchaType = {\r\n    type: \"CAPTCHA\"\r\n    captchaURl: any\r\n}\r\n\r\n\r\n///////type for Action\r\ntype ActionType = SetUserType | GetCaptchaType\r\n\r\n/////initial State\r\ntype AuthorizationStateType = {\r\n    userId: number | null\r\n    email: string | null\r\n    login: boolean | null\r\n    isAuthorization: boolean | null\r\n    captchaURl: any\r\n}\r\n\r\nlet initialState: AuthorizationStateType = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuthorization: false,\r\n    captchaURl: null\r\n}\r\n\r\nexport const AuthorizationReducer = (state: AuthorizationStateType = initialState, action: ActionType): AuthorizationStateType => {\r\n    if (state) {\r\n        switch (action.type) {\r\n            case SET_USER_DATA:\r\n                return {\r\n                    ...state,\r\n                    userId: action.userId,\r\n                    email: action.email,\r\n                    login: action.login,\r\n                    isAuthorization: action.isAuthorization\r\n                }\r\n                case GET_CAPTCHA:\r\n                return {\r\n                    ...state,\r\n                    captchaURl: action.captchaURl\r\n                }\r\n            default:\r\n                return state;\r\n        }\r\n    } else return state\r\n}\r\n//Thunk Creator\r\n// авторизируемся\r\nexport const loginTC = (email: string, password: string, rememberMe: boolean, captcha: any) => async (dispath: any) => {\r\n    let response = await authorizationAPI.login(email, password, rememberMe, captcha)\r\n    // если авт прошла успешно, то выполняем это\r\n    if (response.data.resultCode === 0) {\r\n        dispath(getAuthorizationDataTC())\r\n    }\r\n    else {\r\n        if (response.data.resultCode === 10){\r\n            dispath(getCaptchaTC())\r\n        }\r\n        let errorMessages = response.data.messages.length > 0\r\n            ? response.data.messages[0]\r\n            : \"some error\"\r\n        dispath(stopSubmit(\"Login\", {_error: errorMessages}))\r\n    }\r\n}\r\n//получаем данные о пользователе, который авторизировался\r\nexport const getAuthorizationDataTC = () => async (dispath: Dispatch) => {\r\n    // т к авт прошла успешно, то делаем запрос, от куда берем даные текущего пользователя\r\n    let response = await authorizationAPI.me()\r\n    if (response.data.resultCode === 0) {\r\n        let {id, email, login} = response.data.data\r\n        dispath(setAuthorizationDataAC(id, email, login, true))\r\n    }\r\n}\r\n//делаем запрос на сервер, удаляем свои данные для автаризации\r\nexport const logoutTC = () => async (dispath: Dispatch) => {\r\n    let response = await authorizationAPI.logout()\r\n    if (response.data.resultCode === 0) {\r\n        dispath(setAuthorizationDataAC(null, null, null, false))\r\n    }\r\n}\r\n// делаем запрос на сервер, получаем картинку антибот\r\nexport const getCaptchaTC = () => async (dispath: Dispatch) => {\r\n    let response = await securityAPI.getCaptchaUrl()\r\n    let captchaUrl = response.data.url\r\n    debugger\r\n    dispath(setCaptchaAC(captchaUrl))\r\n}\r\n\r\n//ACTION CREATOR\r\n// меняем данные в в стейте на данные авторизированного пользователя\r\nexport const setAuthorizationDataAC = (userId: number | null, email: string | null, login: string | null, isAuthorization: boolean | null): SetUserType => ({\r\n    type: SET_USER_DATA,\r\n    userId: userId,\r\n    email: email,\r\n    login: login,\r\n    isAuthorization: isAuthorization\r\n})\r\n// добовляем капчу, пришедшую из сервера, в наш стейт\r\nexport const setCaptchaAC = (captchaURl: any): GetCaptchaType => ({\r\n    type: GET_CAPTCHA,\r\n    captchaURl: captchaURl\r\n})","import {getAuthorizationDataTC} from \"./authorization-reducer\";\r\n\r\nconst SET_INITIALIZED = \"SET_INITIALIZED\"\r\n\r\n//type for Reduces\r\ntype InitializedType = {\r\n    type: \"SET_INITIALIZED\"\r\n}\r\n\r\n//type for Action\r\ntype ActionType = InitializedType\r\n\r\n//initial State\r\ntype StateType = {\r\n    initialized: boolean\r\n}\r\nlet initialState: StateType = {\r\n    initialized: false\r\n}\r\n\r\nexport const AppReducer = (state: StateType = initialState, action: ActionType): StateType => {\r\n    if (state) {\r\n        switch (action.type) {\r\n            case SET_INITIALIZED:{\r\n                return {\r\n                    ...state,\r\n                    initialized: true\r\n                }\r\n            }\r\n            default:\r\n                return state;\r\n        }\r\n    }\r\n    else return state\r\n}\r\n\r\n//Thunk Creator\r\nexport const initializeTC = () => (dispath: any) => {\r\n   let promise= dispath(getAuthorizationDataTC());\r\n    Promise.all([promise]).then(()=>{\r\n        dispath(initializedSuccessAC());\r\n    })\r\n}\r\n\r\n// Action Creator\r\nexport const initializedSuccessAC = (): InitializedType => ({type: SET_INITIALIZED})\r\n\r\n\r\n","import {messagesAPI} from \"../../DAL/api\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nconst GET_SELECTED_DIALOG = \"GET_SELECTED_DIALOG\"\r\nconst GET_USERS_TALKED_WITH = \"GET_USERS_TALKED_WITH\"\r\n//type for Reduces\r\ntype GetSelectedDialogType = {\r\n    type: \"GET_SELECTED_DIALOG\"\r\n    items: any;\r\n}\r\ntype GetUsersTalkedWithType = {\r\n    type: \"GET_USERS_TALKED_WITH\"\r\n    usersArray: any;\r\n}\r\n\r\n//type for Action\r\ntype ActionType = GetSelectedDialogType | GetUsersTalkedWithType\r\n\r\n//initial State\r\ntype StateType = {\r\n    recipientId: number | null\r\n    messages: any\r\n    oneMessage: string\r\n    users: any\r\n}\r\nlet initialState: StateType = {\r\n    recipientId: null,\r\n    messages: null,\r\n    oneMessage: \"\",\r\n    users: null\r\n}\r\n\r\nexport const dialogReducer = (state: StateType = initialState, action: ActionType): StateType => {\r\n    if (state) {\r\n        switch (action.type) {\r\n            case GET_SELECTED_DIALOG:\r\n                let oldMessages = {...state}\r\n                if (state.messages !== null) {\r\n                    return {\r\n                        ...state,\r\n                        messages: action.items.concat(oldMessages.messages)\r\n                    }\r\n                } else return {\r\n                    ...state,\r\n                    messages: action.items\r\n                }\r\n            case GET_USERS_TALKED_WITH:\r\n                return {\r\n                    ...state,\r\n                    users: action.usersArray\r\n                }\r\n\r\n            default:\r\n                return state;\r\n        }\r\n    } else return state\r\n}\r\n\r\n\r\n//Thunk Creator\r\n// получить с сервера список сообщений с выбранным пользователем\r\nexport const getSelectedDialogTC = (id: any, currentPages: any, pagesize: any) => async (dispatch: Dispatch) => {\r\n    let response = await messagesAPI.getSelectedDialog(id, currentPages, pagesize)\r\n    dispatch(getSelectedDialogAC(response.items));\r\n}\r\n// отправить сообщение на сервер\r\nexport const senMessageTC = (userId: any, body: string) => async (dispatch: any) => {\r\n    let response = await messagesAPI.sendMessage(userId, body)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getSelectedDialogTC(userId, 1, 20))\r\n    }\r\n}\r\n// получить список пользователей с кем общался\r\nexport const getUsersTalkedWithTC = () => async (dispatch: Dispatch) => {\r\n    let response = await messagesAPI.getUsersTalkedWith()\r\n    dispatch(getUsersTalkedWithAC(response));\r\n\r\n}\r\n\r\n// Action Creator\r\nexport const getSelectedDialogAC = (items: any): GetSelectedDialogType => ({\r\n    type: GET_SELECTED_DIALOG,\r\n    items: items\r\n})\r\nexport const getUsersTalkedWithAC = (users: any): GetUsersTalkedWithType => ({\r\n    type: GET_USERS_TALKED_WITH,\r\n    usersArray: users\r\n})\r\n\r\n\r\n\r\n\r\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport {ProfileReducer} from \"./Reducers/profile-reducer\";\r\nimport {UsersReducer} from \"./Reducers/users-reducer\";\r\nimport {AuthorizationReducer} from \"./Reducers/authorization-reducer\";\r\nimport thunkMiddlewere from \"redux-thunk\";//thunk as thunkMiddleWere\r\nimport  {reducer as formReducer} from 'redux-form'\r\nimport {AppReducer} from \"./Reducers/app-reducer\";\r\nimport {dialogReducer} from \"./Reducers/dialogs-reducer\";\r\n\r\n\r\nexport const reducers = combineReducers(\r\n    {\r\n        profile: ProfileReducer,\r\n        dialog: dialogReducer,\r\n        usersPage: UsersReducer,\r\n        auth: AuthorizationReducer,\r\n        form: formReducer,\r\n        app: AppReducer\r\n    }\r\n)\r\n\r\nexport type StoreStateType = ReturnType<typeof reducers>\r\n\r\nconst composeEnhancers = (window && (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\nexport const store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddlewere)));\r\n\r\n// @ts-ignore\r\nwindow.store = store\r\n\r\n\r\n\r\n","export const requiredField=(value:any)=>{\r\n    if(value) return undefined\r\n    return \"Field is required\"\r\n}\r\nexport const maxLength=(maxLength: number)=>(value:any)=>{\r\n    if(value && value.length>maxLength) return `max lenght is ${maxLength} symbols`\r\n    return undefined\r\n}","import React, {useState} from 'react'\r\nimport s from \"./messages.module.scss\"\r\n\r\nexport const Messages = () => {\r\n\r\n\r\n    return (\r\n        <div className={s.block}>\r\n            <div className={s.container}>\r\n                <div className={s.chats}>\r\n                    <div className={s.search}>\r\n                        <input className={s.inp}></input>\r\n                        <div className={s.serBut}>+</div>\r\n                        <div className={s.butMenu}>\r\n                            <div className={s.btn}>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className={s.users}>\r\n                        <div className={s.user}>\r\n                            <div className={s.avatar}>\r\n                                <div className={s.ava}></div>\r\n                            </div>\r\n                            <div className={s.main}>\r\n                                <div className={s.name}>hgjhjgj</div>\r\n                                <div className={s.lastMessages}>jhjkhkjh knkj... </div>\r\n                            </div>\r\n                            <div className={s.info}>\r\n                                <div className={s.time}>11:00</div>\r\n                                <div className={s.countUnread}>5</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className={s.user}>\r\n                            <div className={s.avatar}>\r\n                                <div className={s.ava}></div>\r\n                            </div>\r\n                            <div className={s.main}>\r\n                                <div className={s.name}>hgjhjgj</div>\r\n                                <div className={s.lastMessages}>jhjkhkjh knkj... </div>\r\n                            </div>\r\n                            <div className={s.info}>\r\n                                <div className={s.time}>11:00</div>\r\n                                <div className={s.countUnread}>5</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className={s.user}>\r\n                            <div className={s.avatar}>\r\n                                <div className={s.ava}></div>\r\n                            </div>\r\n                            <div className={s.main}>\r\n                                <div className={s.name}>hgjhjgj</div>\r\n                                <div className={s.lastMessages}>jhjkhkjh knkj... </div>\r\n                            </div>\r\n                            <div className={s.info}>\r\n                                <div className={s.time}>11:00</div>\r\n                                <div className={s.countUnread}>5</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className={s.user}>\r\n                            <div className={s.avatar}>\r\n                                <div className={s.ava}></div>\r\n                            </div>\r\n                            <div className={s.main}>\r\n                                <div className={s.name}>hgjhjgj</div>\r\n                                <div className={s.lastMessages}>jhjkhkjh knkj... </div>\r\n                            </div>\r\n                            <div className={s.info}>\r\n                                <div className={s.time}>11:00</div>\r\n                                <div className={s.countUnread}>5</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className={s.user}>\r\n                            <div className={s.avatar}>\r\n                                <div className={s.ava}></div>\r\n                            </div>\r\n                            <div className={s.main}>\r\n                                <div className={s.name}>hgjhjgj</div>\r\n                                <div className={s.lastMessages}>jhjkhkjh knkj... </div>\r\n                            </div>\r\n                            <div className={s.info}>\r\n                                <div className={s.time}>11:00</div>\r\n                                <div className={s.countUnread}>5</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className={s.user}>\r\n                            <div className={s.avatar}>\r\n                                <div className={s.ava}></div>\r\n                            </div>\r\n                            <div className={s.main}>\r\n                                <div className={s.name}>hgjhjgj</div>\r\n                                <div className={s.lastMessages}>jhjkhkjh knkj... </div>\r\n                            </div>\r\n                            <div className={s.info}>\r\n                                <div className={s.time}>11:00</div>\r\n                                <div className={s.countUnread}>5</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={s.selectedChat}>\r\n                    <div className={s.userSelected}>\r\n                        <div className={s.ava2}></div>\r\n                        <div className={s.name2}> Anastasia Sinkevich</div>\r\n                    </div>\r\n                    <div className={s.chat}>\r\n                        <div className={s.chatField}>\r\n                            <div className={s.my}><p className={s.sms}>hi</p></div>\r\n                            <div className={s.friend}><p className={s.sms}>hello my loverhello my loverhello my loverhello my loverhello my loverhello my loverhello my loverhello my lover</p></div>\r\n                        </div>\r\n                        <div className={s.sendField}>\r\n                            <textarea className={s.printMess}></textarea>\r\n                            <div className={s.sendMess}></div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useState} from 'react'\r\nimport s from \"./users.module.scss\"\r\n\r\nexport const Users = () => {\r\n\r\n\r\n    return (\r\n        <div className={s.block}>\r\n            {/*посмотреть друзей*/}\r\n            <div className={s.container}>\r\n                <div className={s.search}>\r\n                    <input className={s.inp}\r\n                           placeholder={\"Search Members\"}></input>\r\n                    <div className={s.spn}></div>\r\n                </div>\r\n                <div className={s.viewFriends}>\r\n                    <div className={s.friendContainer}>\r\n                        <div className={s.ava}></div>\r\n                        <div className={s.name}>Hbj Kdscsdcd</div>\r\n                        <div className={s.butt}>\r\n                            <div className={s.butItem}>foll/unf</div>\r\n                            <div className={s.butItem}> send sms</div>\r\n                        </div>\r\n                        <div className={s.viewProfileFriend}>view profile</div>\r\n                    </div><div className={s.friendContainer}>\r\n                        <div className={s.ava}></div>\r\n                        <div className={s.name}>Hbj Kdscsdcd</div>\r\n                        <div className={s.butt}>\r\n                            <div className={s.butItem}>foll/unf</div>\r\n                            <div className={s.butItem}> send sms</div>\r\n                        </div>\r\n                        <div className={s.viewProfileFriend}>view profile</div>\r\n                    </div><div className={s.friendContainer}>\r\n                        <div className={s.ava}></div>\r\n                        <div className={s.name}>Hbj Kdscsdcd</div>\r\n                        <div className={s.butt}>\r\n                            <div className={s.butItem}>foll/unf</div>\r\n                            <div className={s.butItem}> send sms</div>\r\n                        </div>\r\n                        <div className={s.viewProfileFriend}>view profile</div>\r\n                    </div><div className={s.friendContainer}>\r\n                        <div className={s.ava}></div>\r\n                        <div className={s.name}>Hbj Kdscsdcd</div>\r\n                        <div className={s.butt}>\r\n                            <div className={s.butItem}>foll/unf</div>\r\n                            <div className={s.butItem}> send sms</div>\r\n                        </div>\r\n                        <div className={s.viewProfileFriend}>view profile</div>\r\n                    </div><div className={s.friendContainer}>\r\n                        <div className={s.ava}></div>\r\n                        <div className={s.name}>Hbj Kdscsdcd</div>\r\n                        <div className={s.butt}>\r\n                            <div className={s.butItem}>foll/unf</div>\r\n                            <div className={s.butItem}> send sms</div>\r\n                        </div>\r\n                        <div className={s.viewProfileFriend}>view profile</div>\r\n                    </div><div className={s.friendContainer}>\r\n                        <div className={s.ava}></div>\r\n                        <div className={s.name}>Hbj Kdscsdcd</div>\r\n                        <div className={s.butt}>\r\n                            <div className={s.butItem}>foll/unf</div>\r\n                            <div className={s.butItem}> send sms</div>\r\n                        </div>\r\n                        <div className={s.viewProfileFriend}>view profile</div>\r\n                    </div><div className={s.friendContainer}>\r\n                        <div className={s.ava}></div>\r\n                        <div className={s.name}>Hbj Kdscsdcd</div>\r\n                        <div className={s.butt}>\r\n                            <div className={s.butItem}>foll/unf</div>\r\n                            <div className={s.butItem}> send sms</div>\r\n                        </div>\r\n                        <div className={s.viewProfileFriend}>view profile</div>\r\n                    </div><div className={s.friendContainer}>\r\n                        <div className={s.ava}></div>\r\n                        <div className={s.name}>Hbj Kdscsdcd</div>\r\n                        <div className={s.butt}>\r\n                            <div className={s.butItem}>foll/unf</div>\r\n                            <div className={s.butItem}> send sms</div>\r\n                        </div>\r\n                        <div className={s.viewProfileFriend}>view profile</div>\r\n                    </div><div className={s.friendContainer}>\r\n                        <div className={s.ava}></div>\r\n                        <div className={s.name}>Hbj Kdscsdcd</div>\r\n                        <div className={s.butt}>\r\n                            <div className={s.butItem}>foll/unf</div>\r\n                            <div className={s.butItem}> send sms</div>\r\n                        </div>\r\n                        <div className={s.viewProfileFriend}>view profile</div>\r\n                    </div><div className={s.friendContainer}>\r\n                        <div className={s.ava}></div>\r\n                        <div className={s.name}>Hbj Kdscsdcd</div>\r\n                        <div className={s.butt}>\r\n                            <div className={s.butItem}>foll/unf</div>\r\n                            <div className={s.butItem}> send sms</div>\r\n                        </div>\r\n                        <div className={s.viewProfileFriend}>view profile</div>\r\n                    </div><div className={s.friendContainer}>\r\n                        <div className={s.ava}></div>\r\n                        <div className={s.name}>Hbj Kdscsdcd</div>\r\n                        <div className={s.butt}>\r\n                            <div className={s.butItem}>foll/unf</div>\r\n                            <div className={s.butItem}> send sms</div>\r\n                        </div>\r\n                        <div className={s.viewProfileFriend}>view profile</div>\r\n                    </div>\r\n                    <div className={s.friendContainer}>\r\n                        <div className={s.ava}></div>\r\n                        <div className={s.name}>LMklcjdksc JKNjnkjncs</div>\r\n                        <div className={s.butt}>\r\n                            <div className={s.butItem}>foll/unf</div>\r\n                            <div className={s.butItem}> send sms</div>\r\n                        </div>\r\n                        <div className={s.viewProfileFriend}>view profile</div>\r\n\r\n                    </div>\r\n                    <div className={s.friendContainer}>\r\n                        <div className={s.ava}></div>\r\n                        <div className={s.name}>JKl JK</div>\r\n                        <div className={s.butt}>\r\n                            <div className={s.butItem}>foll/unf</div>\r\n                            <div className={s.butItem}> send sms</div>\r\n                        </div>\r\n                        <div className={s.viewProfileFriend}>view profile</div>\r\n\r\n                    </div>\r\n                    <div className={s.friendContainer}>\r\n                        <div className={s.ava}></div>\r\n                        <div className={s.name}> Lfjejnfkje KNjn</div>\r\n                        <div className={s.butt}>\r\n                            <div className={s.butItem}>foll/unf</div>\r\n                            <div className={s.butItem}> send sms</div>\r\n                        </div>\r\n                        <div className={s.viewProfileFriend}>view profile</div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport s from \"./header.module.scss\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <div className={s.block}>\r\n\r\n            <div className={s.icon}>\r\n                <img className={s.iconNetwork}\r\n                     src={\"https://mythemestore.com/beehive-preview/wp-content/uploads/2020/07/logo-icon.svg\"}/>\r\n            </div>\r\n            <div className={s.container}>\r\n                <div className={s.info}>\r\n                    <div className={s.ava}></div>\r\n                    <div className={s.name}>Anastasia Verich</div>\r\n                </div>\r\n                <div className={s.unLog}>\r\n                    <NavLink to=\"/*\" className={s.btn}>\r\n                        Un login\r\n                    </NavLink></div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport s from \"./nav.module.scss\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\n\r\nexport const Nav =()=> {\r\n    return (<div className={s.block}>\r\n<div className={s.container}>\r\n    <div className={s.item}>\r\n        <NavLink to=\"/profile\" className={s.buttonItem}>\r\n            Profile\r\n        </NavLink>\r\n    </div>\r\n    <div className={s.item}>\r\n        <NavLink to=\"/messages\" className={s.buttonItem}>\r\n            Messages\r\n        </NavLink>\r\n    </div>\r\n    <div className={s.item}>\r\n        <NavLink to=\"/users\" className={s.buttonItem}>\r\n            Users\r\n        </NavLink>\r\n    </div>\r\n    <div className={s.item}>Set</div>\r\n\r\n</div>\r\n    </div>)\r\n}","import React from 'react';\r\nimport style from './forms.module.css'\r\nimport {Field} from \"redux-form\";\r\n\r\nexport const Textarea = ({input, meta, ...props}: any) => {\r\n    const hasError = meta.touched && meta.error\r\n    return <div className={style.formControl + \" \" + (hasError ? style.error : \"\")}>\r\n        <textarea {...input} {...props}/>\r\n        <div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    </div>\r\n}\r\nexport const Input = ({input, meta, ...props}: any) => {\r\n    const hasError = meta.touched && meta.error\r\n    return <div className={style.formControl + \" \" + (hasError ? style.error : \"\")}>\r\n        <input {...input} {...props}/>\r\n        <div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    </div>\r\n}\r\nexport const Form = ({input, meta, el, ...props}: any) => {\r\n    const hasError = meta.touched && meta.error\r\n    return <div className={style.formControl + \" \" + (hasError ? style.error : \"\")}>\r\n        <props.el {...input} {...props}/>\r\n        <div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport const createFormField = (placeholder: any, name: any, validator: any, component: any, props = {}, text = \"\") => (\r\n    <>\r\n        <Field placeholder={placeholder}\r\n               name={name}\r\n               validate={validator}\r\n               component={component}\r\n               {...props}/> {text}\r\n    </>\r\n)\r\n","import React from 'react'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {createFormField, Input} from \"../../UI/component/Common/FormsControl/FormsControl\";\r\nimport {maxLength, requiredField} from \"../../UI/utils/validators/validators\";\r\nimport s from \"./login-form.module.scss\";\r\n\r\nconst maxLengthValidator = maxLength(50)\r\n\r\nconst LoginForm = ({handleSubmit, error, x}: any) => {\r\n    return (\r\n/*        В пропсах теперь нам очень много всего приходит после оборачивания компоненты с формой в HOC.\r\n        В т.ч. метод handleSubmit, который позволяет не перезагружать страницу при отправке.*/\r\n        <form onSubmit={handleSubmit} className={s.loginForm}>\r\n                <Field placeholder={\"Email\"}\r\n                       component={Input}\r\n                       name={\"email\"}\r\n                       validate={[requiredField, maxLengthValidator]}\r\n                       props={{ className: s.input }}/>\r\n{/*Все поля в форме меняем на компоненты Field, которые пришли к нам из библиотеки, с указанием component аналогично пропсам*/}\r\n                <Field placeholder={\"Password\"}\r\n                       component={Input}\r\n                       name={\"password\"}\r\n                       validate={[requiredField, maxLengthValidator]}\r\n                       props={{ className: s.input }}/>\r\n            <div className={s.rememberMe}>\r\n                <Field type={\"checkbox\"}\r\n                       component={Input}\r\n                       name={\"rememberMe\"}\r\n                       validate={[maxLengthValidator]}\r\n                       props={{ className: s.checkbox }}/> Remember\r\n            </div>\r\n            {x && <img className={s.captcha} src={x}/>}\r\n\r\n            {x && createFormField(\"captcha URl\", \"captcha\", [], Input, {className: s.input})}\r\n\r\n            {error && <div className={s.formSunnierError}>\r\n                {error}\r\n            </div>}\r\n\r\n                <button className={s.button} type='submit' >Login</button>\r\n\r\n        </form>\r\n\r\n    )\r\n}\r\n//присвоили уникальное имя нашей новой форме в параметре – {form: 'login'}\r\n export const LoginReduxForm: any = reduxForm({\r\n    form: 'Login'\r\n})(LoginForm)\r\n\r\n// Теперь при вводе текста в форме в нашем стейте появляется временный объект login (имя нашей формы),\r\n// который содержит много объектов, свойствами которых являются наши поля (берутся по name).\r\n// Среди них объекты «было ли посещено поле», «было ли тронуто» и т.д.\r\n//     А также объект values, где в свойства (берутся по name) попадает вводимый текст.\r\n// можно вывести в консоль и посмотреть параметры, потом их использовать","import React from \"react\";\r\nimport {StoreStateType} from \"../../BLL/store\";\r\nimport {loginTC} from \"../../BLL/Reducers/authorization-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {Login} from \"./login\";\r\n\r\nconst mapStateToProps = (state: StoreStateType) => ({\r\n    isAuth: state.auth.isAuthorization,\r\n    captcha: state.auth.captchaURl\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n    return {\r\n        login: (email: string, password: string, rememberMe: boolean, captcha: any) => {\r\n            dispatch(loginTC(email, password, rememberMe, captcha))\r\n        }\r\n    }\r\n}\r\n\r\nexport const LoginContainer = connect(\r\n    mapStateToProps, mapDispatchToProps)(Login)","import React from 'react'\r\nimport s from \"./login.module.scss\"\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {LoginReduxForm} from \"./login-form\";\r\nimport {reset} from \"redux-form\";\r\n\r\nexport const Login = (props:any) => {\r\n/*    в месте вызова нашей компоненты с окончательной «редаксовской формой» теперь нужно повесить\r\n    произвольную функцию через onSubmit, которая соберет данные из полей из полей и обработает их при нажатии на кнопку:*/\r\n    const onSubmit = (formData: any) => {\r\n        console.log(formData)//здесь мы получаем данные с формы и будем из диспатчить потом\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha)\r\n        // dispatch(reset(\"profileAddPostForm\")) для очистки полей в форме, в кавычках имя формы\r\n    }\r\n    if (props.isAuth) return <Redirect to={\"/profile\"}/>\r\n\r\n    const on= false;\r\n\r\n    return (\r\n        <div className={s.block}>\r\n            <div className={s.container}>\r\n                <div className={s.rightPart}>\r\n                    <div className={s.pathContainer}>\r\n                        <div className={s.firstText}>Join the club</div>\r\n                        <div className={s.secondText}>Lorem ipsum dolor sit amet,\r\n                            consectetur adipiscing elit. Ut elit tellus, luctus.\r\n                        </div>\r\n                        <div className={s.oneAdvantage}>\r\n                            <div className={s.icon}> ♥icon</div>\r\n                            <div className={s.description}>\r\n                                <div className={s.title}>Community</div>\r\n                                <div className={s.desc}>At vero eos et accusamus et.</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className={s.oneAdvantage}>\r\n                            <div className={s.icon}/>\r\n                            <div className={s.description}>\r\n                                <div className={s.title}>Online shop</div>\r\n                                <div className={s.desc}>At vero eos et accusamus et.</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className={s.oneAdvantage}>\r\n                            <div className={s.icon}/>\r\n                            <div className={s.description}>\r\n                                <div className={s.title}>Job search</div>\r\n                                <div className={s.desc}>At vero eos et accusamus et.</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={s.leftPart}>\r\n                    <div className={s.pathContainer}>\r\n                        <img  className={s.iconNetwork} src={\"https://mythemestore.com/beehive-preview/wp-content/uploads/2020/07/logo-icon.svg\"}/>\r\n                        <div className={s.welcome}>Welcome</div>\r\n                        <LoginReduxForm onSubmit={onSubmit} x={props.captcha}/>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/no_image.4a9ff6fc.png\";","export default __webpack_public_path__ + \"static/media/looading.c1b8565f.gif\";","import looading from '../../../assets/img/looading.gif'\r\nimport React from \"react\";\r\n\r\nexport const Preloader=()=>{\r\n    return <img src={looading}/>\r\n}","import s from \"./view-profile.module.scss\";\r\nimport React from \"react\";\r\n\r\nexport const ViewProfile = (props: any) => {\r\n    return (\r\n        <div className={s.viewProfile}>\r\n            <div className={s.titleMenu}> View Profile</div>\r\n            <div className={s.selectionMainContainer}>\r\n                <div className={s.titleColumn}>\r\n                    <div className={s.item}>Name</div>\r\n                    <div className={s.item}>Day of Birth</div>\r\n                    <div className={s.item}>Sex</div>\r\n                    <div className={s.item}>City</div>\r\n                    <div className={s.item}>Country</div>\r\n                </div>\r\n                <div className={s.descriptionColumn}>\r\n                    <div className={s.item}>{props.profile.fullName}</div>\r\n                    <div className={s.item}>18.11.1996</div>\r\n                    <div className={s.item}>W</div>\r\n                    <div className={s.item}>Minsk</div>\r\n                    <div className={s.item\r\n                    }>Belarus\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import s from \"./view-friends.module.scss\";\r\nimport React from \"react\";\r\n\r\nexport const ViewFrinds = (props: any) => {\r\n    return (\r\n        <div className={s.viewFriends}>\r\n            <div className={s.friendContainer}>\r\n                <div className={s.ava}></div>\r\n                <div className={s.name}>Hbj Kdscsdcd</div>\r\n                <div className={s.butt}>\r\n                    <div className={s.butItem}>foll/unf</div>\r\n                    <div className={s.butItem}> send sms</div>\r\n                </div>\r\n                <div className={s.viewProfileFriend}>view profile</div>\r\n            </div>\r\n            <div className={s.friendContainer}>\r\n                <div className={s.ava}></div>\r\n                <div className={s.name}>LMklcjdksc JKNjnkjncs</div>\r\n                <div className={s.butt}>\r\n                    <div className={s.butItem}>foll/unf</div>\r\n                    <div className={s.butItem}> send sms</div>\r\n                </div>\r\n                <div className={s.viewProfileFriend}>view profile</div>\r\n\r\n            </div>\r\n            <div className={s.friendContainer}>\r\n                <div className={s.ava}></div>\r\n                <div className={s.name}>JKl JK</div>\r\n                <div className={s.butt}>\r\n                    <div className={s.butItem}>foll/unf</div>\r\n                    <div className={s.butItem}> send sms</div>\r\n                </div>\r\n                <div className={s.viewProfileFriend}>view profile</div>\r\n\r\n            </div>\r\n            <div className={s.friendContainer}>\r\n                <div className={s.ava}></div>\r\n                <div className={s.name}> Lfjejnfkje KNjn</div>\r\n                <div className={s.butt}>\r\n                    <div className={s.butItem}>foll/unf</div>\r\n                    <div className={s.butItem}> send sms</div>\r\n                </div>\r\n                <div className={s.viewProfileFriend}>view profile</div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n\r\n}","import s from \"./view-contacts.module.scss\";\r\nimport React from \"react\";\r\n\r\nexport const ViewContacts = (props: any) => {\r\n    return (\r\n        <div className={s.viewProfile}>\r\n            <div className={s.titleMenu}> My contacts</div>\r\n            <div className={s.selectionMainContainer}>\r\n                {Object.keys(props.profile.contacts).map(key => {\r\n                    return <Contact key={key} contactTitle={key}\r\n                                    contactValue={props.profile.contacts[key]}/>\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst Contact = (props: any) => {\r\n    return (\r\n        <div className={s.oneContact}>\r\n            <div className={s.titleColumn}>\r\n                <div className={s.item}>{props.contactTitle}</div>\r\n            </div>\r\n            <div className={s.descriptionColumn}>\r\n                <div className={s.item}>{props.contactValue}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import s from \"./about-me.module.scss\";\r\nimport React from \"react\";\r\n\r\nexport const AboutMe = (props: any) => {\r\n    return (\r\n        <div className={s.viewProfile}>\r\n            <div className={s.titleMenu}> about me</div>\r\n            <div className={s.selectionMainContainer}>\r\n                <div className={s.aboutMeField}>\r\n                    {props.profile.aboutMe}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useState} from 'react'\r\nimport s from \"./profile.module.scss\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport no_image from \"../../UI/assets/img/no_image.png\";\r\nimport {Preloader} from \"../../UI/component/Common/Preloader/Preloader\";\r\nimport {ViewProfile} from \"./menu-items/view-profile/view-profile\";\r\nimport {ViewFrinds} from \"./menu-items/view-friends/view-friends\";\r\nimport {ViewContacts} from \"./menu-items/view-contacts/view-contacts\";\r\nimport {AboutMe} from \"./menu-items/about-me/about-me\";\r\n\r\nexport const Profile = (props: any) => {\r\n    let[x, setX]=useState(false)\r\n    let[y, setY]=useState(true)\r\n    let[z, setZ]=useState(false)\r\n    let[w, setW]=useState(false)\r\n\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    } else {\r\n    return <div className={s.block}>\r\n        <div className={s.backgroundImage}>\r\n            <div className={s.topPart}>\r\n                <div className={s.avaName}>\r\n                    <div className={s.avatarContainer}>\r\n                        {props.profile.photos.large === null\r\n                            ? <img className={s.avatar} src={no_image}/>\r\n                            : <img className={s.avatar} src={props.profile.photos.large}/>}\r\n                    </div>\r\n                    <div className={s.name}> {props.profile.fullName}</div>\r\n\r\n                </div>\r\n\r\n                <div className={s.buttons}>\r\n                    <NavLink to=\"/h\" className={s.buttonItem}>\r\n                        Log\r\n                    </NavLink>\r\n                    <NavLink to=\"/messages\" className={s.buttonItem}>\r\n                        sms\r\n                    </NavLink>\r\n                    <NavLink to=\"/users\" className={s.buttonItem}>\r\n                        users\r\n                    </NavLink>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className={s.mainBlock}>\r\n            <div className={s.middlePart}>\r\n                <div className={s.firstInfo}>\r\n                    <div className={s.countFriends}><p className={s.pp}>0</p> frinds/общих</div>\r\n                    <div className={s.countFriends}><p\r\n                        className={s.pp}>{props.profile.lookingForAJob ? \"yes\" : \"no\"}</p> need job\r\n                    </div>\r\n                </div>\r\n                <div className={s.menu}>\r\n                    <div className={s.menuItem} onClick={() => {\r\n                        setX(true); setY(false); setZ(false);setW(false)\r\n                    }}>profile\r\n                    </div>\r\n                    <div className={s.menuItem} onClick={() => {\r\n                        setX(false); setY(true); setZ(false);setW(false)\r\n                    }}>contacts\r\n                    </div>\r\n                    <div className={s.menuItem} onClick={() => {\r\n                        setX(false); setY(false); setZ(true);setW(false)\r\n\r\n                    }}>about me\r\n                    </div>\r\n                    <div className={s.menuItem} onClick={() => {\r\n                        setX(false); setY(false); setZ(false);setW(true)\r\n                    }}>friends\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={s.bottomPart}>\r\n                <div className={s.info}>\r\n                    <div className={s.firstInfo}>\r\n                        <div className={s.countFriends}><p className={s.pp}>13</p> friends/общих</div>\r\n                        <div className={s.isFindWork}><p\r\n                            className={s.pp}>{props.profile.lookingForAJob ? \"yes\" : \"no\"}</p> need job\r\n                        </div>\r\n                    </div>\r\n                    <div className={s.secondInfo}>\r\n                        <div className={s.title}> My Photos</div>\r\n                        <div className={s.photos}></div>\r\n                    </div>\r\n                </div>\r\n                <div className={s.menuSelection}>\r\n                    {/* посмотреть профиль*/}\r\n                    {x && <ViewProfile profile={props.profile}/> }\r\n                    {/*посмотреть друзей*/}\r\n                    {w && <ViewFrinds/>}\r\n                    {/*мои соц сети*/}\r\n                    {y && <ViewContacts profile={props.profile}/>}\r\n                    {/*обо мне*/}\r\n                    {z && <AboutMe profile={props.profile}/>}\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    </div>\r\n}\r\n}\r\n\r\n","import React from \"react\";\r\nimport {Profile} from \"./profile\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {StoreStateType} from \"../../BLL/store\";\r\nimport {\r\n    getOneProfileTC,\r\n    getStatusTC,\r\n    updateInfoProfileTC,\r\n    updatePhotoTC,\r\n    updateStatusTC\r\n} from \"../../BLL/Reducers/profile-reducer\";\r\n\r\n\r\nclass ProfileConteiner extends React.Component<any, any>{\r\n// match из  withRouter  взялся\r\n    refreshProfile(){\r\n        let ownerId =this.props.match.params.userID\r\n        // если айди не найден, то задаем айди авторизированного пользователя\r\n        if (!ownerId){\r\n            ownerId=this.props.authorizationUserId\r\n            // если пользователь не авторизирован, то в айди ничего нет и мы редеректемся на страницу логина\r\n            if(!ownerId){\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n        this.props.getOneProfile(ownerId)\r\n        this.props.getStatus(ownerId)\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        this.refreshProfile()\r\n    }\r\n    componentDidUpdate(prevProps: Readonly<any>, prevState: Readonly<any>, snapshot?: any) {\r\n        if(this.props.match.params.userID !==prevProps.match.params.userID )\r\n            this.refreshProfile()\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Profile profile={this.props.profile}\r\n                     ownerId={!this.props.match.params.userID}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}\r\n                     updatePhoto={this.props.updatePhoto}\r\n                     updateInfoProfile={this.props.updateInfoProfile}/>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nlet mapStateToprops=(state:StoreStateType):any=>{\r\n    return{\r\n        profile: state.profile.profile,\r\n        status: state.profile.status,\r\n        authorizationUserId: state.auth.userId,\r\n        isAuthorization: state.auth.isAuthorization\r\n\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch: any)  => {\r\n    return {\r\n        getOneProfile: (id: number) => {\r\n            dispatch(getOneProfileTC(id))\r\n        },\r\n        getStatus: (id: number) => {\r\n            dispatch(getStatusTC(id))\r\n        },updateStatus: (status: string) => {\r\n            dispatch(updateStatusTC(status))\r\n        },updatePhoto: (file: any) => {\r\n            dispatch(updatePhotoTC(file))\r\n        },\r\n        updateInfoProfile: (profile: any) => {\r\n            dispatch(updateInfoProfileTC(profile))\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst ProfileContainerConnect:any= compose(\r\n    connect (mapStateToprops,{\r\n        getOneProfile:getOneProfileTC,\r\n        getStatus:getStatusTC,\r\n        updateStatus: updateStatusTC,\r\n        updatePhoto: updatePhotoTC,\r\n        updateInfoProfile: updateInfoProfileTC\r\n    })\r\n    ,withRouter\r\n)(ProfileConteiner)\r\nexport default ProfileContainerConnect\r\n","import React from 'react';\r\nimport s from \"./app.module.scss\"\r\nimport {Route, Switch} from \"react-router-dom\";\r\nimport {Login} from \"./login-page/login\";\r\nimport {Profile} from \"./profile-page/profile\";\r\nimport {Messages} from \"./messages-page/messages\";\r\nimport {Users} from \"./users-page/users\";\r\nimport {Header} from \"./header/header\";\r\nimport {Nav} from \"./nav/nav\";\r\nimport {LoginContainer} from \"./login-page/login-container\";\r\nimport ProfileContainerConnect from \"./profile-page/profile-container\";\r\n\r\n\r\nexport const App = () => {\r\n    return (<div className={s.block}>\r\n            <Header/>\r\n            <div className={s.container}>\r\n                <Nav/>\r\n                <Switch>\r\n                    <Route path='/profile'\r\n                           render={() => <ProfileContainerConnect/>}/>\r\n                    <Route path='/messages'\r\n                           render={() => <Messages/>}/>\r\n                    <Route path='/users'\r\n                           render={() => <Users/>}/>\r\n                    <Route path='*'\r\n                           render={() => <LoginContainer/>}\r\n                    />\r\n\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {AppContainer} from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {store} from \"./BLL/store\";\r\nimport {Provider} from \"react-redux\";\r\nimport {BrowserRouter, HashRouter} from \"react-router-dom\";\r\nimport {Login} from \"./ui-new/login-page/login\";\r\nimport {Profile} from \"./ui-new/profile-page/profile\";\r\nimport {App} from \"./ui-new/App\";\r\nimport {Users} from \"./ui-new/users-page/users\";\r\nimport {Messages} from \"./ui-new/messages-page/messages\";\r\n\r\n// BrowserRouter добовляет\r\n// Provider добовляет store в контекст, из которого все компаненты могут брать данные ( наприер стор, тема темная/светлая, язык)\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <BrowserRouter>\r\n{/*\r\n            <AppContainer/>\r\n*/}\r\n\r\n\r\n            <App/>\r\n\r\n\r\n        </BrowserRouter>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\nreportWebVitals();\r\n// реакт библиотека- это библиотека, которая эффективно отрисовывает html. Эффективно, в плане она не перерисовывает те элементы, которые не надо\r\n// реакт загружается и живет в браузере\r\n//компанента возвращает тсикс или джсикс\r\n\r\n//сайдэффект= запросы на сервер, сетТаймаут, обращение к дом элементам на прямую\r\n//  шудКомпонентАпдейт - реакт.Мемо\r\n// пьюрКомпонент\r\n//\r\n//\r\n///\r\n// редакс это система стейт менеджмента, то что позволчет управлять удобно стейто\r\n// редакс состоит из одного главного обьекта стор(хранилище,обьект ооп) .В стор мы засовываем редьюсеры, из которых он будет состоять.\r\n// редьюсеры это функции преобразователи. они получают на входе\r\n// экшен(обьект, инструкция, у которого минимум есть тип и мб данные) и часть стейта и преобразовывает стейт\r\n// делает преобраования он иммутабельно( изменяет не стейт а его копию)\r\n//\r\n// стор(хранилище) обьект ооп,  с ним можно взаимодействовать через его интерфейс( методы и свойства)\r\n// есть три главных метода:\r\n//getState позволяет получить из стора актуальный стейт\r\n//subscribe позволяет подписаться подпищику на изменение стейта\r\n//dispatch позволяет приобразовать стейт\r\n\r\n\r\n// реакт редакс для связки реакта и редакса. обеспечивает связь коспоненты со стором.\r\n// на помощь для связи комп. со стором приходит фунция connect\r\n// connect это хок. он создает вокгруг нашей компаненты другую компаненту. она снабжает нашу компаненты\r\n// connect(mstp, mdtp). mstp берет из стейта часть, которая использоваться будет в нашей компаненте( в нашу комп приходит это впропсах)\r\n// mdtp берем функцию (метод диспатч у стора) , который возвращает нам колбеки в которых диспатчи\r\n// в новой компаненте есть доступ к стору, у которого она может вызывать подписку на изменения стейта.\r\n// все обернута провайдером из р-р для того, что бы у всего приложения был доступ к стейту в контексте\r\n\r\n\r\n\r\n\r\n\r\n// node js это альтернатива браузеру. это платформа, позолябщая писать на js  любые приложения. его моно загрузить в телевизор холодильник пылесос север..\r\n// конкретно нам он нужен для подключения куси пакетов\r\n\r\n// компаненты\r\n// фунцкциональная компонента это функц принимающая пропсы и возврашает jsx\r\n\r\n// классовая компанента.\r\n\r\n// фунция мар принимает один обькт возвращает массив других обьектов (всегда добовлять key)\r\n// идентпотентность или детерменированность - получаем на входе одно и тоже и на выходе получаем одно и тоже\r\n// в чистой функции нет сайдэффектов, локального стейта\r\n// имьютабельность - функция не может менять то, что в нее приходит.\r\n\r\n\r\n\r\n// SERVER API\r\n// интрфейс сервера- это эндпоинты(урлы, на которые мы делаем запрос).рест апи это правила. какой тип запроса, какой ответ будет\r\n// делаем запросы с помощью axios. нам возвращаются промисы. у промиса  есть метод then, в которую мы передаем коллбек , который срабатывает когдп промис выполнился\r\n\r\n//ajax запросы выносим в контейнерную компаненту. контейнерных коспанент может быть много.\r\n// хок withRouter. тягает данные из урла. как коннект\r\n\r\n// thunk- это функция, которая принимает метод диспаитч, и внутри себя делаем асинхронную опирация и разные диспатчи\r\n// используем санк креатер. санку можно задиспатчить. 3\r\n//что бы ui не общался ни с кем, кроме блл.\r\n\r\n\r\n// редакс форм. есть пакет релакс форм реакт. он для того, что бы работал\r\n// флакс круговорот(ничего не появляется в юай без появления этого сначала в блл. например логин и пароль)\r\n\r\n\r\n// селекторы для mstp в connect. они для того случая, если очень тяжело достаются данные из стейта. что бы не засорять мстпya","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginForm\":\"login-form_loginForm__3Nfi0\",\"input\":\"login-form_input__624wX\",\"rememberMe\":\"login-form_rememberMe__2m9Np\",\"checkbox\":\"login-form_checkbox__2xz7W\",\"captcha\":\"login-form_captcha__lzo6i\",\"button\":\"login-form_button__1LSoq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"viewProfile\":\"view-contacts_viewProfile__2nrDs\",\"titleMenu\":\"view-contacts_titleMenu__36fLz\",\"selectionMainContainer\":\"view-contacts_selectionMainContainer__1VLxo\",\"aboutMeField\":\"view-contacts_aboutMeField__2wfgp\",\"oneContact\":\"view-contacts_oneContact__3FFYr\",\"titleColumn\":\"view-contacts_titleColumn__266T9\",\"item\":\"view-contacts_item__1aYrJ\",\"descriptionColumn\":\"view-contacts_descriptionColumn__1V-1v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"forms_formControl__3EHfj\",\"error\":\"forms_error__bwAEw\",\"formSunnierError\":\"forms_formSunnierError__1NCLm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"messages_block__2BgDr\",\"container\":\"messages_container__3wtWU\",\"chats\":\"messages_chats__1qTWs\",\"search\":\"messages_search__3au1X\",\"inp\":\"messages_inp__2V5mF\",\"butMenu\":\"messages_butMenu__3bt7Y\",\"btn\":\"messages_btn__3iG8C\",\"users\":\"messages_users__2To5w\",\"user\":\"messages_user__1eDGh\",\"avatar\":\"messages_avatar__1IQfP\",\"ava\":\"messages_ava__2qNXj\",\"main\":\"messages_main__2ed33\",\"name\":\"messages_name__N0YZW\",\"lastMessages\":\"messages_lastMessages__3TugM\",\"info\":\"messages_info__3aL2H\",\"time\":\"messages_time__3yMbe\",\"countUnread\":\"messages_countUnread__3CUhV\",\"selectedChat\":\"messages_selectedChat__2_1DR\",\"userSelected\":\"messages_userSelected__3cjfw\",\"ava2\":\"messages_ava2__WeLbm\",\"name2\":\"messages_name2__2gHrL\",\"chat\":\"messages_chat__CLO-h\",\"chatField\":\"messages_chatField__2z2Ek\",\"my\":\"messages_my__-ZnNF\",\"sms\":\"messages_sms__RW2JY\",\"friend\":\"messages_friend__1i25E\",\"sendField\":\"messages_sendField__1P0Gy\",\"printMess\":\"messages_printMess__1_zSd\",\"sendMess\":\"messages_sendMess__3PHwt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"viewProfile\":\"about-me_viewProfile__gEaeb\",\"titleMenu\":\"about-me_titleMenu__3Wsqt\",\"selectionMainContainer\":\"about-me_selectionMainContainer__26H6L\",\"aboutMeField\":\"about-me_aboutMeField__1aHx8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"app_block__sEMSB\",\"container\":\"app_container__2QXCc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"profile_block__3TeRo\",\"backgroundImage\":\"profile_backgroundImage___Dtpd\",\"topPart\":\"profile_topPart__1WCz3\",\"avaName\":\"profile_avaName__1_gtl\",\"avatarContainer\":\"profile_avatarContainer__31rxw\",\"avatar\":\"profile_avatar__2jNWb\",\"name\":\"profile_name__2Pxmc\",\"buttons\":\"profile_buttons__2PLqJ\",\"buttonItem\":\"profile_buttonItem__13Myt\",\"mainBlock\":\"profile_mainBlock__3Pxw9\",\"middlePart\":\"profile_middlePart__bbHAV\",\"firstInfo\":\"profile_firstInfo__18YNR\",\"countFriends\":\"profile_countFriends__LANiY\",\"pp\":\"profile_pp__1WUK_\",\"menu\":\"profile_menu__Uf_Gj\",\"isFindWork\":\"profile_isFindWork__ZqSrB\",\"menuItem\":\"profile_menuItem__3QSzV\",\"bottomPart\":\"profile_bottomPart__ZbAIW\",\"info\":\"profile_info__3O-9C\",\"secondInfo\":\"profile_secondInfo__2kfWJ\",\"title\":\"profile_title__1Svl2\",\"photos\":\"profile_photos__1hE1j\",\"menuSelection\":\"profile_menuSelection__1waoy\",\"viewProfile\":\"profile_viewProfile__19Ael\",\"titleMenu\":\"profile_titleMenu__sDwjX\",\"selectionMainContainer\":\"profile_selectionMainContainer__3QNAB\",\"aboutMeField\":\"profile_aboutMeField__1QVG7\",\"oneContact\":\"profile_oneContact__C7y0k\",\"titleColumn\":\"profile_titleColumn__1dwr4\",\"item\":\"profile_item__13UUm\",\"descriptionColumn\":\"profile_descriptionColumn__2rTEB\",\"viewFriends\":\"profile_viewFriends__2IVH-\",\"friendContainer\":\"profile_friendContainer__3p1CW\",\"ava\":\"profile_ava__3up3X\",\"butt\":\"profile_butt__Po-3T\",\"butItem\":\"profile_butItem__IX4b3\",\"viewProfileFriend\":\"profile_viewProfileFriend__W5KBQ\"};"],"sourceRoot":""}
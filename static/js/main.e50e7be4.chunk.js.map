{"version":3,"sources":["ui-new/login-page/login.module.scss","ui-new/Common/pr/priloader.module.scss","UI/assets/img/no_image.png","BLL/Reducers/profile-reducer.tsx","BLL/Reducers/dialogs-reducer.tsx","DAL/api.tsx","ui-new/nav/nav.module.scss","BLL/Reducers/users-reducer.tsx","ui-new/login-page/login-form.module.scss","ui-new/users-page/one-user/one-user.module.scss","ui-new/header/header.module.scss","reportWebVitals.ts","BLL/Reducers/authorization-reducer.tsx","BLL/Reducers/app-reducer.tsx","BLL/store.tsx","ui-new/nav/nav.tsx","ui-new/login-page/login-form.tsx","ui-new/login-page/login-container.tsx","ui-new/login-page/login.tsx","ui-new/users-page/one-user/oneUser.tsx","ui-new/users-page/paginator/Paginator.tsx","ui-new/users-page/users.tsx","ui-new/users-page/users-container.tsx","UI/HOC/WithSuspense.tsx","ui-new/header/header.tsx","ui-new/header/header-container.tsx","ui-new/App.tsx","index.tsx","BLL/users-selectors.tsx","ui-new/Common/FormsControl/forms.module.css","ui-new/users-page/users.module.scss","ui-new/Common/FormsControl/FormsControl.tsx","ui-new/users-page/paginator/Paginator.module.scss","UI/assets/img/looading.gif","ui-new/Common/pr/Preloader.tsx","UI/utils/validators/validators.tsx","ui-new/app.module.scss"],"names":["module","exports","ADD_POST","DELETE_POST","SET_USER_PROFILE","SET_STATUS","SAVE_PHOTO","initialState","profile","postsDataArray","id","post","likeCount","status","ProfileReducer","state","action","type","text","massages","filter","x","photos","getOneProfileTC","dispatch","a","usersAPI","getProfile","response","setOneProfileAC","data","getStatusTC","profileAPI","getStatus","updateStatusAC","updateStatusTC","updateStatus","resultCode","console","log","updatePhotoTC","file","updatePhoto","updatePhotoAC","updateInfoProfileTC","getState","userId","auth","updateInfoProfile","stopSubmit","_error","messages","Promise","reject","GET_SELECTED_DIALOG","GET_USERS_TALKED_WITH","recipientId","users","dialogReducer","items","usersArray","getSelectedDialogTC","currentPages","pagesize","messagesAPI","getSelectedDialog","getSelectedDialogAC","senMessageTC","body","sendMessage","getUsersTalkedWithTC","getUsersTalkedWith","getUsersTalkedWithAC","instanse","axios","create","withCredentials","headers","baseURL","getUsers","term","get","then","follow","unFollow","delete","getFriendsUsers","userID","statusText","put","formData","FormData","append","authorizationAPI","me","login","email","password","rememberMe","captcha","logout","securityAPI","getCaptchaUrl","FOLLOW","UN_FOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","SET_USERID_FOR_DISABLE","TOGGLE_IS_FOLLOW","SEARCH","usersData","pageSize","totalUsersCount","isFetching","userIdForDisabled","isFollow","search","UsersReducer","map","followed","totalCounter","IsFollowingProgress","getUsersTC","toggleIsFetchingAC","setUsersAC","setTotalUsersCountAC","totalCount","followTC","setUserIdForDisabledAC","followAC","unFollowTC","unFollowAC","searchAC","setCurrentPageAC","total","toggleFollowAC","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","SET_USER_DATA","GET_CAPTCHA","isAuthorization","captchaURl","getAuthorizationDataTC","dispath","setAuthorizationDataAC","logoutTC","getCaptchaTC","captchaUrl","url","setCaptchaAC","SET_INITIALIZED","initialized","initializedSuccessAC","reducers","combineReducers","dialog","usersPage","form","formReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddlewere","Nav","useDispatch","className","s","block","butMenu","d1","d2","d3","container1","container","item","to","buttonItem","logOut","onClick","maxLengthValidator","maxLength","LoginReduxForm","reduxForm","handleSubmit","error","onSubmit","loginForm","Field","placeholder","component","Input","name","validate","requiredField","props","input","checkbox","src","createFormField","formSunnierError","button","LoginContainer","connect","isAuth","errorMessages","length","loginTC","rightPart","pathContainer","firstText","secondText","oneAdvantage","icon","description","title","desc","leftPart","iconNetwork","welcome","OneUser","user","friendContainer","ava","small","no_image","butt","butItem","disabled","some","unfollow","follower","viewProfileFriend","Paginator","pagesCount","Math","ceil","totalItemsCount","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","btn","selectPage","page","e","onPageChanget","Users","inp","value","onChange","event","currentTarget","viewFriends","paginator","UsersAPI","pageNumber","getUsersThunk","SetCurrentPage","this","prevProps","prevState","snapshot","setIsFollowingProgress","FiendsAC","React","Component","UsersContainer","getUsersCreateSelector","getPageSize","getTotalUsersCount","getCurrentPages","getIsFetching","getIsFollowingProgress","setUsers","setTotalUsersCount","toogleIsFetching","WithSuspenseHOC","Suspense","fallback","Preloader","Header","info","unLog","HeaderContainerConnect","location","reload","refreshHeader","HeaderConteiner","MessagesContainer","lazy","ProfileContainerConnect","App","catchAllUnhandleError","promiseRejectEvent","alert","initializeApp","addEventListener","removeEventListener","pathname","path","render","AppContainer","withRouter","promise","all","ReactDOM","document","getElementById","createSelector","Textarea","meta","hasError","touched","style","formControl","validator","looading","pril"],"mappings":"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","file":"static/js/main.e50e7be4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"login_block__3_udS\",\"container\":\"login_container__DukJL\",\"rightPart\":\"login_rightPart__1bKCf\",\"pathContainer\":\"login_pathContainer__1weu4\",\"firstText\":\"login_firstText__1ZYqQ\",\"secondText\":\"login_secondText__1g8Fr\",\"oneAdvantage\":\"login_oneAdvantage__1ClLI\",\"icon\":\"login_icon__W7cfQ\",\"description\":\"login_description__Wrkfh\",\"title\":\"login_title__3O8Pr\",\"desc\":\"login_desc__3GLNQ\",\"leftPart\":\"login_leftPart__QqwSH\",\"iconNetwork\":\"login_iconNetwork__2f7lo\",\"welcome\":\"login_welcome__3d5N8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"priloader_block__1msor\",\"pril\":\"priloader_pril__1JhG9\"};","export default __webpack_public_path__ + \"static/media/no_image.4a9ff6fc.png\";","import {profileAPI, usersAPI} from \"../../DAL/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst ADD_POST = \"ADD_POST\"\r\nconst DELETE_POST = \"DELETE_POST\"\r\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\"\r\nconst SET_STATUS = \"SET_STATUS\"\r\nconst SAVE_PHOTO = \"SAVE_PHOTO\"\r\n\r\n// Type for Reduces\r\ntype AddPostType = {\r\n    type: \"ADD_POST\"\r\n    massages: string\r\n}\r\ntype DeletePostType = {\r\n    type: \"DELETE_POST\"\r\n    id: number\r\n}\r\ntype SetProfileType = {\r\n    type: \"SET_USER_PROFILE\"\r\n    profile: any\r\n}\r\ntype UpdateStatusType = {\r\n    type: \"SET_STATUS\"\r\n    status: any\r\n}\r\n\r\ntype UpdatePhotoType = {\r\n    type: \"SAVE_PHOTO\"\r\n    photos: any\r\n}\r\n\r\n// type for Action\r\nexport type ActionType = AddPostType\r\n    | SetProfileType\r\n    | UpdateStatusType\r\n    | DeletePostType\r\n    | UpdatePhotoType\r\n\r\n//   Initial State\r\nexport type StateType = {\r\n    profile: any\r\n    postsDataArray: {\r\n        id: number;\r\n        post: string;\r\n        likeCount: number;\r\n    }[];\r\n    status: string\r\n}\r\nlet initialState: StateType = {\r\n    profile: null,\r\n    postsDataArray: [\r\n        {id: 1, post: \"Приветики??\", likeCount: 1},\r\n        {id: 2, post: \"Ребята аууу...\", likeCount: 0},\r\n        {id: 3, post: \"Это мой первый пост!\", likeCount: 1200}\r\n    ],\r\n    status: \"\"\r\n}\r\n\r\n\r\nexport const ProfileReducer = (state: StateType = initialState, action: ActionType): StateType => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let text = action.massages\r\n            return {\r\n                ...state,\r\n                postsDataArray: [{id: 4, post: text, likeCount: 10}, ...state.postsDataArray]\r\n            }\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                postsDataArray: state.postsDataArray.filter(x => x.id !== action.id)\r\n            }\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        case SAVE_PHOTO:\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.photos}\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n//Thunk Creator\r\n// с сервера берет всю инфу о профайле выбранного пользователя\r\nexport const getOneProfileTC = (id: any) => {\r\n    return async (dispatch: any) => {\r\n        let response = await usersAPI.getProfile(id)\r\n        dispatch(setOneProfileAC(response.data))\r\n    }\r\n}\r\n// с сервера достает статус выбранного пользователя\r\nexport const getStatusTC = (id: any) => {\r\n    return async (dispatch: any) => {\r\n        let response = await profileAPI.getStatus(id)\r\n        dispatch(updateStatusAC(response.data))\r\n    }\r\n}\r\n// обновляет статус на сервере\r\nexport const updateStatusTC = (status: string) => {\r\n    return async (dispatch: any) => {\r\n        try {\r\n            let response = await profileAPI.updateStatus(status)\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(updateStatusAC(status))\r\n            }\r\n        } catch (error: any) {\r\n            console.log(\"я перехватил ошибку \")\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n// обновляет фото на сервере\r\nexport const updatePhotoTC = (file: any) => {\r\n    return async (dispatch: any) => {\r\n        let response = await profileAPI.updatePhoto(file)\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(updatePhotoAC(response.data.data.photos))\r\n        }\r\n    }\r\n}\r\n// обновляет информацию о профиле на сервере\r\nexport const updateInfoProfileTC = (profile: any) => async (dispatch: any, getState: any) => {\r\n    const userId = getState().auth.userId\r\n    let response = await profileAPI.updateInfoProfile(profile)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getOneProfileTC(userId))\r\n    } else {\r\n        dispatch(stopSubmit(\"editProfile\", {_error: response.data.messages[0]}))\r\n        return Promise.reject()\r\n    }\r\n}\r\n\r\n//Action Creator\r\nexport const setOneProfileAC = (profile: any): SetProfileType => ({type: SET_USER_PROFILE, profile})\r\nexport const updateStatusAC = (status: string): UpdateStatusType => ({type: SET_STATUS, status})\r\nexport const updatePhotoAC = (photos: any): UpdatePhotoType => ({type: SAVE_PHOTO, photos})\r\nexport const addPostAC = (massages: string): AddPostType => ({type: ADD_POST, massages})\r\nexport const deletePostAC = (id: number): DeletePostType => ({type: DELETE_POST, id})\r\n\r\n\r\n","import {messagesAPI} from \"../../DAL/api\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nconst GET_SELECTED_DIALOG = \"GET_SELECTED_DIALOG\"\r\nconst GET_USERS_TALKED_WITH = \"GET_USERS_TALKED_WITH\"\r\n//type for Reduces\r\ntype GetSelectedDialogType = {\r\n    type: \"GET_SELECTED_DIALOG\"\r\n    items: any;\r\n}\r\ntype GetUsersTalkedWithType = {\r\n    type: \"GET_USERS_TALKED_WITH\"\r\n    usersArray: any;\r\n}\r\n\r\n//type for Action\r\ntype ActionType = GetSelectedDialogType | GetUsersTalkedWithType\r\n\r\n//initial State\r\ntype StateType = {\r\n    recipientId: number | null\r\n    messages: any\r\n    users: any\r\n}\r\nlet initialState: StateType = {\r\n    recipientId: null,\r\n    messages: null,\r\n    users: null\r\n}\r\n\r\nexport const dialogReducer = (state: StateType = initialState, action: ActionType): StateType => {\r\n    if (state) {\r\n        switch (action.type) {\r\n            case GET_SELECTED_DIALOG:\r\n                /*let oldMessages = {...state}\r\n                if (state.messages !== null) {\r\n                    return {\r\n                        ...state,\r\n                        messages: action.items.concat(oldMessages.messages)\r\n                    }\r\n                } else */\r\n                    return {\r\n                    ...state,\r\n                    messages: action.items\r\n                }\r\n            case GET_USERS_TALKED_WITH:\r\n                return {\r\n                    ...state,\r\n                    users: action.usersArray\r\n                }\r\n\r\n            default:\r\n                return state;\r\n        }\r\n    } else return state\r\n}\r\n\r\n\r\n//Thunk Creator\r\n// получить с сервера список сообщений с выбранным пользователем\r\nexport const getSelectedDialogTC = (id: any, currentPages: any, pagesize: any) => async (dispatch: Dispatch) => {\r\n    let response = await messagesAPI.getSelectedDialog(id, currentPages, pagesize)\r\n    dispatch(getSelectedDialogAC(response.items));\r\n}\r\n// отправить сообщение на сервер\r\nexport const senMessageTC = (userId: any, body: string) => async (dispatch: any) => {\r\n    let response = await messagesAPI.sendMessage(userId, body)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getSelectedDialogTC(userId, 1, 20))\r\n    }\r\n}\r\n// получить список пользователей с кем общался\r\nexport const getUsersTalkedWithTC = () => async (dispatch: Dispatch) => {\r\n    let response = await messagesAPI.getUsersTalkedWith()\r\n    dispatch(getUsersTalkedWithAC(response));\r\n\r\n}\r\n\r\n// Action Creator\r\nexport const getSelectedDialogAC = (items: any): GetSelectedDialogType => ({\r\n    type: GET_SELECTED_DIALOG,\r\n    items: items\r\n})\r\nexport const getUsersTalkedWithAC = (users: any): GetUsersTalkedWithType => ({\r\n    type: GET_USERS_TALKED_WITH,\r\n    usersArray: users\r\n})\r\n\r\n\r\n\r\n\r\n","import axios from \"axios\";\r\n\r\n\r\nconst instanse = axios.create({\r\n    withCredentials: true,\r\n    headers: {\r\n       \"API-KEY\": \"603ef8c0-4933-4294-ab5f-b170d3ebe6d8\"\r\n       //  \"API-KEY\": \"48cd781d-ab35-4a63-97ba-b184f71ed662\"\r\n    },\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/'\r\n})\r\n\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPages: any, pagesize: any, term: any) {\r\n        return (\r\n            instanse.get(`users?page=${currentPages}&count=${pagesize}&term=${term}`, {})\r\n                .then(response => response.data)\r\n        )\r\n    },\r\n\r\n    follow(id: any) {\r\n        return (\r\n            instanse.post(`follow/${id}`, {}, {})\r\n                .then(response => response.data)\r\n        )\r\n    },\r\n    getProfile(id: any) {\r\n        return profileAPI.getProfile(id)\r\n    },\r\n    unFollow(id: any) {\r\n        return (\r\n            instanse.delete(`follow/${id}`, {})\r\n                .then(response => response.data)\r\n        )\r\n    },\r\n    getFriendsUsers(currentPages: any, pagesize: any) {\r\n        return (\r\n            instanse.get(`users?page=${currentPages}&count=${pagesize}&friend=true`, {})\r\n                .then(response => response.data)\r\n        )\r\n    }\r\n\r\n}\r\nexport const profileAPI = {\r\n    getProfile(id: any) {\r\n        return (\r\n            instanse.get(`profile/${id}`)\r\n        )\r\n    },\r\n    getStatus(userID: any) {\r\n        return (\r\n            instanse.get(`/profile/status/${userID}`)\r\n        )\r\n    },\r\n    updateStatus(statusText: string) {\r\n        return (\r\n            instanse.put(`/profile/status`, {status: statusText})\r\n        )\r\n    },\r\n    updatePhoto(file: any) {\r\n        let formData = new FormData();\r\n        formData.append(\"image\", file)\r\n        return (instanse.put(`profile/photo`, formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            })\r\n        )\r\n    },\r\n    updateInfoProfile(profile: any) {\r\n        return instanse.put(`/profile`, profile)\r\n    }\r\n}\r\nexport const authorizationAPI = {\r\n    me() {\r\n        return (\r\n            instanse.get(`auth/me`, {})\r\n        )\r\n    },\r\n    login(email: string, password: string, rememberMe: boolean = false, captcha: any) {\r\n        return (\r\n            instanse.post(`auth/login`, {email, password, rememberMe, captcha}, {})\r\n\r\n        )\r\n    },\r\n    logout() {\r\n        return (\r\n            instanse.delete(`auth/login`, {})\r\n        )\r\n    }\r\n}\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return (\r\n            instanse.get(`security/get-captcha-url`)\r\n        )\r\n    }\r\n}\r\nexport const messagesAPI = {\r\n    getSelectedDialog(userId: any,currentPages: any, pagesize: any ) {\r\n        return (\r\n            instanse.get(`dialogs/${userId}/messages?page=${currentPages}&count=${pagesize}`, {})\r\n                .then(response => response.data)\r\n        )\r\n    },\r\n    sendMessage(userId: any, body: string) {\r\n        return (\r\n            instanse.post(`dialogs/${userId}/messages`, {body}, {})\r\n        )\r\n    },\r\n    getUsersTalkedWith() {\r\n        return (\r\n            instanse.get(`dialogs`, {})\r\n                .then(response => response.data)\r\n        )\r\n    }\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"nav_block__1GB-e\",\"butMenu\":\"nav_butMenu__1fLrr\",\"d1\":\"nav_d1__1-xBn\",\"d2\":\"nav_d2__YiG9W\",\"d3\":\"nav_d3__u7mit\",\"container1\":\"nav_container1__POSVx\",\"container\":\"nav_container__2NfBV\",\"item\":\"nav_item__2Fqq1\",\"logOut\":\"nav_logOut__3ORVn\"};","import {usersAPI} from \"../../DAL/api\";\r\n\r\nconst FOLLOW = \"FOLLOW\"\r\nconst UN_FOLLOW = \"UN_FOLLOW\"\r\nconst SET_USERS = \"SET_USERS\"\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\"\r\nconst SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\"\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\"\r\nconst SET_USERID_FOR_DISABLE = \"SET_USERID_FOR_DISABLE\"\r\nconst TOGGLE_IS_FOLLOW = \"TOGGLE_IS_FOLLOW\"\r\nconst SEARCH = \"SEARCH\"\r\n\r\n\r\n//type for Reduces\r\ntype FollowType = {\r\n    type: \"FOLLOW\"\r\n    userId: number\r\n}\r\ntype UNfollowType = {\r\n    type: \"UN_FOLLOW\"\r\n    userId: number\r\n}\r\ntype SetUsersType = {\r\n    type: \"SET_USERS\"\r\n    users: []\r\n}\r\ntype SetCurrentPageType = {\r\n    type: \"SET_CURRENT_PAGE\"\r\n    currentPages: number\r\n}\r\ntype SetTotalUsersCountACType = {\r\n    type: \"SET_TOTAL_USERS_COUNT\"\r\n    totalCounter: number\r\n}\r\ntype ToggleIsFetchingType = {\r\n    type: \"TOGGLE_IS_FETCHING\"\r\n    isFetching: boolean\r\n}\r\ntype SetUserIdForDisableType = {\r\n    type: \"SET_USERID_FOR_DISABLE\"\r\n    IsFollowingProgress: boolean\r\n    userId: any\r\n}\r\ntype ToggleIsFollowType = {\r\n    type: \"TOGGLE_IS_FOLLOW\"\r\n    follow: boolean\r\n}\r\ntype SearchType = {\r\n    type: \"SEARCH\"\r\n    search: string\r\n}\r\n\r\n//type for Action\r\ntype ActionType =\r\n    FollowType\r\n    | UNfollowType\r\n    | SetUsersType\r\n    | SetCurrentPageType\r\n    | SetTotalUsersCountACType\r\n    | ToggleIsFetchingType\r\n    | SetUserIdForDisableType\r\n    | ToggleIsFollowType\r\n    | SearchType\r\n\r\n//initial State type\r\nexport type OneUsersType = {\r\n    id: number,\r\n    followed: boolean,\r\n    name: string,\r\n    status: string,\r\n    photos: any\r\n    uniqueUrlName: any\r\n}\r\ntype UsersType = {\r\n    usersData: Array<OneUsersType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPages: number\r\n    isFetching: boolean\r\n    userIdForDisabled: any\r\n    isFollow: boolean\r\n    search: string\r\n}\r\nlet initialState: UsersType = {\r\n    usersData: [],\r\n    pageSize: 30,\r\n    totalUsersCount: 0,\r\n    currentPages: 1,\r\n    isFetching: true,\r\n    userIdForDisabled: [],\r\n    isFollow: false,\r\n    search: \"\"\r\n}\r\n\r\nexport const UsersReducer = (state: UsersType = initialState, action: ActionType): UsersType => {\r\n    if (state) {\r\n        switch (action.type) {\r\n            case TOGGLE_IS_FOLLOW:\r\n                return {\r\n                    ...state,\r\n                    isFollow: action.follow\r\n                }\r\n\r\n            case SEARCH:\r\n                return {\r\n                    ...state,\r\n                    search: action.search\r\n                }\r\n            case FOLLOW:\r\n                return {\r\n                    ...state,\r\n                    usersData: state.usersData.map((x) => {\r\n                        if (x.id === action.userId) {\r\n                            return {...x, followed: true}\r\n                        } else return x\r\n                    })\r\n                }\r\n            case UN_FOLLOW:\r\n                return {\r\n                    ...state,\r\n                    usersData: state.usersData.map((x) => {\r\n                        if (x.id === action.userId) {\r\n                            return {...x, followed: false}\r\n                        } else return x\r\n                    })\r\n                }\r\n            case SET_USERS:\r\n                return {...state, usersData: [...action.users]}\r\n            case SET_CURRENT_PAGE:\r\n                return {...state, currentPages: action.currentPages}\r\n            case SET_TOTAL_USERS_COUNT:\r\n                return {...state, totalUsersCount: action.totalCounter}\r\n            case TOGGLE_IS_FETCHING:\r\n                return {...state, isFetching: action.isFetching}\r\n            case SET_USERID_FOR_DISABLE:\r\n                return {\r\n                    ...state,\r\n                    userIdForDisabled: action.IsFollowingProgress\r\n                        ? [action.userId]\r\n                        : []\r\n                }\r\n            default:\r\n                return state;\r\n        }\r\n    } else return state\r\n}\r\n\r\n//Thunk Creator\r\n// делает запрос на сервер, возвращет всех пользователей\r\nexport const getUsersTC = (currentPages: number, pagesize: number, follow: boolean, term: any) => {\r\n    return async (dispatch: any) => {\r\n        dispatch(toggleIsFetchingAC(true))\r\n        let response;\r\n        // если ищем друзей, то выполняем один запрос на серве\r\n        if (follow) {\r\n            response = await usersAPI.getFriendsUsers(currentPages, pagesize)\r\n        } else {\r\n            response = await usersAPI.getUsers(currentPages, pagesize, term)\r\n        }\r\n        dispatch(toggleIsFetchingAC(false))\r\n        dispatch(setUsersAC(response.items))\r\n        dispatch(setTotalUsersCountAC(response.totalCount))\r\n    }\r\n}\r\n\r\n// делает запрос на сервер, меняет на сервере свойство фоллоу на true\r\nexport const followTC = (id: any) => {\r\n    return async (dispatch: any) => {\r\n        dispatch(setUserIdForDisabledAC(true, id))\r\n        let response = await usersAPI.follow(id)\r\n        if (response.resultCode === 0) {\r\n            dispatch(followAC(id))\r\n        }\r\n        dispatch(setUserIdForDisabledAC(false, id))\r\n    }\r\n}\r\n// делает запрос на сервер, удаляет на сервере свойство фоллоу(ставит по умолчанию false)\r\nexport const unFollowTC = (id: any) => {\r\n    return async (dispatch: any) => {\r\n        dispatch(setUserIdForDisabledAC(true, id))\r\n        let response = await usersAPI.unFollow(id)\r\n        if (response.resultCode === 0) {\r\n            dispatch(unFollowAC(id))\r\n        }\r\n        dispatch(setUserIdForDisabledAC(false, id))\r\n    }\r\n}\r\n\r\n//ActionCreator\r\nexport const followAC = (userId: number): FollowType =>\r\n    ({type: FOLLOW, userId})\r\nexport const unFollowAC = (userId: number): UNfollowType =>\r\n    ({type: UN_FOLLOW, userId})\r\n\r\n\r\nexport const setUsersAC = (users: []): SetUsersType =>\r\n    ({type: SET_USERS, users})\r\n\r\n\r\nexport const searchAC = (search: string): SearchType =>\r\n    ({type: SEARCH, search})\r\n\r\n\r\nexport const setCurrentPageAC = (currentPages: number): SetCurrentPageType =>\r\n    ({type: SET_CURRENT_PAGE, currentPages})\r\nexport const setTotalUsersCountAC = (total: number): SetTotalUsersCountACType =>\r\n    ({\r\n        type: SET_TOTAL_USERS_COUNT,\r\n        totalCounter: total\r\n    })\r\n// isFoll.Pr true, то в IsFollowingProgress в стейте записываем айди выбранного пользователя, иначе пустой массив\r\nexport const setUserIdForDisabledAC = (IsFollowingProgress: boolean, userId: any): SetUserIdForDisableType =>\r\n    ({\r\n        type: SET_USERID_FOR_DISABLE,\r\n        IsFollowingProgress: IsFollowingProgress,\r\n        userId\r\n    })\r\n\r\n\r\n// меняем в стейте значение isFetching. тру, значит, еще в процессе загрузки.\r\nexport const toggleIsFetchingAC = (isFetching: boolean): ToggleIsFetchingType =>\r\n    ({\r\n        type: TOGGLE_IS_FETCHING,\r\n        isFetching: isFetching\r\n    })\r\nexport const toggleFollowAC = (follow: boolean): ToggleIsFollowType =>\r\n    ({type: TOGGLE_IS_FOLLOW, follow})\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginForm\":\"login-form_loginForm__3Nfi0\",\"input\":\"login-form_input__624wX\",\"rememberMe\":\"login-form_rememberMe__2m9Np\",\"checkbox\":\"login-form_checkbox__2xz7W\",\"captcha\":\"login-form_captcha__lzo6i\",\"button\":\"login-form_button__1LSoq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendContainer\":\"one-user_friendContainer__1VDfw\",\"ava\":\"one-user_ava__36pc4\",\"name\":\"one-user_name__eLmQa\",\"butt\":\"one-user_butt__n9E_x\",\"butItem\":\"one-user_butItem__3lgTc\",\"viewProfileFriend\":\"one-user_viewProfileFriend__104mU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"header_block__GGVhJ\",\"icon\":\"header_icon__2UwuE\",\"iconNetwork\":\"header_iconNetwork__2-Iwd\",\"container\":\"header_container__YiPjg\",\"info\":\"header_info__2xgWL\",\"ava\":\"header_ava__1FFaj\",\"unLog\":\"header_unLog__104om\",\"btn\":\"header_btn__2nH68\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {authorizationAPI, securityAPI} from \"../../DAL/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {Dispatch} from \"redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst SET_USER_DATA = \"SET_USER_DATA\"\r\nconst GET_CAPTCHA = \"CAPTCHA\"\r\n\r\n//type for Reduces\r\ntype SetUserType = {\r\n    type: \"SET_USER_DATA\"\r\n    userId: any,\r\n    email: any,\r\n    login: any,\r\n    isAuthorization: any\r\n}\r\ntype GetCaptchaType = {\r\n    type: \"CAPTCHA\"\r\n    captchaURl: any\r\n}\r\n\r\n\r\n///////type for Action\r\ntype ActionType = SetUserType | GetCaptchaType\r\n\r\n/////initial State\r\ntype AuthorizationStateType = {\r\n    userId: number | null\r\n    email: string | null\r\n    login: boolean | null\r\n    isAuthorization: boolean | null\r\n    captchaURl: any\r\n}\r\n\r\nlet initialState: AuthorizationStateType = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuthorization: false,\r\n    captchaURl: null\r\n}\r\n\r\nexport const AuthorizationReducer = (state: AuthorizationStateType = initialState, action: ActionType): AuthorizationStateType => {\r\n    if (state) {\r\n        switch (action.type) {\r\n            case SET_USER_DATA:\r\n                return {\r\n                    ...state,\r\n                    userId: action.userId,\r\n                    email: action.email,\r\n                    login: action.login,\r\n                    isAuthorization: action.isAuthorization\r\n                }\r\n                case GET_CAPTCHA:\r\n                return {\r\n                    ...state,\r\n                    captchaURl: action.captchaURl\r\n                }\r\n            default:\r\n                return state;\r\n        }\r\n    } else return state\r\n}\r\n//Thunk Creator\r\n// авторизируемся\r\nexport const loginTC = (email: string, password: string, rememberMe: boolean, captcha: any) => async (dispath: any) => {\r\n    let response = await authorizationAPI.login(email, password, rememberMe, captcha)\r\n    // если авт прошла успешно, то выполняем это\r\n    if (response.data.resultCode === 0) {\r\n        dispath(getAuthorizationDataTC())\r\n    }\r\n    else {\r\n        if (response.data.resultCode === 10){\r\n            dispath(getCaptchaTC())\r\n        }\r\n        let errorMessages = response.data.messages.length > 0\r\n            ? response.data.messages[0]\r\n            : \"some error\"\r\n        dispath(stopSubmit(\"Login\", {_error: errorMessages}))\r\n    }\r\n}\r\n//получаем данные о пользователе, который авторизировался\r\nexport const getAuthorizationDataTC = () => async (dispath: Dispatch) => {\r\n    // т к авт прошла успешно, то делаем запрос, от куда берем даные текущего пользователя\r\n    let response = await authorizationAPI.me()\r\n    if (response.data.resultCode === 0) {\r\n        let {id, email, login} = response.data.data\r\n        dispath(setAuthorizationDataAC(id, email, login, true))\r\n    }\r\n}\r\n//делаем запрос на сервер, удаляем свои данные для автаризации\r\nexport const logoutTC = () => async (dispath: Dispatch) => {\r\n    let response = await authorizationAPI.logout()\r\n    if (response.data.resultCode === 0) {\r\n        dispath(setAuthorizationDataAC(null, null, null, false));\r\n    }\r\n}\r\n// делаем запрос на сервер, получаем картинку антибот\r\nexport const getCaptchaTC = () => async (dispath: Dispatch) => {\r\n    let response = await securityAPI.getCaptchaUrl()\r\n    let captchaUrl = response.data.url\r\n    debugger\r\n    dispath(setCaptchaAC(captchaUrl))\r\n}\r\n\r\n//ACTION CREATOR\r\n// меняем данные в в стейте на данные авторизированного пользователя\r\nexport const setAuthorizationDataAC = (userId: number | null, email: string | null, login: string | null, isAuthorization: boolean | null): SetUserType => ({\r\n    type: SET_USER_DATA,\r\n    userId: userId,\r\n    email: email,\r\n    login: login,\r\n    isAuthorization: isAuthorization\r\n})\r\n// добовляем капчу, пришедшую из сервера, в наш стейт\r\nexport const setCaptchaAC = (captchaURl: any): GetCaptchaType => ({\r\n    type: GET_CAPTCHA,\r\n    captchaURl: captchaURl\r\n})","import {getAuthorizationDataTC} from \"./authorization-reducer\";\r\n\r\nconst SET_INITIALIZED = \"SET_INITIALIZED\"\r\n\r\n//type for Reduces\r\ntype InitializedType = {\r\n    type: \"SET_INITIALIZED\"\r\n}\r\n\r\n//type for Action\r\ntype ActionType = InitializedType\r\n\r\n//initial State\r\ntype StateType = {\r\n    initialized: boolean\r\n}\r\nlet initialState: StateType = {\r\n    initialized: false\r\n}\r\n\r\nexport const AppReducer = (state: StateType = initialState, action: ActionType): StateType => {\r\n    if (state) {\r\n        switch (action.type) {\r\n            case SET_INITIALIZED:{\r\n                return {\r\n                    ...state,\r\n                    initialized: true\r\n                }\r\n            }\r\n            default:\r\n                return state;\r\n        }\r\n    }\r\n    else return state\r\n}\r\n\r\n//Thunk Creator\r\nexport const initializeTC = () => (dispath: any) => {\r\n   let promise= dispath(getAuthorizationDataTC());\r\n    Promise.all([promise]).then(()=>{\r\n        dispath(initializedSuccessAC());\r\n    })\r\n}\r\n\r\n// Action Creator\r\nexport const initializedSuccessAC = (): InitializedType => ({type: SET_INITIALIZED})\r\n\r\n\r\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport {ProfileReducer} from \"./Reducers/profile-reducer\";\r\nimport {UsersReducer} from \"./Reducers/users-reducer\";\r\nimport {AuthorizationReducer} from \"./Reducers/authorization-reducer\";\r\nimport thunkMiddlewere from \"redux-thunk\";//thunk as thunkMiddleWere\r\nimport  {reducer as formReducer} from 'redux-form'\r\nimport {AppReducer} from \"./Reducers/app-reducer\";\r\nimport {dialogReducer} from \"./Reducers/dialogs-reducer\";\r\n\r\n\r\nexport const reducers = combineReducers(\r\n    {\r\n        profile: ProfileReducer,\r\n        dialog: dialogReducer,\r\n        usersPage: UsersReducer,\r\n        auth: AuthorizationReducer,\r\n        form: formReducer,\r\n        app: AppReducer\r\n    }\r\n)\r\n\r\nexport type StoreStateType = ReturnType<typeof reducers>\r\n\r\nconst composeEnhancers = (window && (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\nexport const store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddlewere)));\r\n\r\n// @ts-ignore\r\nwindow.store = store\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport s from \"./nav.module.scss\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {logoutTC} from \"../../BLL/Reducers/authorization-reducer\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {AiOutlineUser} from \"react-icons/ai\";\r\nimport {AiOutlineMessage} from \"react-icons/ai\";\r\nimport {AiOutlineTeam} from \"react-icons/ai\";\r\nimport {AiOutlineSetting} from \"react-icons/ai\";\r\n\r\n\r\nexport const Nav = () => {\r\n    const dispatch = useDispatch()\r\n    const logOut = () => {\r\n        dispatch(logoutTC())\r\n    }\r\n\r\n\r\n    return (<div className={s.block}>\r\n\r\n        <div className={s.butMenu}>\r\n            <div className={s.d1}></div>\r\n            <div className={s.d2}></div>\r\n            <div className={s.d3}></div>\r\n\r\n        </div>\r\n        <div className={s.container1}>\r\n            <div className={s.container}>\r\n                <div className={s.item}>\r\n                    <NavLink to=\"/profile\" className={s.buttonItem}>\r\n                        <AiOutlineUser/>\r\n\r\n                    </NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to=\"/messages\" className={s.buttonItem}>\r\n                        <AiOutlineMessage/>\r\n                    </NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to=\"/users\" className={s.buttonItem}>\r\n                        <AiOutlineTeam/>\r\n                    </NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <AiOutlineSetting/>\r\n                </div>\r\n\r\n            </div>\r\n            <NavLink to=\"/login\" className={s.logOut} onClick={() => logOut()}>\r\n                LogOut\r\n            </NavLink>\r\n        </div>\r\n    </div>)\r\n}","import React from 'react'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLength, requiredField} from \"../../UI/utils/validators/validators\";\r\nimport s from \"./login-form.module.scss\";\r\nimport {createFormField, Input} from \"../Common/FormsControl/FormsControl\";\r\n\r\nconst maxLengthValidator = maxLength(50)\r\n\r\nconst LoginForm = ({handleSubmit, error, x}: any) => {\r\n    return (\r\n/*        В пропсах теперь нам очень много всего приходит после оборачивания компоненты с формой в HOC.\r\n        В т.ч. метод handleSubmit, который позволяет не перезагружать страницу при отправке.*/\r\n        <form onSubmit={handleSubmit} className={s.loginForm}>\r\n                <Field placeholder={\"Email\"}\r\n                       component={Input}\r\n                       name={\"email\"}\r\n                       validate={[requiredField, maxLengthValidator]}\r\n                       props={{ className: s.input }}/>\r\n{/*Все поля в форме меняем на компоненты Field, которые пришли к нам из библиотеки, с указанием component аналогично пропсам*/}\r\n                <Field placeholder={\"Password\"}\r\n                       component={Input}\r\n                       name={\"password\"}\r\n                       validate={[requiredField, maxLengthValidator]}\r\n                       props={{ className: s.input }}/>\r\n            <div className={s.rememberMe}>\r\n                <Field type={\"checkbox\"}\r\n                       component={Input}\r\n                       name={\"rememberMe\"}\r\n                       validate={[maxLengthValidator]}\r\n                       props={{ className: s.checkbox }}/> Remember\r\n            </div>\r\n            {x && <img className={s.captcha} src={x}/>}\r\n\r\n            {x && createFormField(\"captcha URl\", \"captcha\", [], Input, {className: s.input})}\r\n\r\n            {error && <div className={s.formSunnierError}>\r\n                {error}\r\n            </div>}\r\n\r\n                <button className={s.button} type='submit' >Login</button>\r\n\r\n        </form>\r\n\r\n    )\r\n}\r\n//присвоили уникальное имя нашей новой форме в параметре – {form: 'login'}\r\n export const LoginReduxForm: any = reduxForm({\r\n    form: 'Login'\r\n})(LoginForm)\r\n\r\n// Теперь при вводе текста в форме в нашем стейте появляется временный объект login (имя нашей формы),\r\n// который содержит много объектов, свойствами которых являются наши поля (берутся по name).\r\n// Среди них объекты «было ли посещено поле», «было ли тронуто» и т.д.\r\n//     А также объект values, где в свойства (берутся по name) попадает вводимый текст.\r\n// можно вывести в консоль и посмотреть параметры, потом их использовать","import React from \"react\";\r\nimport {StoreStateType} from \"../../BLL/store\";\r\nimport {loginTC} from \"../../BLL/Reducers/authorization-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {Login} from \"./login\";\r\n\r\nconst mapStateToProps = (state: StoreStateType) => ({\r\n    isAuth: state.auth.isAuthorization,\r\n    captcha: state.auth.captchaURl\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n    return {\r\n        login: (email: string, password: string, rememberMe: boolean, captcha: any) => {\r\n            dispatch(loginTC(email, password, rememberMe, captcha))\r\n        }\r\n    }\r\n}\r\n\r\nexport const LoginContainer = connect(\r\n    mapStateToProps, mapDispatchToProps)(Login)","import React from 'react'\r\nimport s from \"./login.module.scss\"\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {LoginReduxForm} from \"./login-form\";\r\nimport {reset} from \"redux-form\";\r\nimport {AiOutlineShopping, CgWorkAlt, MdComputer} from \"react-icons/all\";\r\n\r\nexport const Login = (props:any) => {\r\n/*    в месте вызова нашей компоненты с окончательной «редаксовской формой» теперь нужно повесить\r\n    произвольную функцию через onSubmit, которая соберет данные из полей из полей и обработает их при нажатии на кнопку:*/\r\n    const onSubmit = (formData: any) => {\r\n        console.log(formData)//здесь мы получаем данные с формы и будем из диспатчить потом\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha)\r\n        // dispatch(reset(\"profileAddPostForm\")) для очистки полей в форме, в кавычках имя формы\r\n    }\r\n    if (props.isAuth) return <Redirect to={\"/profile\"}/>\r\n\r\n    const on= false;\r\n\r\n    return (\r\n        <div className={s.block}>\r\n            <div className={s.container}>\r\n                <div className={s.rightPart}>\r\n                    <div className={s.pathContainer}>\r\n                        <div className={s.firstText}>Join the club</div>\r\n                        <div className={s.secondText}>Lorem ipsum dolor sit amet,\r\n                            consectetur adipiscing elit. Ut elit tellus, luctus.\r\n                        </div>\r\n                        <div className={s.oneAdvantage}>\r\n                            <div className={s.icon}> <MdComputer/></div>\r\n                            <div className={s.description}>\r\n                                <div className={s.title}>Community</div>\r\n                                <div className={s.desc}>At vero eos et accusamus et.</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className={s.oneAdvantage}>\r\n                            <div className={s.icon}><AiOutlineShopping/></div>\r\n                            <div className={s.description}>\r\n                                <div className={s.title}>Online shop</div>\r\n                                <div className={s.desc}>At vero eos et accusamus et.</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className={s.oneAdvantage}>\r\n                            <div className={s.icon}> <CgWorkAlt/></div>\r\n                            <div className={s.description}>\r\n                                <div className={s.title}>Job search</div>\r\n                                <div className={s.desc}>At vero eos et accusamus et.</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={s.leftPart}>\r\n                    <div className={s.pathContainer}>\r\n                        <img  className={s.iconNetwork} src={\"https://mythemestore.com/beehive-preview/wp-content/uploads/2020/07/logo-icon.svg\"}/>\r\n                        <div className={s.welcome}>Welcome</div>\r\n                        <LoginReduxForm onSubmit={onSubmit} x={props.captcha}/>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n","import s from \"./one-user.module.scss\";\r\nimport no_image from \"../../../UI/assets/img/no_image.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {AiOutlineUserAdd, AiOutlineUserDelete} from \"react-icons/all\";\r\nimport {AiOutlineMail} from \"react-icons/ai\";\r\n\r\nexport const OneUser = (props: any) => {\r\n    const user = props.user;\r\n    return (\r\n        <div className={s.friendContainer}>\r\n            <img className={s.ava}\r\n                 src={user.photos.small != null ? user.photos.small : no_image}/>\r\n\r\n            <div className={s.name}>{user.name}</div>\r\n            <div className={s.butt}>\r\n                {user.followed\r\n                    ?//arr.some возвращает true, если хотя бы для одного элемента массива условие верно\r\n                    //при раздизабл. кнопки к нам прихоидот пустой массив\r\n                    <button className={s.butItem}\r\n                            disabled={props.IsFollowingProgress.some((id: any) => id === user.id)}\r\n                            onClick={() => {\r\n                                props.unfollow(user.id)\r\n                            }\r\n                            }><AiOutlineUserDelete/></button>\r\n                    :\r\n                    <button className={s.butItem}\r\n                            disabled={props.IsFollowingProgress.some((id: any) => id === user.id)}\r\n                            onClick={() => {\r\n                                props.follower(user.id)\r\n                            }\r\n                            }><AiOutlineUserAdd/></button>}\r\n                <NavLink to={'/messages/' + user.id} className={s.butItem}>\r\n                    <AiOutlineMail/>\r\n                </NavLink>\r\n            </div>\r\n            <NavLink className={s.viewProfileFriend} to={'/profile/' + user.id}>\r\n                view profile\r\n            </NavLink>\r\n        </div>\r\n\r\n    )\r\n}","import React, {useState} from 'react';\r\nimport s from \"./Paginator.module.scss\"\r\nimport {GrNext, GrPrevious} from \"react-icons/all\";\r\n\r\ntype PaginatorPropsType = {\r\n    pagesize: number\r\n    totalItemsCount: number\r\n    onPageChanget: (x: any) => void\r\n    currentPages: number\r\n}\r\nexport const Paginator = (props: PaginatorPropsType) => {\r\n    let portionSize = 10;\r\n    let pagesCount = Math.ceil(props.totalItemsCount / props.pagesize)\r\n    let pages = []\r\n\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize)\r\n    let [portionNumber, setPortionNumber] = useState(1)\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n    let rightPortionPageNumber = portionNumber * portionSize\r\n\r\n\r\n    return (\r\n        <div className={s.block}>\r\n            {portionNumber > 1 &&\r\n            <div className={s.btn}\r\n                 onClick={() => {\r\n                     setPortionNumber(portionNumber - 1)\r\n                 }}><GrPrevious/>\r\n            </div>}\r\n            {pages\r\n                .filter(x => x >= leftPortionPageNumber && x <= rightPortionPageNumber)\r\n                .map(x => {\r\n                    return <div className={props.currentPages === x ? s.selectPage : s.page}\r\n                                key={x}\r\n                                onClick={(e) => {\r\n                                    props.onPageChanget(x)\r\n                                }}>{x}</div>\r\n                })}\r\n            {portionCount > portionNumber &&\r\n            <div  className={s.btn} onClick={() => {\r\n                setPortionNumber(portionNumber + 1)\r\n            }}><GrNext/></div>}\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport s from \"./users.module.scss\"\r\nimport {OneUsersType} from \"../../BLL/Reducers/users-reducer\";\r\nimport {OneUser} from \"./one-user/oneUser\";\r\nimport {Paginator} from \"./paginator/Paginator\";\r\n\r\nexport const Users = (props:any) => {\r\n\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pagesize)\r\n    let pages = []\r\n\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    return (\r\n        <div className={s.block}>\r\n            {/*посмотреть друзей*/}\r\n            <div className={s.container}>\r\n\r\n                <div className={s.search}>\r\n                    <input className={s.inp}\r\n                           placeholder={\"Search Members\"} value={props.search} onChange={(event)=>{props.searchAC(event.currentTarget.value)}}></input>\r\n                </div>\r\n                <div className={s.viewFriends}>\r\n                    {props.users.map((user: OneUsersType) =>\r\n                        <OneUser user={user}\r\n                                 unfollow={props.unfollow}\r\n                                 IsFollowingProgress={props.IsFollowingProgress}\r\n                                 follower={props.follower}\r\n                        />\r\n                    )\r\n                    }\r\n                </div>\r\n                <div className={s.paginator}>\r\n                    <Paginator pagesize={props.pagesize}\r\n                               totalItemsCount={props.totalUsersCount}\r\n                               onPageChanget={props.onPageChanget}\r\n                               currentPages={props.currentPages}/>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    followTC, getUsersTC, toggleFollowAC,\r\n    setCurrentPageAC, toggleIsFetchingAC, setUserIdForDisabledAC,\r\n    setTotalUsersCountAC,\r\n    setUsersAC,\r\n    unFollowTC,\r\n    OneUsersType, searchAC\r\n} from \"../../BLL/Reducers/users-reducer\";\r\nimport {StoreStateType} from \"../../BLL/store\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPages,\r\n    getIsFetching,\r\n    getIsFollowingProgress,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsersCreateSelector\r\n} from \"../../BLL/users-selectors\";\r\nimport {Users} from \"./users\";\r\nimport {Preloader} from \"../Common/pr/Preloader\";\r\n\r\n\r\nexport type MapStateToPropsType = {\r\n    users: OneUsersType[]\r\n    pagesize: number\r\n    totalUsersCount: number\r\n    currentPages: number\r\n    isFetching: boolean\r\n    IsFollowingProgress:boolean\r\n    isFollow: boolean\r\n    search: string\r\n}\r\nexport type MapDispatchTopropsType = {\r\n    follower: (id: number) => void\r\n    unfollow: (id: number) => void\r\n    setUsers: (x: []) => void\r\n    SetCurrentPage: (x: number) => void\r\n    setTotalUsersCount: (x: number) => void\r\n    toogleIsFetching: (x: boolean) => void\r\n    setIsFollowingProgress: any\r\n    getUsersThunk: any\r\n    FiendsAC:any\r\n    searchAC:any\r\n}\r\n\r\nlet mapStateToProps = (state: StoreStateType): MapStateToPropsType => {\r\n\r\n    return {\r\n        users: getUsersCreateSelector(state),\r\n        pagesize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPages: getCurrentPages(state),\r\n        isFetching: getIsFetching(state),\r\n        IsFollowingProgress: getIsFollowingProgress(state),\r\n        isFollow: state.usersPage.isFollow,\r\n        search: state.usersPage.search\r\n    }\r\n}\r\n\r\nclass UsersAPI extends React.Component<MapDispatchTopropsType & MapStateToPropsType, any> {\r\n    componentDidMount() {\r\n\r\n        this.props.getUsersThunk(this.props.currentPages, this.props.pagesize, false, this.props.search)\r\n\r\n    }\r\n    componentDidUpdate(prevProps: Readonly<MapDispatchTopropsType & MapStateToPropsType>, prevState: Readonly<any>, snapshot?: any) {\r\n        if(this.props.search!==prevProps.search)\r\n            this.props.getUsersThunk(this.props.currentPages, this.props.pagesize, this.props.isFollow,this.props.search)\r\n    }\r\n\r\n\r\n    onPageChanget = (pageNumber: number) => {\r\n        this.props.getUsersThunk(pageNumber, this.props.pagesize,  this.props.isFollow,this.props.search)\r\n\r\n        this.props.SetCurrentPage(pageNumber);\r\n\r\n    }\r\n\r\n    render() {\r\n        /*if (this.props.isFetching ) {\r\n            return <Preloader/>\r\n        } else */\r\n            return <>\r\n            <Users users={this.props.users}\r\n                   totalUsersCount={this.props.totalUsersCount}\r\n                   currentPages={this.props.currentPages}\r\n                   pagesize={this.props.pagesize}\r\n                   follower={this.props.follower}\r\n                   unfollow={this.props.unfollow}\r\n                   onPageChanget={this.onPageChanget}\r\n                   IsFollowingProgress={this.props.IsFollowingProgress}\r\n                   setIsFollowingProgress={this.props.setIsFollowingProgress}\r\n                   isFollow={this.props.isFollow}\r\n                   FiendsAC={this.props.FiendsAC}\r\n                   search={this.props.search}\r\n                   searchAC={this.props.searchAC}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nexport const UsersContainer:any = compose(/*WithAuthRedirect,*/connect(mapStateToProps, {\r\n\r\n    follower:followTC,\r\n    unfollow: unFollowTC,\r\n    setUsers:setUsersAC,\r\n    SetCurrentPage:setCurrentPageAC,\r\n    setTotalUsersCount: setTotalUsersCountAC,\r\n    setIsFollowingProgress: setUserIdForDisabledAC,\r\n    toogleIsFetching:toggleIsFetchingAC,\r\n    getUsersThunk: getUsersTC,\r\n    FiendsAC: toggleFollowAC,\r\n    searchAC: searchAC\r\n    //getUsersThunk: getFriendsThunkCreater\r\n}))(UsersAPI)\r\n\r\n\r\n","import React from \"react\";\r\nimport {Preloader} from \"../../ui-new/Common/pr/Preloader\";\r\n\r\n\r\nexport const WithSuspenseHOC=(Component:any)=>{\r\n\r\n   return(props: any)=>{\r\n       return <React.Suspense fallback={<Preloader/>}>\r\n           <Component{...props}/>\r\n       </React.Suspense>\r\n   }\r\n\r\n}","import React from 'react';\r\nimport s from \"./header.module.scss\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {Button} from \"@material-ui/core\";\r\n\r\nexport const Header = (props: any) => {\r\n    return (\r\n        <div className={s.block}>\r\n\r\n            <div className={s.icon}>\r\n                <img className={s.iconNetwork}\r\n                     src={\"https://mythemestore.com/beehive-preview/wp-content/uploads/2020/07/logo-icon.svg\"}/>\r\n            </div>\r\n            <div className={s.container}>\r\n                {props.isAuthorization\r\n                    ?\r\n                    <div className={s.info}>\r\n                        <div className={s.name}>{props.login}</div>\r\n                    </div>\r\n                    : <></>\r\n                }\r\n                <div className={s.unLog}>\r\n                    {props.isAuthorization\r\n                        ? <>\r\n                            <NavLink to=\"/login\" className={s.btn} onClick={props.logOut}>\r\n                                LogOut\r\n                            </NavLink>\r\n                        </>\r\n                        : <></>}</div>\r\n\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {StoreStateType} from \"../../BLL/store\";\r\nimport {logoutTC} from \"../../BLL/Reducers/authorization-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {Header} from \"./header\";\r\n\r\nclass HeaderContainerConnect extends React.Component<any, any> {\r\n    refreshHeader(){\r\n        window.location.reload();\r\n    }\r\n    componentDidMount() {\r\n\r\n\r\n    }\r\n    componentDidUpdate(prevProps: Readonly<any>, prevState: Readonly<any>, snapshot?: any) {\r\n        if(this.props.isAuthorization !==prevProps.isAuthorization )\r\n            this.refreshHeader()\r\n    }\r\n    render() {\r\n        return (\r\n            <Header login={this.props.login} isAuthorization={this.props.isAuthorization} logOut={this.props.logOut}/>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: StoreStateType) => ({\r\n    isAuthorization: state.auth.isAuthorization,\r\n    login: state.auth.login\r\n})\r\nlet mapDispatchToProps = (dispatch: any) => {\r\n    return {\r\n        logOut: () => {\r\n            dispatch(logoutTC())\r\n        }\r\n    }\r\n}\r\nexport const HeaderConteiner = connect(mapStateToProps, mapDispatchToProps)(HeaderContainerConnect)","import React from 'react';\r\nimport s from \"./app.module.scss\"\r\nimport {Redirect, Route, Switch, useLocation, withRouter} from \"react-router-dom\";\r\nimport {Login} from \"./login-page/login\";\r\nimport {Profile} from \"./profile-page/profile\";\r\nimport {Messages} from \"./messages-page/messages\";\r\nimport {Users} from \"./users-page/users\";\r\nimport {Header} from \"./header/header\";\r\nimport {Nav} from \"./nav/nav\";\r\nimport {LoginContainer} from \"./login-page/login-container\";\r\n/*\r\nimport ProfileContainerConnect from \"./profile-page/profile-container\";\r\n*/\r\nimport {UsersContainer} from \"./users-page/users-container\";\r\nimport {Preloader} from \"./Common/pr/Preloader\";\r\nimport {WithSuspenseHOC} from \"../UI/HOC/WithSuspense\";\r\nimport {StoreStateType} from \"../BLL/store\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {initializeTC} from \"../BLL/Reducers/app-reducer\";\r\nimport {HeaderConteiner} from \"./header/header-container\";\r\n/*\r\nimport MessagesContainer from \"./messages-page/messages-container\";\r\n*/\r\n\r\n// лейзи говорит, что он компаненту не импортирую. когда ее надо будет отрисоввать, он запросится с сервера\r\nconst MessagesContainer = React.lazy(() => import('./messages-page/messages-container'));\r\n\r\nconst ProfileContainerConnect = React.lazy(() => import('./profile-page/profile-container'));\r\n\r\n\r\nclass App extends React.Component<any, any> {\r\n// componentDidMount срабатывает один раз, когда К. вмонтируется\r\n    catchAllUnhandleError = (promiseRejectEvent: PromiseRejectionEvent) => {\r\n        alert(promiseRejectEvent)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.initializeApp()\r\n        window.addEventListener(\"unhandledrejection\", this.catchAllUnhandleError)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"unhandledrejection\", this.catchAllUnhandleError)\r\n\r\n    }\r\n\r\n    render() {\r\n        // при первой загрузке у на нет данных, показываем поэтому крутилку\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n// задача К. вернуть jsx(tsx) в зависимости от пропсов либо личного локального стейта\r\n        // exact требует полное совпадение урла. Можно добавить <Switch>..роутер..</Switch> и тогда при первом совпадении будет отрисовка.\r\n        // в этом случает лучше точные урлы ставить выше, а общие ниже\r\n        return (<div className={s.block}>\r\n                {window.location.pathname === '/'\r\n                || window.location.pathname === '/login'\r\n                    ? null\r\n                    : <HeaderConteiner/>}\r\n\r\n                <div className={s.container}>\r\n                    {window.location.pathname === '/'\r\n                    || window.location.pathname === '/login'\r\n                        ? null\r\n                        : <Nav/>}\r\n\r\n\r\n                    <Switch>\r\n\r\n                        <Route path='/profile/:userID?'\r\n                               render={WithSuspenseHOC(ProfileContainerConnect)}/>\r\n                        <Route path='/messages/:userID?'\r\n                               render={WithSuspenseHOC(MessagesContainer)}/>\r\n                        <Route path='/users'\r\n                               render={() => <UsersContainer/>}/>\r\n                        <Route path='/login'\r\n                               render={() => <LoginContainer/>}/>\r\n                        <Route path='/'\r\n                               render={() => <LoginContainer/>}/>\r\n                        <Route path='*'\r\n                               render={() => <>not found</>}/>\r\n\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: StoreStateType) => ({\r\n    initialized: state.app.initialized\r\n})\r\n// compose создает контейнернкю компанету, применяя один за одним HOCи=>\r\n// (компанента высшего порядка-это функция, которая принимает одну компаненту и возвращает другую компаненту.\r\n// Это нужно для того, что бы наша компанента получила какие-то данные)\r\n\r\n// connect  дает данные из Store с помощью mapStateToProps и mapDispatchToProps\r\n// withRouter дает компоненте данные из url\r\nexport const AppContainer: any = compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp: initializeTC}))(App)\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n// import {AppContainer} from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {store} from \"./BLL/store\";\r\nimport {Provider} from \"react-redux\";\r\nimport {BrowserRouter, HashRouter} from \"react-router-dom\";\r\nimport {Login} from \"./ui-new/login-page/login\";\r\nimport {Profile} from \"./ui-new/profile-page/profile\";\r\nimport {AppContainer} from \"./ui-new/App\";\r\nimport {Users} from \"./ui-new/users-page/users\";\r\nimport {Messages} from \"./ui-new/messages-page/messages\";\r\n\r\n// BrowserRouter добовляет\r\n// Provider добовляет store в контекст, из которого все компаненты могут брать данные ( наприер стор, тема темная/светлая, язык)\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <BrowserRouter>\r\n{/*\r\n            <AppContainer/>\r\n*/}\r\n\r\n\r\n            <AppContainer/>\r\n\r\n\r\n        </BrowserRouter>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\nreportWebVitals();\r\n// реакт библиотека- это библиотека, которая эффективно отрисовывает html. Эффективно, в плане она не перерисовывает те элементы, которые не надо\r\n// реакт загружается и живет в браузере\r\n//компанента возвращает тсикс или джсикс\r\n\r\n//сайдэффект= запросы на сервер, сетТаймаут, обращение к дом элементам на прямую\r\n//  шудКомпонентАпдейт - реакт.Мемо\r\n// пьюрКомпонент\r\n//\r\n//\r\n///\r\n// редакс это система стейт менеджмента, то что позволчет управлять удобно стейто\r\n// редакс состоит из одного главного обьекта стор(хранилище,обьект ооп) .В стор мы засовываем редьюсеры, из которых он будет состоять.\r\n// редьюсеры это функции преобразователи. они получают на входе\r\n// экшен(обьект, инструкция, у которого минимум есть тип и мб данные) и часть стейта и преобразовывает стейт\r\n// делает преобраования он иммутабельно( изменяет не стейт а его копию)\r\n//\r\n// стор(хранилище) обьект ооп,  с ним можно взаимодействовать через его интерфейс( методы и свойства)\r\n// есть три главных метода:\r\n//getState позволяет получить из стора актуальный стейт\r\n//subscribe позволяет подписаться подпищику на изменение стейта\r\n//dispatch позволяет приобразовать стейт\r\n\r\n\r\n// реакт редакс для связки реакта и редакса. обеспечивает связь коспоненты со стором.\r\n// на помощь для связи комп. со стором приходит фунция connect\r\n// connect это хок. он создает вокгруг нашей компаненты другую компаненту. она снабжает нашу компаненты\r\n// connect(mstp, mdtp). mstp берет из стейта часть, которая использоваться будет в нашей компаненте( в нашу комп приходит это впропсах)\r\n// mdtp берем функцию (метод диспатч у стора) , который возвращает нам колбеки в которых диспатчи\r\n// в новой компаненте есть доступ к стору, у которого она может вызывать подписку на изменения стейта.\r\n// все обернута провайдером из р-р для того, что бы у всего приложения был доступ к стейту в контексте\r\n\r\n\r\n\r\n\r\n\r\n// node js это альтернатива браузеру. это платформа, позолябщая писать на js  любые приложения. его моно загрузить в телевизор холодильник пылесос север..\r\n// конкретно нам он нужен для подключения куси пакетов\r\n\r\n// компаненты\r\n// фунцкциональная компонента это функц принимающая пропсы и возврашает jsx\r\n\r\n// классовая компанента.\r\n\r\n// фунция мар принимает один обькт возвращает массив других обьектов (всегда добовлять key)\r\n// идентпотентность или детерменированность - получаем на входе одно и тоже и на выходе получаем одно и тоже\r\n// в чистой функции нет сайдэффектов, локального стейта\r\n// имьютабельность - функция не может менять то, что в нее приходит.\r\n\r\n\r\n\r\n// SERVER API\r\n// интрфейс сервера- это эндпоинты(урлы, на которые мы делаем запрос).рест апи это правила. какой тип запроса, какой ответ будет\r\n// делаем запросы с помощью axios. нам возвращаются промисы. у промиса  есть метод then, в которую мы передаем коллбек , который срабатывает когдп промис выполнился\r\n\r\n//ajax запросы выносим в контейнерную компаненту. контейнерных коспанент может быть много.\r\n// хок withRouter. тягает данные из урла. как коннект\r\n\r\n// thunk- это функция, которая принимает метод диспаитч, и внутри себя делаем асинхронную опирация и разные диспатчи\r\n// используем санк креатер. санку можно задиспатчить. 3\r\n//что бы ui не общался ни с кем, кроме блл.\r\n\r\n\r\n// редакс форм. есть пакет релакс форм реакт. он для того, что бы работал\r\n// флакс круговорот(ничего не появляется в юай без появления этого сначала в блл. например логин и пароль)\r\n\r\n\r\n// селекторы для mstp в connect. они для того случая, если очень тяжело достаются данные из стейта. что бы не засорять мстпya","import React from 'react';\r\nimport { createSelector } from 'reselect';\r\n\r\nexport const getUsers=(state: any)=>{\r\n    return state.usersPage.usersData\r\n}\r\nexport const getUsersCreateSelector=createSelector(getUsers,(users)=>{\r\n    return users.filter((x:any)=>true)\r\n})\r\nexport const getPageSize=(state: any)=>{\r\n    return state.usersPage.pageSize\r\n}\r\nexport const getTotalUsersCount=(state: any)=>{\r\n    return state.usersPage.totalUsersCount\r\n}\r\nexport const getCurrentPages=(state: any)=>{\r\n    return state.usersPage.currentPages\r\n}\r\nexport const getIsFetching=(state: any)=>{\r\n    return state.usersPage.isFetching\r\n}\r\nexport const getIsFollowingProgress=(state: any)=>{\r\n    return state.usersPage.userIdForDisabled\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"forms_formControl__3EzeQ\",\"error\":\"forms_error__2OhMd\",\"formSunnierError\":\"forms_formSunnierError__1xl7f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"users_block__2UOdh\",\"container\":\"users_container__22NfB\",\"search\":\"users_search__1pKs8\",\"inp\":\"users_inp__15EnU\",\"spn\":\"users_spn__3G9ai\",\"viewFriends\":\"users_viewFriends__bDaB3\",\"paginator\":\"users_paginator__1c1rK\"};","import React from 'react';\r\nimport style from './forms.module.css'\r\nimport {Field} from \"redux-form\";\r\n\r\nexport const Textarea = ({input, meta, ...props}: any) => {\r\n    const hasError = meta.touched && meta.error\r\n    return <div className={style.formControl + \" \" + (hasError ? style.error : \"\")}>\r\n        <textarea {...input} {...props}/>\r\n        <div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    </div>\r\n}\r\nexport const Input = ({input, meta, ...props}: any) => {\r\n    const hasError = meta.touched && meta.error\r\n    return <div className={style.formControl + \" \" + (hasError ? style.error : \"\")}>\r\n        <input {...input} {...props}/>\r\n        <div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    </div>\r\n}\r\nexport const Form = ({input, meta, el, ...props}: any) => {\r\n    const hasError = meta.touched && meta.error\r\n    return <div className={style.formControl + \" \" + (hasError ? style.error : \"\")}>\r\n        <props.el {...input} {...props}/>\r\n        <div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport const createFormField = (placeholder: any, name: any, validator: any, component: any, props = {}, text = \"\") => (\r\n    <div>\r\n        <Field placeholder={placeholder}\r\n               name={name}\r\n               validate={validator}\r\n               component={component}\r\n               {...props}/> {text}\r\n    </div>\r\n)\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Paginator_block__16mGz\",\"btn\":\"Paginator_btn__2k-up\",\"selectPage\":\"Paginator_selectPage__hgCCW\",\"page\":\"Paginator_page__1Vktn\"};","export default __webpack_public_path__ + \"static/media/looading.c1b8565f.gif\";","import looading from '../../../UI/assets/img/looading.gif'\r\nimport React from \"react\";\r\nimport s from \"./priloader.module.scss\";\r\n\r\nexport const Preloader=()=>{\r\n    return <div className={s.block}><img src={looading} className={s.pril}/></div>\r\n}","export const requiredField=(value:any)=>{\r\n    if(value) return undefined\r\n    return \"Field is required\"\r\n}\r\nexport const maxLength=(maxLength: number)=>(value:any)=>{\r\n    if(value && value.length>maxLength) return `max lenght is ${maxLength} symbols`\r\n    return undefined\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"app_block__sEMSB\",\"container\":\"app_container__2QXCc\"};"],"sourceRoot":""}
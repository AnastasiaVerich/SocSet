{"version":3,"sources":["UI/assets/img/no_image.png","BLL/Reducers/profile-reducer.tsx","BLL/Reducers/dialogs-reducer.tsx","DAL/api.tsx","ui-new/nav/nav.module.scss","BLL/Reducers/users-reducer.tsx","ui-new/login-page/login-form.module.scss","ui-new/header/header.module.scss","ui-new/users-page/one-user/one-user.module.scss","reportWebVitals.ts","BLL/Reducers/authorization-reducer.tsx","BLL/Reducers/app-reducer.tsx","BLL/store.tsx","ui-new/nav/nav.tsx","ui-new/login-page/login-form.tsx","ui-new/login-page/login-container.tsx","ui-new/login-page/login.tsx","ui-new/users-page/one-user/oneUser.tsx","ui-new/users-page/users.tsx","ui-new/users-page/users-container.tsx","UI/HOC/WithSuspense.tsx","ui-new/header/header.tsx","ui-new/header/header-container.tsx","ui-new/App.tsx","index.tsx","BLL/users-selectors.tsx","UI/component/Common/FormsControl/forms.module.css","ui-new/users-page/users.module.scss","UI/assets/img/looading.gif","ui-new/Common/pr/Preloader.tsx","UI/component/Common/FormsControl/FormsControl.tsx","UI/utils/validators/validators.tsx","ui-new/login-page/login.module.scss","ui-new/app.module.scss","ui-new/Common/pr/priloader.module.scss"],"names":["ADD_POST","DELETE_POST","SET_USER_PROFILE","SET_STATUS","SAVE_PHOTO","initialState","profile","postsDataArray","id","post","likeCount","status","ProfileReducer","state","action","type","text","massages","filter","x","photos","getOneProfileTC","dispatch","a","usersAPI","getProfile","response","setOneProfileAC","data","getStatusTC","profileAPI","getStatus","updateStatusAC","updateStatusTC","updateStatus","resultCode","console","log","updatePhotoTC","file","updatePhoto","updatePhotoAC","updateInfoProfileTC","getState","userId","auth","updateInfoProfile","stopSubmit","_error","messages","Promise","reject","GET_SELECTED_DIALOG","GET_USERS_TALKED_WITH","recipientId","oneMessage","users","dialogReducer","oldMessages","items","concat","usersArray","getSelectedDialogTC","currentPages","pagesize","messagesAPI","getSelectedDialog","getSelectedDialogAC","senMessageTC","body","sendMessage","getUsersTalkedWithTC","getUsersTalkedWith","getUsersTalkedWithAC","instanse","axios","create","withCredentials","headers","baseURL","getUsers","get","then","follow","unFollow","delete","getFriendsUsers","userID","statusText","put","formData","FormData","append","authorizationAPI","me","login","email","password","rememberMe","captcha","logout","securityAPI","getCaptchaUrl","module","exports","FOLLOW","UN_FOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","SET_USERID_FOR_DISABLE","TOGGLE_IS_FOLLOW","usersData","pageSize","totalUsersCount","isFetching","userIdForDisabled","isFollow","UsersReducer","map","followed","totalCounter","IsFollowingProgress","getUsersTC","toggleIsFetchingAC","setUsersAC","setTotalUsersCountAC","totalCount","followTC","setUserIdForDisabledAC","followAC","unFollowTC","unFollowAC","setCurrentPageAC","total","toggleFollowAC","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","SET_USER_DATA","GET_CAPTCHA","isAuthorization","captchaURl","getAuthorizationDataTC","dispath","setAuthorizationDataAC","getCaptchaTC","captchaUrl","url","setCaptchaAC","SET_INITIALIZED","initialized","initializedSuccessAC","reducers","combineReducers","dialog","usersPage","form","formReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddlewere","Nav","className","s","block","butMenu","d1","d2","d3","container","item","to","buttonItem","maxLengthValidator","maxLength","LoginReduxForm","reduxForm","handleSubmit","error","onSubmit","loginForm","Field","placeholder","component","Input","name","validate","requiredField","props","input","checkbox","src","createFormField","formSunnierError","button","LoginContainer","connect","isAuth","errorMessages","length","loginTC","rightPart","pathContainer","firstText","secondText","oneAdvantage","icon","description","title","desc","leftPart","iconNetwork","welcome","OneUser","user","friendContainer","ava","small","no_image","butt","butItem","disabled","some","onClick","unfollow","follower","viewProfileFriend","Users","pagesCount","Math","ceil","pages","i","push","search","inp","spn","FiendsAC","viewFriends","UsersAPI","onPageChanget","pageNumber","getUsersThunk","SetCurrentPage","this","prevProps","prevState","snapshot","Preloader","setIsFollowingProgress","React","Component","UsersContainer","getUsersCreateSelector","getPageSize","getTotalUsersCount","getCurrentPages","getIsFetching","getIsFollowingProgress","setUsers","setTotalUsersCount","toogleIsFetching","WithSuspenseHOC","Suspense","fallback","Header","info","unLog","btn","logOut","HeaderContainerConnect","location","reload","refreshHeader","HeaderConteiner","MessagesContainer","lazy","ProfileContainerConnect","App","catchAllUnhandleError","promiseRejectEvent","alert","initializeApp","addEventListener","removeEventListener","path","render","AppContainer","withRouter","promise","all","ReactDOM","document","getElementById","createSelector","looading","pril","Textarea","meta","hasError","touched","style","formControl","validator","value"],"mappings":"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","file":"static/js/main.e28fa6b2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/no_image.4a9ff6fc.png\";","import {profileAPI, usersAPI} from \"../../DAL/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst ADD_POST = \"ADD_POST\"\r\nconst DELETE_POST = \"DELETE_POST\"\r\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\"\r\nconst SET_STATUS = \"SET_STATUS\"\r\nconst SAVE_PHOTO = \"SAVE_PHOTO\"\r\n\r\n// Type for Reduces\r\ntype AddPostType = {\r\n    type: \"ADD_POST\"\r\n    massages: string\r\n}\r\ntype DeletePostType = {\r\n    type: \"DELETE_POST\"\r\n    id: number\r\n}\r\ntype SetProfileType = {\r\n    type: \"SET_USER_PROFILE\"\r\n    profile: any\r\n}\r\ntype UpdateStatusType = {\r\n    type: \"SET_STATUS\"\r\n    status: any\r\n}\r\n\r\ntype UpdatePhotoType = {\r\n    type: \"SAVE_PHOTO\"\r\n    photos: any\r\n}\r\n\r\n// type for Action\r\nexport type ActionType = AddPostType\r\n    | SetProfileType\r\n    | UpdateStatusType\r\n    | DeletePostType\r\n    | UpdatePhotoType\r\n\r\n//   Initial State\r\nexport type StateType = {\r\n    profile: any\r\n    postsDataArray: {\r\n        id: number;\r\n        post: string;\r\n        likeCount: number;\r\n    }[];\r\n    status: string\r\n}\r\nlet initialState: StateType = {\r\n    profile: null,\r\n    postsDataArray: [\r\n        {id: 1, post: \"Приветики??\", likeCount: 1},\r\n        {id: 2, post: \"Ребята аууу...\", likeCount: 0},\r\n        {id: 3, post: \"Это мой первый пост!\", likeCount: 1200}\r\n    ],\r\n    status: \"\"\r\n}\r\n\r\n\r\nexport const ProfileReducer = (state: StateType = initialState, action: ActionType): StateType => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let text = action.massages\r\n            return {\r\n                ...state,\r\n                postsDataArray: [{id: 4, post: text, likeCount: 10}, ...state.postsDataArray]\r\n            }\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                postsDataArray: state.postsDataArray.filter(x => x.id !== action.id)\r\n            }\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        case SAVE_PHOTO:\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.photos}\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n//Thunk Creator\r\n// с сервера берет всю инфу о профайле выбранного пользователя\r\nexport const getOneProfileTC = (id: any) => {\r\n    return async (dispatch: any) => {\r\n        let response = await usersAPI.getProfile(id)\r\n        dispatch(setOneProfileAC(response.data))\r\n    }\r\n}\r\n// с сервера достает статус выбранного пользователя\r\nexport const getStatusTC = (id: any) => {\r\n    return async (dispatch: any) => {\r\n        let response = await profileAPI.getStatus(id)\r\n        dispatch(updateStatusAC(response.data))\r\n    }\r\n}\r\n// обновляет статус на сервере\r\nexport const updateStatusTC = (status: string) => {\r\n    return async (dispatch: any) => {\r\n        try {\r\n            let response = await profileAPI.updateStatus(status)\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(updateStatusAC(status))\r\n            }\r\n        } catch (error: any) {\r\n            console.log(\"я перехватил ошибку \")\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n// обновляет фото на сервере\r\nexport const updatePhotoTC = (file: any) => {\r\n    return async (dispatch: any) => {\r\n        let response = await profileAPI.updatePhoto(file)\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(updatePhotoAC(response.data.data.photos))\r\n        }\r\n    }\r\n}\r\n// обновляет информацию о профиле на сервере\r\nexport const updateInfoProfileTC = (profile: any) => async (dispatch: any, getState: any) => {\r\n    const userId = getState().auth.userId\r\n    let response = await profileAPI.updateInfoProfile(profile)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getOneProfileTC(userId))\r\n    } else {\r\n        dispatch(stopSubmit(\"editProfile\", {_error: response.data.messages[0]}))\r\n        return Promise.reject()\r\n    }\r\n}\r\n\r\n//Action Creator\r\nexport const setOneProfileAC = (profile: any): SetProfileType => ({type: SET_USER_PROFILE, profile})\r\nexport const updateStatusAC = (status: string): UpdateStatusType => ({type: SET_STATUS, status})\r\nexport const updatePhotoAC = (photos: any): UpdatePhotoType => ({type: SAVE_PHOTO, photos})\r\nexport const addPostAC = (massages: string): AddPostType => ({type: ADD_POST, massages})\r\nexport const deletePostAC = (id: number): DeletePostType => ({type: DELETE_POST, id})\r\n\r\n\r\n","import {messagesAPI} from \"../../DAL/api\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nconst GET_SELECTED_DIALOG = \"GET_SELECTED_DIALOG\"\r\nconst GET_USERS_TALKED_WITH = \"GET_USERS_TALKED_WITH\"\r\n//type for Reduces\r\ntype GetSelectedDialogType = {\r\n    type: \"GET_SELECTED_DIALOG\"\r\n    items: any;\r\n}\r\ntype GetUsersTalkedWithType = {\r\n    type: \"GET_USERS_TALKED_WITH\"\r\n    usersArray: any;\r\n}\r\n\r\n//type for Action\r\ntype ActionType = GetSelectedDialogType | GetUsersTalkedWithType\r\n\r\n//initial State\r\ntype StateType = {\r\n    recipientId: number | null\r\n    messages: any\r\n    oneMessage: string\r\n    users: any\r\n}\r\nlet initialState: StateType = {\r\n    recipientId: null,\r\n    messages: null,\r\n    oneMessage: \"\",\r\n    users: null\r\n}\r\n\r\nexport const dialogReducer = (state: StateType = initialState, action: ActionType): StateType => {\r\n    if (state) {\r\n        switch (action.type) {\r\n            case GET_SELECTED_DIALOG:\r\n                let oldMessages = {...state}\r\n                if (state.messages !== null) {\r\n                    return {\r\n                        ...state,\r\n                        messages: action.items.concat(oldMessages.messages)\r\n                    }\r\n                } else return {\r\n                    ...state,\r\n                    messages: action.items\r\n                }\r\n            case GET_USERS_TALKED_WITH:\r\n                return {\r\n                    ...state,\r\n                    users: action.usersArray\r\n                }\r\n\r\n            default:\r\n                return state;\r\n        }\r\n    } else return state\r\n}\r\n\r\n\r\n//Thunk Creator\r\n// получить с сервера список сообщений с выбранным пользователем\r\nexport const getSelectedDialogTC = (id: any, currentPages: any, pagesize: any) => async (dispatch: Dispatch) => {\r\n    let response = await messagesAPI.getSelectedDialog(id, currentPages, pagesize)\r\n    dispatch(getSelectedDialogAC(response.items));\r\n}\r\n// отправить сообщение на сервер\r\nexport const senMessageTC = (userId: any, body: string) => async (dispatch: any) => {\r\n    let response = await messagesAPI.sendMessage(userId, body)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getSelectedDialogTC(userId, 1, 20))\r\n    }\r\n}\r\n// получить список пользователей с кем общался\r\nexport const getUsersTalkedWithTC = () => async (dispatch: Dispatch) => {\r\n    let response = await messagesAPI.getUsersTalkedWith()\r\n    dispatch(getUsersTalkedWithAC(response));\r\n\r\n}\r\n\r\n// Action Creator\r\nexport const getSelectedDialogAC = (items: any): GetSelectedDialogType => ({\r\n    type: GET_SELECTED_DIALOG,\r\n    items: items\r\n})\r\nexport const getUsersTalkedWithAC = (users: any): GetUsersTalkedWithType => ({\r\n    type: GET_USERS_TALKED_WITH,\r\n    usersArray: users\r\n})\r\n\r\n\r\n\r\n\r\n","import axios from \"axios\";\r\n\r\n\r\nconst instanse = axios.create({\r\n    withCredentials: true,\r\n    headers: {\r\n       \"API-KEY\": \"603ef8c0-4933-4294-ab5f-b170d3ebe6d8\"\r\n       //  \"API-KEY\": \"48cd781d-ab35-4a63-97ba-b184f71ed662\"\r\n    },\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/'\r\n})\r\n\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPages: any, pagesize: any) {\r\n        return (\r\n            instanse.get(`users?page=${currentPages}&count=${pagesize}`, {})\r\n                .then(response => response.data)\r\n        )\r\n    },\r\n    follow(id: any) {\r\n        return (\r\n            instanse.post(`follow/${id}`, {}, {})\r\n                .then(response => response.data)\r\n        )\r\n    },\r\n    getProfile(id: any) {\r\n        return profileAPI.getProfile(id)\r\n    },\r\n    unFollow(id: any) {\r\n        return (\r\n            instanse.delete(`follow/${id}`, {})\r\n                .then(response => response.data)\r\n        )\r\n    },\r\n    getFriendsUsers(currentPages: any, pagesize: any) {\r\n        return (\r\n            instanse.get(`users?page=${currentPages}&count=${pagesize}&friend=true`, {})\r\n                .then(response => response.data)\r\n        )\r\n    }\r\n\r\n}\r\nexport const profileAPI = {\r\n    getProfile(id: any) {\r\n        return (\r\n            instanse.get(`profile/${id}`)\r\n        )\r\n    },\r\n    getStatus(userID: any) {\r\n        return (\r\n            instanse.get(`/profile/status/${userID}`)\r\n        )\r\n    },\r\n    updateStatus(statusText: string) {\r\n        return (\r\n            instanse.put(`/profile/status`, {status: statusText})\r\n        )\r\n    },\r\n    updatePhoto(file: any) {\r\n        let formData = new FormData();\r\n        formData.append(\"image\", file)\r\n        return (instanse.put(`profile/photo`, formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            })\r\n        )\r\n    },\r\n    updateInfoProfile(profile: any) {\r\n        return instanse.put(`/profile`, profile)\r\n    }\r\n}\r\nexport const authorizationAPI = {\r\n    me() {\r\n        return (\r\n            instanse.get(`auth/me`, {})\r\n        )\r\n    },\r\n    login(email: string, password: string, rememberMe: boolean = false, captcha: any) {\r\n        return (\r\n            instanse.post(`auth/login`, {email, password, rememberMe, captcha}, {})\r\n\r\n        )\r\n    },\r\n    logout() {\r\n        return (\r\n            instanse.delete(`auth/login`, {})\r\n        )\r\n    }\r\n}\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return (\r\n            instanse.get(`security/get-captcha-url`)\r\n        )\r\n    }\r\n}\r\nexport const messagesAPI = {\r\n    getSelectedDialog(userId: any,currentPages: any, pagesize: any ) {\r\n        return (\r\n            instanse.get(`dialogs/${userId}/messages?page=${currentPages}&count=${pagesize}`, {})\r\n                .then(response => response.data)\r\n        )\r\n    },\r\n    sendMessage(userId: any, body: string) {\r\n        return (\r\n            instanse.post(`dialogs/${userId}/messages`, {body}, {})\r\n        )\r\n    },\r\n    getUsersTalkedWith() {\r\n        return (\r\n            instanse.get(`dialogs`, {})\r\n                .then(response => response.data)\r\n        )\r\n    }\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"nav_block__1GB-e\",\"butMenu\":\"nav_butMenu__1fLrr\",\"d1\":\"nav_d1__1-xBn\",\"d2\":\"nav_d2__YiG9W\",\"d3\":\"nav_d3__u7mit\",\"container\":\"nav_container__2NfBV\",\"item\":\"nav_item__2Fqq1\"};","import {usersAPI} from \"../../DAL/api\";\r\n\r\nconst FOLLOW = \"FOLLOW\"\r\nconst UN_FOLLOW = \"UN_FOLLOW\"\r\nconst SET_USERS = \"SET_USERS\"\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\"\r\nconst SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\"\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\"\r\nconst SET_USERID_FOR_DISABLE = \"SET_USERID_FOR_DISABLE\"\r\nconst TOGGLE_IS_FOLLOW = \"TOGGLE_IS_FOLLOW\"\r\n\r\n\r\n//type for Reduces\r\ntype FollowType = {\r\n    type: \"FOLLOW\"\r\n    userId: number\r\n}\r\ntype UNfollowType = {\r\n    type: \"UN_FOLLOW\"\r\n    userId: number\r\n}\r\ntype SetUsersType = {\r\n    type: \"SET_USERS\"\r\n    users: []\r\n}\r\ntype SetCurrentPageType = {\r\n    type: \"SET_CURRENT_PAGE\"\r\n    currentPages: number\r\n}\r\ntype SetTotalUsersCountACType = {\r\n    type: \"SET_TOTAL_USERS_COUNT\"\r\n    totalCounter: number\r\n}\r\ntype ToggleIsFetchingType = {\r\n    type: \"TOGGLE_IS_FETCHING\"\r\n    isFetching: boolean\r\n}\r\ntype SetUserIdForDisableType = {\r\n    type: \"SET_USERID_FOR_DISABLE\"\r\n    IsFollowingProgress: boolean\r\n    userId: any\r\n}\r\ntype ToggleIsFollowType = {\r\n    type: \"TOGGLE_IS_FOLLOW\"\r\n    follow: boolean\r\n}\r\n\r\n//type for Action\r\ntype ActionType =\r\n    FollowType\r\n    | UNfollowType\r\n    | SetUsersType\r\n    | SetCurrentPageType\r\n    | SetTotalUsersCountACType\r\n    | ToggleIsFetchingType\r\n    | SetUserIdForDisableType\r\n    | ToggleIsFollowType\r\n\r\n//initial State type\r\nexport type OneUsersType = {\r\n    id: number,\r\n    followed: boolean,\r\n    name: string,\r\n    status: string,\r\n    photos: any\r\n    uniqueUrlName: any\r\n}\r\ntype UsersType = {\r\n    usersData: Array<OneUsersType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPages: number\r\n    isFetching: boolean\r\n    userIdForDisabled: any\r\n    isFollow: boolean\r\n}\r\nlet initialState: UsersType = {\r\n    usersData: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPages: 1,\r\n    isFetching: true,\r\n    userIdForDisabled: [],\r\n    isFollow: false\r\n}\r\n\r\nexport const UsersReducer = (state: UsersType = initialState, action: ActionType): UsersType => {\r\n    if (state) {\r\n        switch (action.type) {\r\n            case TOGGLE_IS_FOLLOW:\r\n                return {\r\n                    ...state,\r\n                    isFollow: action.follow\r\n                }\r\n            case FOLLOW:\r\n                return {\r\n                    ...state,\r\n                    usersData: state.usersData.map((x) => {\r\n                        if (x.id === action.userId) {\r\n                            return {...x, followed: true}\r\n                        } else return x\r\n                    })\r\n                }\r\n            case UN_FOLLOW:\r\n                return {\r\n                    ...state,\r\n                    usersData: state.usersData.map((x) => {\r\n                        if (x.id === action.userId) {\r\n                            return {...x, followed: false}\r\n                        } else return x\r\n                    })\r\n                }\r\n            case SET_USERS:\r\n                return {...state, usersData: [...action.users]}\r\n            case SET_CURRENT_PAGE:\r\n                return {...state, currentPages: action.currentPages}\r\n            case SET_TOTAL_USERS_COUNT:\r\n                return {...state, totalUsersCount: action.totalCounter}\r\n            case TOGGLE_IS_FETCHING:\r\n                return {...state, isFetching: action.isFetching}\r\n            case SET_USERID_FOR_DISABLE:\r\n                return {\r\n                    ...state,\r\n                    userIdForDisabled: action.IsFollowingProgress\r\n                        ? [action.userId]\r\n                        : []\r\n                }\r\n            default:\r\n                return state;\r\n        }\r\n    } else return state\r\n}\r\n\r\n//Thunk Creator\r\n// делает запрос на сервер, возвращет всех пользователей\r\nexport const getUsersTC = (currentPages: number, pagesize: number, follow: boolean) => {\r\n    return async (dispatch: any) => {\r\n        dispatch(toggleIsFetchingAC(true))\r\n        let response;\r\n        // если ищем друзей, то выполняем один запрос на серве\r\n        if (follow) {\r\n            response = await usersAPI.getFriendsUsers(currentPages, pagesize)\r\n        } else {\r\n            response = await usersAPI.getUsers(currentPages, pagesize)\r\n        }\r\n        dispatch(toggleIsFetchingAC(false))\r\n        dispatch(setUsersAC(response.items))\r\n        dispatch(setTotalUsersCountAC(response.totalCount))\r\n    }\r\n}\r\n// делает запрос на сервер, меняет на сервере свойство фоллоу на true\r\nexport const followTC = (id: any) => {\r\n    return async (dispatch: any) => {\r\n        dispatch(setUserIdForDisabledAC(true, id))\r\n        let response = await usersAPI.follow(id)\r\n        if (response.resultCode === 0) {\r\n            dispatch(followAC(id))\r\n        }\r\n        dispatch(setUserIdForDisabledAC(false, id))\r\n    }\r\n}\r\n// делает запрос на сервер, удаляет на сервере свойство фоллоу(ставит по умолчанию false)\r\nexport const unFollowTC = (id: any) => {\r\n    return async (dispatch: any) => {\r\n        dispatch(setUserIdForDisabledAC(true, id))\r\n        let response = await usersAPI.unFollow(id)\r\n        if (response.resultCode === 0) {\r\n            dispatch(unFollowAC(id))\r\n        }\r\n        dispatch(setUserIdForDisabledAC(false, id))\r\n    }\r\n}\r\n\r\n//ActionCreator\r\nexport const followAC = (userId: number): FollowType =>\r\n    ({type: FOLLOW, userId})\r\nexport const unFollowAC = (userId: number): UNfollowType =>\r\n    ({type: UN_FOLLOW, userId})\r\n\r\n\r\nexport const setUsersAC = (users: []): SetUsersType =>\r\n    ({type: SET_USERS, users})\r\nexport const setCurrentPageAC = (currentPages: number): SetCurrentPageType =>\r\n    ({type: SET_CURRENT_PAGE, currentPages})\r\nexport const setTotalUsersCountAC = (total: number): SetTotalUsersCountACType =>\r\n    ({\r\n        type: SET_TOTAL_USERS_COUNT,\r\n        totalCounter: total\r\n    })\r\n// isFoll.Pr true, то в IsFollowingProgress в стейте записываем айди выбранного пользователя, иначе пустой массив\r\nexport const setUserIdForDisabledAC = (IsFollowingProgress: boolean, userId: any): SetUserIdForDisableType =>\r\n    ({\r\n        type: SET_USERID_FOR_DISABLE,\r\n        IsFollowingProgress: IsFollowingProgress,\r\n        userId\r\n    })\r\n\r\n\r\n// меняем в стейте значение isFetching. тру, значит, еще в процессе загрузки.\r\nexport const toggleIsFetchingAC = (isFetching: boolean): ToggleIsFetchingType =>\r\n    ({\r\n        type: TOGGLE_IS_FETCHING,\r\n        isFetching: isFetching\r\n    })\r\nexport const toggleFollowAC = (follow: boolean): ToggleIsFollowType =>\r\n    ({type: TOGGLE_IS_FOLLOW, follow})\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginForm\":\"login-form_loginForm__3Nfi0\",\"input\":\"login-form_input__624wX\",\"rememberMe\":\"login-form_rememberMe__2m9Np\",\"checkbox\":\"login-form_checkbox__2xz7W\",\"captcha\":\"login-form_captcha__lzo6i\",\"button\":\"login-form_button__1LSoq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"header_block__GGVhJ\",\"icon\":\"header_icon__2UwuE\",\"iconNetwork\":\"header_iconNetwork__2-Iwd\",\"container\":\"header_container__YiPjg\",\"info\":\"header_info__2xgWL\",\"ava\":\"header_ava__1FFaj\",\"unLog\":\"header_unLog__104om\",\"btn\":\"header_btn__2nH68\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendContainer\":\"one-user_friendContainer__1VDfw\",\"ava\":\"one-user_ava__36pc4\",\"name\":\"one-user_name__eLmQa\",\"butt\":\"one-user_butt__n9E_x\",\"butItem\":\"one-user_butItem__3lgTc\",\"viewProfileFriend\":\"one-user_viewProfileFriend__104mU\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {authorizationAPI, securityAPI} from \"../../DAL/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {Dispatch} from \"redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst SET_USER_DATA = \"SET_USER_DATA\"\r\nconst GET_CAPTCHA = \"CAPTCHA\"\r\n\r\n//type for Reduces\r\ntype SetUserType = {\r\n    type: \"SET_USER_DATA\"\r\n    userId: any,\r\n    email: any,\r\n    login: any,\r\n    isAuthorization: any\r\n}\r\ntype GetCaptchaType = {\r\n    type: \"CAPTCHA\"\r\n    captchaURl: any\r\n}\r\n\r\n\r\n///////type for Action\r\ntype ActionType = SetUserType | GetCaptchaType\r\n\r\n/////initial State\r\ntype AuthorizationStateType = {\r\n    userId: number | null\r\n    email: string | null\r\n    login: boolean | null\r\n    isAuthorization: boolean | null\r\n    captchaURl: any\r\n}\r\n\r\nlet initialState: AuthorizationStateType = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuthorization: false,\r\n    captchaURl: null\r\n}\r\n\r\nexport const AuthorizationReducer = (state: AuthorizationStateType = initialState, action: ActionType): AuthorizationStateType => {\r\n    if (state) {\r\n        switch (action.type) {\r\n            case SET_USER_DATA:\r\n                return {\r\n                    ...state,\r\n                    userId: action.userId,\r\n                    email: action.email,\r\n                    login: action.login,\r\n                    isAuthorization: action.isAuthorization\r\n                }\r\n                case GET_CAPTCHA:\r\n                return {\r\n                    ...state,\r\n                    captchaURl: action.captchaURl\r\n                }\r\n            default:\r\n                return state;\r\n        }\r\n    } else return state\r\n}\r\n//Thunk Creator\r\n// авторизируемся\r\nexport const loginTC = (email: string, password: string, rememberMe: boolean, captcha: any) => async (dispath: any) => {\r\n    let response = await authorizationAPI.login(email, password, rememberMe, captcha)\r\n    // если авт прошла успешно, то выполняем это\r\n    if (response.data.resultCode === 0) {\r\n        dispath(getAuthorizationDataTC())\r\n    }\r\n    else {\r\n        if (response.data.resultCode === 10){\r\n            dispath(getCaptchaTC())\r\n        }\r\n        let errorMessages = response.data.messages.length > 0\r\n            ? response.data.messages[0]\r\n            : \"some error\"\r\n        dispath(stopSubmit(\"Login\", {_error: errorMessages}))\r\n    }\r\n}\r\n//получаем данные о пользователе, который авторизировался\r\nexport const getAuthorizationDataTC = () => async (dispath: Dispatch) => {\r\n    // т к авт прошла успешно, то делаем запрос, от куда берем даные текущего пользователя\r\n    let response = await authorizationAPI.me()\r\n    if (response.data.resultCode === 0) {\r\n        let {id, email, login} = response.data.data\r\n        dispath(setAuthorizationDataAC(id, email, login, true))\r\n    }\r\n}\r\n//делаем запрос на сервер, удаляем свои данные для автаризации\r\nexport const logoutTC = () => async (dispath: Dispatch) => {\r\n    let response = await authorizationAPI.logout()\r\n    if (response.data.resultCode === 0) {\r\n        dispath(setAuthorizationDataAC(null, null, null, false));\r\n    }\r\n}\r\n// делаем запрос на сервер, получаем картинку антибот\r\nexport const getCaptchaTC = () => async (dispath: Dispatch) => {\r\n    let response = await securityAPI.getCaptchaUrl()\r\n    let captchaUrl = response.data.url\r\n    debugger\r\n    dispath(setCaptchaAC(captchaUrl))\r\n}\r\n\r\n//ACTION CREATOR\r\n// меняем данные в в стейте на данные авторизированного пользователя\r\nexport const setAuthorizationDataAC = (userId: number | null, email: string | null, login: string | null, isAuthorization: boolean | null): SetUserType => ({\r\n    type: SET_USER_DATA,\r\n    userId: userId,\r\n    email: email,\r\n    login: login,\r\n    isAuthorization: isAuthorization\r\n})\r\n// добовляем капчу, пришедшую из сервера, в наш стейт\r\nexport const setCaptchaAC = (captchaURl: any): GetCaptchaType => ({\r\n    type: GET_CAPTCHA,\r\n    captchaURl: captchaURl\r\n})","import {getAuthorizationDataTC} from \"./authorization-reducer\";\r\n\r\nconst SET_INITIALIZED = \"SET_INITIALIZED\"\r\n\r\n//type for Reduces\r\ntype InitializedType = {\r\n    type: \"SET_INITIALIZED\"\r\n}\r\n\r\n//type for Action\r\ntype ActionType = InitializedType\r\n\r\n//initial State\r\ntype StateType = {\r\n    initialized: boolean\r\n}\r\nlet initialState: StateType = {\r\n    initialized: false\r\n}\r\n\r\nexport const AppReducer = (state: StateType = initialState, action: ActionType): StateType => {\r\n    if (state) {\r\n        switch (action.type) {\r\n            case SET_INITIALIZED:{\r\n                return {\r\n                    ...state,\r\n                    initialized: true\r\n                }\r\n            }\r\n            default:\r\n                return state;\r\n        }\r\n    }\r\n    else return state\r\n}\r\n\r\n//Thunk Creator\r\nexport const initializeTC = () => (dispath: any) => {\r\n   let promise= dispath(getAuthorizationDataTC());\r\n    Promise.all([promise]).then(()=>{\r\n        dispath(initializedSuccessAC());\r\n    })\r\n}\r\n\r\n// Action Creator\r\nexport const initializedSuccessAC = (): InitializedType => ({type: SET_INITIALIZED})\r\n\r\n\r\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport {ProfileReducer} from \"./Reducers/profile-reducer\";\r\nimport {UsersReducer} from \"./Reducers/users-reducer\";\r\nimport {AuthorizationReducer} from \"./Reducers/authorization-reducer\";\r\nimport thunkMiddlewere from \"redux-thunk\";//thunk as thunkMiddleWere\r\nimport  {reducer as formReducer} from 'redux-form'\r\nimport {AppReducer} from \"./Reducers/app-reducer\";\r\nimport {dialogReducer} from \"./Reducers/dialogs-reducer\";\r\n\r\n\r\nexport const reducers = combineReducers(\r\n    {\r\n        profile: ProfileReducer,\r\n        dialog: dialogReducer,\r\n        usersPage: UsersReducer,\r\n        auth: AuthorizationReducer,\r\n        form: formReducer,\r\n        app: AppReducer\r\n    }\r\n)\r\n\r\nexport type StoreStateType = ReturnType<typeof reducers>\r\n\r\nconst composeEnhancers = (window && (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\nexport const store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddlewere)));\r\n\r\n// @ts-ignore\r\nwindow.store = store\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport s from \"./nav.module.scss\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nexport const Nav = () => {\r\n\r\n    return (<div className={s.block}>\r\n\r\n        <div  className={s.butMenu}  >\r\n                <div className={s.d1}></div>\r\n                <div className={s.d2}></div>\r\n                <div className={s.d3}></div>\r\n\r\n        </div>\r\n        <div className={s.container}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" className={s.buttonItem}>\r\n                    Profile\r\n                </NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/messages\" className={s.buttonItem}>\r\n                    Messages\r\n                </NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/users\" className={s.buttonItem}>\r\n                    Users\r\n                </NavLink>\r\n            </div>\r\n            <div className={s.item}>Set</div>\r\n\r\n        </div>\r\n    </div>)\r\n}","import React from 'react'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {createFormField, Input} from \"../../UI/component/Common/FormsControl/FormsControl\";\r\nimport {maxLength, requiredField} from \"../../UI/utils/validators/validators\";\r\nimport s from \"./login-form.module.scss\";\r\n\r\nconst maxLengthValidator = maxLength(50)\r\n\r\nconst LoginForm = ({handleSubmit, error, x}: any) => {\r\n    return (\r\n/*        В пропсах теперь нам очень много всего приходит после оборачивания компоненты с формой в HOC.\r\n        В т.ч. метод handleSubmit, который позволяет не перезагружать страницу при отправке.*/\r\n        <form onSubmit={handleSubmit} className={s.loginForm}>\r\n                <Field placeholder={\"Email\"}\r\n                       component={Input}\r\n                       name={\"email\"}\r\n                       validate={[requiredField, maxLengthValidator]}\r\n                       props={{ className: s.input }}/>\r\n{/*Все поля в форме меняем на компоненты Field, которые пришли к нам из библиотеки, с указанием component аналогично пропсам*/}\r\n                <Field placeholder={\"Password\"}\r\n                       component={Input}\r\n                       name={\"password\"}\r\n                       validate={[requiredField, maxLengthValidator]}\r\n                       props={{ className: s.input }}/>\r\n            <div className={s.rememberMe}>\r\n                <Field type={\"checkbox\"}\r\n                       component={Input}\r\n                       name={\"rememberMe\"}\r\n                       validate={[maxLengthValidator]}\r\n                       props={{ className: s.checkbox }}/> Remember\r\n            </div>\r\n            {x && <img className={s.captcha} src={x}/>}\r\n\r\n            {x && createFormField(\"captcha URl\", \"captcha\", [], Input, {className: s.input})}\r\n\r\n            {error && <div className={s.formSunnierError}>\r\n                {error}\r\n            </div>}\r\n\r\n                <button className={s.button} type='submit' >Login</button>\r\n\r\n        </form>\r\n\r\n    )\r\n}\r\n//присвоили уникальное имя нашей новой форме в параметре – {form: 'login'}\r\n export const LoginReduxForm: any = reduxForm({\r\n    form: 'Login'\r\n})(LoginForm)\r\n\r\n// Теперь при вводе текста в форме в нашем стейте появляется временный объект login (имя нашей формы),\r\n// который содержит много объектов, свойствами которых являются наши поля (берутся по name).\r\n// Среди них объекты «было ли посещено поле», «было ли тронуто» и т.д.\r\n//     А также объект values, где в свойства (берутся по name) попадает вводимый текст.\r\n// можно вывести в консоль и посмотреть параметры, потом их использовать","import React from \"react\";\r\nimport {StoreStateType} from \"../../BLL/store\";\r\nimport {loginTC} from \"../../BLL/Reducers/authorization-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {Login} from \"./login\";\r\n\r\nconst mapStateToProps = (state: StoreStateType) => ({\r\n    isAuth: state.auth.isAuthorization,\r\n    captcha: state.auth.captchaURl\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n    return {\r\n        login: (email: string, password: string, rememberMe: boolean, captcha: any) => {\r\n            dispatch(loginTC(email, password, rememberMe, captcha))\r\n        }\r\n    }\r\n}\r\n\r\nexport const LoginContainer = connect(\r\n    mapStateToProps, mapDispatchToProps)(Login)","import React from 'react'\r\nimport s from \"./login.module.scss\"\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {LoginReduxForm} from \"./login-form\";\r\nimport {reset} from \"redux-form\";\r\n\r\nexport const Login = (props:any) => {\r\n/*    в месте вызова нашей компоненты с окончательной «редаксовской формой» теперь нужно повесить\r\n    произвольную функцию через onSubmit, которая соберет данные из полей из полей и обработает их при нажатии на кнопку:*/\r\n    const onSubmit = (formData: any) => {\r\n        console.log(formData)//здесь мы получаем данные с формы и будем из диспатчить потом\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha)\r\n        // dispatch(reset(\"profileAddPostForm\")) для очистки полей в форме, в кавычках имя формы\r\n    }\r\n    if (props.isAuth) return <Redirect to={\"/profile\"}/>\r\n\r\n    const on= false;\r\n\r\n    return (\r\n        <div className={s.block}>\r\n            <div className={s.container}>\r\n                <div className={s.rightPart}>\r\n                    <div className={s.pathContainer}>\r\n                        <div className={s.firstText}>Join the club</div>\r\n                        <div className={s.secondText}>Lorem ipsum dolor sit amet,\r\n                            consectetur adipiscing elit. Ut elit tellus, luctus.\r\n                        </div>\r\n                        <div className={s.oneAdvantage}>\r\n                            <div className={s.icon}> ♥icon</div>\r\n                            <div className={s.description}>\r\n                                <div className={s.title}>Community</div>\r\n                                <div className={s.desc}>At vero eos et accusamus et.</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className={s.oneAdvantage}>\r\n                            <div className={s.icon}/>\r\n                            <div className={s.description}>\r\n                                <div className={s.title}>Online shop</div>\r\n                                <div className={s.desc}>At vero eos et accusamus et.</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className={s.oneAdvantage}>\r\n                            <div className={s.icon}/>\r\n                            <div className={s.description}>\r\n                                <div className={s.title}>Job search</div>\r\n                                <div className={s.desc}>At vero eos et accusamus et.</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={s.leftPart}>\r\n                    <div className={s.pathContainer}>\r\n                        <img  className={s.iconNetwork} src={\"https://mythemestore.com/beehive-preview/wp-content/uploads/2020/07/logo-icon.svg\"}/>\r\n                        <div className={s.welcome}>Welcome</div>\r\n                        <LoginReduxForm onSubmit={onSubmit} x={props.captcha}/>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n","import s from \"./one-user.module.scss\";\r\nimport no_image from \"../../../UI/assets/img/no_image.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\nexport const OneUser = (props: any) => {\r\n    const user = props.user;\r\n    return (\r\n        <div className={s.friendContainer}>\r\n            <img className={s.ava}\r\n                 src={user.photos.small != null ? user.photos.small : no_image}/>\r\n\r\n            <div className={s.name}>{user.name}</div>\r\n            <div className={s.butt}>\r\n                {user.followed\r\n                    ?//arr.some возвращает true, если хотя бы для одного элемента массива условие верно\r\n                    //при раздизабл. кнопки к нам прихоидот пустой массив\r\n                    <button className={s.butItem}\r\n                            disabled={props.IsFollowingProgress.some((id: any) => id === user.id)}\r\n                            onClick={() => {\r\n                                props.unfollow(user.id)\r\n                            }\r\n                            }>Unfollow</button>\r\n                    :\r\n                    <button className={s.butItem}\r\n                            disabled={props.IsFollowingProgress.some((id: any) => id === user.id)}\r\n                            onClick={() => {\r\n                                props.follower(user.id)\r\n                            }\r\n                            }>Follow</button>}\r\n                <div className={s.butItem}> send sms</div>\r\n            </div>\r\n            <NavLink className={s.viewProfileFriend} to={'/profile/' + user.id}>\r\n                view profile\r\n            </NavLink>\r\n        </div>\r\n\r\n    )\r\n}","import React from 'react'\r\nimport s from \"./users.module.scss\"\r\nimport {OneUsersType} from \"../../BLL/Reducers/users-reducer\";\r\nimport {OneUser} from \"./one-user/oneUser\";\r\n\r\nexport const Users = (props:any) => {\r\n\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pagesize)\r\n    let pages = []\r\n\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    return (\r\n        <div className={s.block}>\r\n            {/*посмотреть друзей*/}\r\n            <div className={s.container}>\r\n                <div className={s.search}>\r\n                    <input className={s.inp}\r\n                           placeholder={\"Search Members\"}></input>\r\n                    <div className={s.spn}></div>\r\n                </div>\r\n                <button onClick={()=>{props.FiendsAC(true)}}>show all</button>\r\n\r\n                <div className={s.viewFriends}>\r\n                    {props.users.map((user: OneUsersType) =>\r\n                        <OneUser user={user}\r\n                                 unfollow={props.unfollow}\r\n                                 IsFollowingProgress={props.IsFollowingProgress}\r\n                                 follower={props.follower}\r\n                        />\r\n                    )\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    followTC, getUsersTC, toggleFollowAC,\r\n    setCurrentPageAC, toggleIsFetchingAC, setUserIdForDisabledAC,\r\n    setTotalUsersCountAC,\r\n    setUsersAC,\r\n    unFollowTC,\r\n    OneUsersType\r\n} from \"../../BLL/Reducers/users-reducer\";\r\nimport {StoreStateType} from \"../../BLL/store\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPages,\r\n    getIsFetching,\r\n    getIsFollowingProgress,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsersCreateSelector\r\n} from \"../../BLL/users-selectors\";\r\nimport {Users} from \"./users\";\r\nimport {Preloader} from \"../Common/pr/Preloader\";\r\n\r\n\r\nexport type MapStateToPropsType = {\r\n    users: OneUsersType[]\r\n    pagesize: number\r\n    totalUsersCount: number\r\n    currentPages: number\r\n    isFetching: boolean\r\n    IsFollowingProgress:boolean\r\n    isFollow: boolean\r\n}\r\nexport type MapDispatchTopropsType = {\r\n    follower: (id: number) => void\r\n    unfollow: (id: number) => void\r\n    setUsers: (x: []) => void\r\n    SetCurrentPage: (x: number) => void\r\n    setTotalUsersCount: (x: number) => void\r\n    toogleIsFetching: (x: boolean) => void\r\n    setIsFollowingProgress: any\r\n    getUsersThunk: any\r\n    FiendsAC:any\r\n}\r\n\r\nlet mapStateToProps = (state: StoreStateType): MapStateToPropsType => {\r\n\r\n    return {\r\n        users: getUsersCreateSelector(state),\r\n        pagesize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPages: getCurrentPages(state),\r\n        isFetching: getIsFetching(state),\r\n        IsFollowingProgress: getIsFollowingProgress(state),\r\n        isFollow: state.usersPage.isFollow\r\n    }\r\n}\r\n\r\nclass UsersAPI extends React.Component<MapDispatchTopropsType & MapStateToPropsType, any> {\r\n    componentDidMount() {\r\n\r\n        this.props.getUsersThunk(this.props.currentPages, this.props.pagesize, false)\r\n\r\n    }\r\n    componentDidUpdate(prevProps: Readonly<MapDispatchTopropsType & MapStateToPropsType>, prevState: Readonly<any>, snapshot?: any) {\r\n        if(this.props.isFollow!==prevProps.isFollow)\r\n            this.props.getUsersThunk(this.props.currentPages, this.props.pagesize, this.props.isFollow)\r\n    }\r\n\r\n\r\n    onPageChanget = (pageNumber: number) => {\r\n        this.props.getUsersThunk(pageNumber, this.props.pagesize,  this.props.isFollow)\r\n\r\n        this.props.SetCurrentPage(pageNumber);\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n\r\n            <Users users={this.props.users}\r\n                   totalUsersCount={this.props.totalUsersCount}\r\n                   currentPages={this.props.currentPages}\r\n                   pagesize={this.props.pagesize}\r\n                   follower={this.props.follower}\r\n                   unfollow={this.props.unfollow}\r\n                   onPageChanget={this.onPageChanget}\r\n                   IsFollowingProgress={this.props.IsFollowingProgress}\r\n                   setIsFollowingProgress={this.props.setIsFollowingProgress}\r\n                   isFollow={this.props.isFollow}\r\n                   FiendsAC={this.props.FiendsAC}/>\r\n        </>\r\n    }\r\n}\r\n\r\nexport const UsersContainer:any = compose(/*WithAuthRedirect,*/connect(mapStateToProps, {\r\n\r\n    follower:followTC,\r\n    unfollow: unFollowTC,\r\n    setUsers:setUsersAC,\r\n    SetCurrentPage:setCurrentPageAC,\r\n    setTotalUsersCount: setTotalUsersCountAC,\r\n    setIsFollowingProgress: setUserIdForDisabledAC,\r\n    toogleIsFetching:toggleIsFetchingAC,\r\n    getUsersThunk: getUsersTC,\r\n    FiendsAC: toggleFollowAC\r\n    //getUsersThunk: getFriendsThunkCreater\r\n}))(UsersAPI)\r\n\r\n\r\n","import React from \"react\";\r\nimport {Preloader} from \"../../ui-new/Common/pr/Preloader\";\r\n\r\n\r\nexport const WithSuspenseHOC=(Component:any)=>{\r\n\r\n   return(props: any)=>{\r\n       return <React.Suspense fallback={<Preloader/>}>\r\n           <Component{...props}/>\r\n       </React.Suspense>\r\n   }\r\n\r\n}","import React from 'react';\r\nimport s from \"./header.module.scss\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {Button} from \"@material-ui/core\";\r\n\r\nexport const Header = (props: any) => {\r\n    return (\r\n        <div className={s.block}>\r\n\r\n            <div className={s.icon}>\r\n                <img className={s.iconNetwork}\r\n                     src={\"https://mythemestore.com/beehive-preview/wp-content/uploads/2020/07/logo-icon.svg\"}/>\r\n            </div>\r\n            <div className={s.container}>\r\n                {props.isAuthorization\r\n                    ?\r\n                    <div className={s.info}>\r\n                        <div className={s.name}>{props.login}</div>\r\n                    </div>\r\n                    : <></>\r\n                }\r\n                <div className={s.unLog}>\r\n                    {props.isAuthorization\r\n                        ? <>\r\n                            <NavLink to=\"/login\" className={s.btn} onClick={props.logOut}>\r\n                                LogOut\r\n                            </NavLink>\r\n                        </>\r\n                        : <NavLink to=\"/*\" className={s.btn} onClick={()=>{}} >\r\n                            Login\r\n                        </NavLink>}</div>\r\n\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {StoreStateType} from \"../../BLL/store\";\r\nimport {logoutTC} from \"../../BLL/Reducers/authorization-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {Header} from \"./header\";\r\n\r\nclass HeaderContainerConnect extends React.Component<any, any> {\r\n    refreshHeader(){\r\n        window.location.reload();\r\n    }\r\n    componentDidMount() {\r\n\r\n\r\n    }\r\n    componentDidUpdate(prevProps: Readonly<any>, prevState: Readonly<any>, snapshot?: any) {\r\n        if(this.props.isAuthorization !==prevProps.isAuthorization )\r\n            this.refreshHeader()\r\n    }\r\n    render() {\r\n        return (\r\n            <Header login={this.props.login} isAuthorization={this.props.isAuthorization} logOut={this.props.logOut}/>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: StoreStateType) => ({\r\n    isAuthorization: state.auth.isAuthorization,\r\n    login: state.auth.login\r\n})\r\nlet mapDispatchToProps = (dispatch: any) => {\r\n    return {\r\n        logOut: () => {\r\n            dispatch(logoutTC())\r\n        }\r\n    }\r\n}\r\nexport const HeaderConteiner = connect(mapStateToProps, mapDispatchToProps)(HeaderContainerConnect)","import React from 'react';\r\nimport s from \"./app.module.scss\"\r\nimport {Redirect, Route, Switch, withRouter} from \"react-router-dom\";\r\nimport {Login} from \"./login-page/login\";\r\nimport {Profile} from \"./profile-page/profile\";\r\nimport {Messages} from \"./messages-page/messages\";\r\nimport {Users} from \"./users-page/users\";\r\nimport {Header} from \"./header/header\";\r\nimport {Nav} from \"./nav/nav\";\r\nimport {LoginContainer} from \"./login-page/login-container\";\r\n/*\r\nimport ProfileContainerConnect from \"./profile-page/profile-container\";\r\n*/\r\nimport {UsersContainer} from \"./users-page/users-container\";\r\nimport {Preloader} from \"./Common/pr/Preloader\";\r\nimport {WithSuspenseHOC} from \"../UI/HOC/WithSuspense\";\r\nimport {StoreStateType} from \"../BLL/store\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {initializeTC} from \"../BLL/Reducers/app-reducer\";\r\nimport {HeaderConteiner} from \"./header/header-container\";\r\n/*\r\nimport MessagesContainer from \"./messages-page/messages-container\";\r\n*/\r\n\r\n// лейзи говорит, что он компаненту не импортирую. когда ее надо будет отрисоввать, он запросится с сервера\r\nconst MessagesContainer = React.lazy(() => import('./messages-page/messages-container'));\r\n\r\nconst ProfileContainerConnect = React.lazy(() => import('./profile-page/profile-container'));\r\n\r\n\r\n\r\n\r\nclass App extends React.Component<any, any> {\r\n// componentDidMount срабатывает один раз, когда К. вмонтируется\r\n    catchAllUnhandleError = (promiseRejectEvent: PromiseRejectionEvent) => {\r\n        alert(promiseRejectEvent)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.initializeApp()\r\n        window.addEventListener(\"unhandledrejection\", this.catchAllUnhandleError)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"unhandledrejection\", this.catchAllUnhandleError)\r\n\r\n    }\r\n\r\n    render() {\r\n        // при первой загрузке у на нет данных, показываем поэтому крутилку\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n// задача К. вернуть jsx(tsx) в зависимости от пропсов либо личного локального стейта\r\n        // exact требует полное совпадение урла. Можно добавить <Switch>..роутер..</Switch> и тогда при первом совпадении будет отрисовка.\r\n        // в этом случает лучше точные урлы ставить выше, а общие ниже\r\n        return (<div className={s.block}>\r\n                <HeaderConteiner/>\r\n                <div className={s.container}>\r\n                    <Nav/>\r\n                    <Switch>\r\n                        <Route path='/profile/:userID?'\r\n                               render={WithSuspenseHOC(ProfileContainerConnect)}/>\r\n                        <Route path='/messages/:userID?'\r\n                               render={WithSuspenseHOC(MessagesContainer)}/>\r\n                        <Route path='/users'\r\n                               render={() => <UsersContainer/>}/>\r\n                        <Route path='/login'\r\n                               render={() => <LoginContainer/>}/>\r\n                        <Route path='*'\r\n                               render={() => <LoginContainer/>}/>\r\n\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: StoreStateType) => ({\r\n    initialized: state.app.initialized\r\n})\r\n// compose создает контейнернкю компанету, применяя один за одним HOCи=>\r\n// (компанента высшего порядка-это функция, которая принимает одну компаненту и возвращает другую компаненту.\r\n// Это нужно для того, что бы наша компанента получила какие-то данные)\r\n\r\n// connect  дает данные из Store с помощью mapStateToProps и mapDispatchToProps\r\n// withRouter дает компоненте данные из url\r\nexport const AppContainer: any = compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp: initializeTC}))(App)\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n// import {AppContainer} from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {store} from \"./BLL/store\";\r\nimport {Provider} from \"react-redux\";\r\nimport {BrowserRouter, HashRouter} from \"react-router-dom\";\r\nimport {Login} from \"./ui-new/login-page/login\";\r\nimport {Profile} from \"./ui-new/profile-page/profile\";\r\nimport {AppContainer} from \"./ui-new/App\";\r\nimport {Users} from \"./ui-new/users-page/users\";\r\nimport {Messages} from \"./ui-new/messages-page/messages\";\r\n\r\n// BrowserRouter добовляет\r\n// Provider добовляет store в контекст, из которого все компаненты могут брать данные ( наприер стор, тема темная/светлая, язык)\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <BrowserRouter>\r\n{/*\r\n            <AppContainer/>\r\n*/}\r\n\r\n\r\n            <AppContainer/>\r\n\r\n\r\n        </BrowserRouter>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\nreportWebVitals();\r\n// реакт библиотека- это библиотека, которая эффективно отрисовывает html. Эффективно, в плане она не перерисовывает те элементы, которые не надо\r\n// реакт загружается и живет в браузере\r\n//компанента возвращает тсикс или джсикс\r\n\r\n//сайдэффект= запросы на сервер, сетТаймаут, обращение к дом элементам на прямую\r\n//  шудКомпонентАпдейт - реакт.Мемо\r\n// пьюрКомпонент\r\n//\r\n//\r\n///\r\n// редакс это система стейт менеджмента, то что позволчет управлять удобно стейто\r\n// редакс состоит из одного главного обьекта стор(хранилище,обьект ооп) .В стор мы засовываем редьюсеры, из которых он будет состоять.\r\n// редьюсеры это функции преобразователи. они получают на входе\r\n// экшен(обьект, инструкция, у которого минимум есть тип и мб данные) и часть стейта и преобразовывает стейт\r\n// делает преобраования он иммутабельно( изменяет не стейт а его копию)\r\n//\r\n// стор(хранилище) обьект ооп,  с ним можно взаимодействовать через его интерфейс( методы и свойства)\r\n// есть три главных метода:\r\n//getState позволяет получить из стора актуальный стейт\r\n//subscribe позволяет подписаться подпищику на изменение стейта\r\n//dispatch позволяет приобразовать стейт\r\n\r\n\r\n// реакт редакс для связки реакта и редакса. обеспечивает связь коспоненты со стором.\r\n// на помощь для связи комп. со стором приходит фунция connect\r\n// connect это хок. он создает вокгруг нашей компаненты другую компаненту. она снабжает нашу компаненты\r\n// connect(mstp, mdtp). mstp берет из стейта часть, которая использоваться будет в нашей компаненте( в нашу комп приходит это впропсах)\r\n// mdtp берем функцию (метод диспатч у стора) , который возвращает нам колбеки в которых диспатчи\r\n// в новой компаненте есть доступ к стору, у которого она может вызывать подписку на изменения стейта.\r\n// все обернута провайдером из р-р для того, что бы у всего приложения был доступ к стейту в контексте\r\n\r\n\r\n\r\n\r\n\r\n// node js это альтернатива браузеру. это платформа, позолябщая писать на js  любые приложения. его моно загрузить в телевизор холодильник пылесос север..\r\n// конкретно нам он нужен для подключения куси пакетов\r\n\r\n// компаненты\r\n// фунцкциональная компонента это функц принимающая пропсы и возврашает jsx\r\n\r\n// классовая компанента.\r\n\r\n// фунция мар принимает один обькт возвращает массив других обьектов (всегда добовлять key)\r\n// идентпотентность или детерменированность - получаем на входе одно и тоже и на выходе получаем одно и тоже\r\n// в чистой функции нет сайдэффектов, локального стейта\r\n// имьютабельность - функция не может менять то, что в нее приходит.\r\n\r\n\r\n\r\n// SERVER API\r\n// интрфейс сервера- это эндпоинты(урлы, на которые мы делаем запрос).рест апи это правила. какой тип запроса, какой ответ будет\r\n// делаем запросы с помощью axios. нам возвращаются промисы. у промиса  есть метод then, в которую мы передаем коллбек , который срабатывает когдп промис выполнился\r\n\r\n//ajax запросы выносим в контейнерную компаненту. контейнерных коспанент может быть много.\r\n// хок withRouter. тягает данные из урла. как коннект\r\n\r\n// thunk- это функция, которая принимает метод диспаитч, и внутри себя делаем асинхронную опирация и разные диспатчи\r\n// используем санк креатер. санку можно задиспатчить. 3\r\n//что бы ui не общался ни с кем, кроме блл.\r\n\r\n\r\n// редакс форм. есть пакет релакс форм реакт. он для того, что бы работал\r\n// флакс круговорот(ничего не появляется в юай без появления этого сначала в блл. например логин и пароль)\r\n\r\n\r\n// селекторы для mstp в connect. они для того случая, если очень тяжело достаются данные из стейта. что бы не засорять мстпya","import React from 'react';\r\nimport { createSelector } from 'reselect';\r\n\r\nexport const getUsers=(state: any)=>{\r\n    return state.usersPage.usersData\r\n}\r\nexport const getUsersCreateSelector=createSelector(getUsers,(users)=>{\r\n    return users.filter((x:any)=>true)\r\n})\r\nexport const getPageSize=(state: any)=>{\r\n    return state.usersPage.pageSize\r\n}\r\nexport const getTotalUsersCount=(state: any)=>{\r\n    return state.usersPage.totalUsersCount\r\n}\r\nexport const getCurrentPages=(state: any)=>{\r\n    return state.usersPage.currentPages\r\n}\r\nexport const getIsFetching=(state: any)=>{\r\n    return state.usersPage.isFetching\r\n}\r\nexport const getIsFollowingProgress=(state: any)=>{\r\n    return state.usersPage.userIdForDisabled\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"forms_formControl__3EHfj\",\"error\":\"forms_error__bwAEw\",\"formSunnierError\":\"forms_formSunnierError__1NCLm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"users_block__2UOdh\",\"container\":\"users_container__22NfB\",\"search\":\"users_search__1pKs8\",\"inp\":\"users_inp__15EnU\",\"spn\":\"users_spn__3G9ai\",\"viewFriends\":\"users_viewFriends__bDaB3\"};","export default __webpack_public_path__ + \"static/media/looading.c1b8565f.gif\";","import looading from '../../../UI/assets/img/looading.gif'\r\nimport React from \"react\";\r\nimport s from \"./priloader.module.scss\";\r\n\r\nexport const Preloader=()=>{\r\n    return <div className={s.block}><img src={looading} className={s.pril}/></div>\r\n}","import React from 'react';\r\nimport style from './forms.module.css'\r\nimport {Field} from \"redux-form\";\r\n\r\nexport const Textarea = ({input, meta, ...props}: any) => {\r\n    const hasError = meta.touched && meta.error\r\n    return <div  className={style.formControl + \" \" + (hasError ? style.error : \"\")}>\r\n        <textarea {...input} {...props}/>\r\n        <div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    </div>\r\n}\r\nexport const Input = ({input, meta, ...props}: any) => {\r\n    const hasError = meta.touched && meta.error\r\n    return <div className={style.formControl + \" \" + (hasError ? style.error : \"\")}>\r\n        <input {...input} {...props}/>\r\n        <div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    </div>\r\n}\r\nexport const Form = ({input, meta, el, ...props}: any) => {\r\n    const hasError = meta.touched && meta.error\r\n    return <div className={style.formControl + \" \" + (hasError ? style.error : \"\")}>\r\n        <props.el {...input} {...props}/>\r\n        <div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport const createFormField = (placeholder: any, name: any, validator: any, component: any, props = {}, text = \"\") => (\r\n    <>\r\n        <Field placeholder={placeholder}\r\n               name={name}\r\n               validate={validator}\r\n               component={component}\r\n               {...props}/> {text}\r\n    </>\r\n)\r\n","export const requiredField=(value:any)=>{\r\n    if(value) return undefined\r\n    return \"Field is required\"\r\n}\r\nexport const maxLength=(maxLength: number)=>(value:any)=>{\r\n    if(value && value.length>maxLength) return `max lenght is ${maxLength} symbols`\r\n    return undefined\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"login_block__3_udS\",\"container\":\"login_container__DukJL\",\"rightPart\":\"login_rightPart__1bKCf\",\"pathContainer\":\"login_pathContainer__1weu4\",\"firstText\":\"login_firstText__1ZYqQ\",\"secondText\":\"login_secondText__1g8Fr\",\"oneAdvantage\":\"login_oneAdvantage__1ClLI\",\"icon\":\"login_icon__W7cfQ\",\"description\":\"login_description__Wrkfh\",\"title\":\"login_title__3O8Pr\",\"desc\":\"login_desc__3GLNQ\",\"leftPart\":\"login_leftPart__QqwSH\",\"iconNetwork\":\"login_iconNetwork__2f7lo\",\"welcome\":\"login_welcome__3d5N8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"app_block__sEMSB\",\"container\":\"app_container__2QXCc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"priloader_block__1msor\",\"pril\":\"priloader_pril__1JhG9\"};"],"sourceRoot":""}
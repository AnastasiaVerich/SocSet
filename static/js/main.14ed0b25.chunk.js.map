{"version":3,"sources":["ui-new/app.module.scss","ui-new/Common/preloader/priloader.module.scss","ui-new/login-page/login.module.scss","BLL/Reducers/dialogs-reducer.tsx","DAL/api.tsx","ui-new/Common/forms-control/FormsControl.tsx","ui-new/setting/contacts-edit-form/contacts-edit-form.module.scss","ui-new/nav/nav.module.scss","ui-new/setting/aboutMe-edit-form/aboutMe-edit-form.module.scss","ui-new/login-page/login-form.module.scss","reportWebVitals.ts","BLL/Reducers/authorization-reducer.tsx","BLL/Reducers/app-reducer.tsx","DAL/chat-api.tsx","BLL/Reducers/chat-reducer.tsx","BLL/store.tsx","ui-new/nav/nav.tsx","ui-new/login-page/login-form.tsx","ui-new/login-page/login-container.tsx","ui-new/login-page/login.tsx","ui-new/users-page/one-user/oneUser.tsx","ui-new/users-page/paginator/Paginator.tsx","ui-new/users-page/users.tsx","ui-new/users-page/users-container.tsx","ui-new/header/header.tsx","ui-new/header/header-container.tsx","ui-new/setting/aboutMe-edit-form/aboutMe-edit-form.tsx","ui-new/setting/contacts-edit-form/contacts-edit-form.tsx","ui-new/setting/setting.tsx","ui-new/setting/setting-container.tsx","ui-new/HOC/with-suspense.tsx","ui-new/chat-page/chat.tsx","ui-new/App.tsx","index.tsx","ui-new/users-page/one-user/one-user.module.scss","ui-new/header/header.module.scss","ui-new/chat-page/chat.module.scss","BLL/users-selectors.tsx","ui-new/Common/forms-control/forms.module.css","ui-new/users-page/users.module.scss","ui-new/setting/setting.module.scss","ui-new/assets/img/looading.gif","ui-new/Common/preloader/Preloader.tsx","BLL/Reducers/profile-reducer.tsx","ui-new/users-page/paginator/Paginator.module.scss","ui-new/assets/img/no_image.png","ui-new/utils/validators/validators.tsx","BLL/Reducers/users-reducer.tsx"],"names":["module","exports","GET_SELECTED_DIALOG","GET_SELECTED_DIALOG_MORE","GET_USERS_TALKED_WITH","initialState","recipientId","messages","users","totalCount","dialogReducer","state","action","type","items","oldMessages","concat","usersArray","getSelectedDialogTC","id","currentPages","pagesize","dispatch","a","toggleIsFetchingAC","messagesAPI","getSelectedDialog","response","getSelectedDialogAC","getSelectedDialogMoreAC","senMessageTC","userId","body","sendMessage","data","resultCode","getUsersTalkedWithTC","getUsersTalkedWith","getUsersTalkedWithAC","instanse","axios","create","withCredentials","headers","baseURL","usersAPI","getUsers","friend","term","get","then","follow","post","getProfile","profileAPI","unFollow","delete","getStatus","userID","updateStatus","statusText","put","status","updatePhoto","file","formData","FormData","append","updateInfoProfile","profile","authorizationAPI","me","login","email","password","rememberMe","captcha","logout","securityAPI","getCaptchaUrl","Textarea","input","meta","props","hasError","touched","error","className","style","formControl","Input","createFormField","placeholder","name","validator","component","text","validate","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","SET_USER_DATA","GET_CAPTCHA","isAuthorization","captchaURl","getAuthorizationDataTC","dispath","setAuthorizationDataAC","logoutTC","getCaptchaTC","captchaUrl","url","setCaptchaAC","SET_INITIALIZED","initialized","initializedSuccessAC","subscribes","ws","messagesHandler","e","forEach","s","JSON","parse","openHandler","errorHandler","console","log","closeHandler","setTimeout","createChanel","cleanUp","removeEventListener","close","WebSocket","addEventListener","chatAPI","event","callback","push","filter","message","send","SN_CHAT_MESSAGES_RECEVIED","SN_CHAT_STATUS_CHANGED","actions","payload","_messagesHandler","newMessageHandler","_statusChangedHandler","statusChengedHandler","reducers","combineReducers","ProfileReducer","dialog","usersPage","UsersReducer","auth","form","formReducer","app","chat","m","index","arr","length","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddlewere","Nav","useDispatch","block","iconMenu","container","menu","item","to","buttonItem","logOut","onClick","maxLengthValidator","maxLength","LoginReduxForm","reduxForm","handleSubmit","x","onSubmit","loginForm","Field","requiredField","checkbox","src","alt","formSunnierError","button","LoginContainer","connect","isAuth","errorMessages","stopSubmit","_error","loginTC","rightPart","pathContainer","firstText","secondText","oneAdvantage","icon","description","title","desc","leftPart","iconNetwork","welcome","OneUser","user","oneFriendContainer","photo","photos","small","no_image","btn","followed","disabled","IsFollowingProgress","some","unfollow","follower","viewProfileBtn","Paginator","pagesCount","Math","ceil","totalItemsCount","pages","i","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","map","selectPage","page","onPageChanget","Users","totalUsersCount","search","inp","value","onChange","searchAC","currentTarget","FiendsAC","userBlock","paginator","UsersAPI","pageNumber","getUsersThunk","isFollow","SetCurrentPage","this","prevProps","prevState","snapshot","setIsFollowingProgress","React","Component","UsersContainer","getUsersCreateSelector","getPageSize","getTotalUsersCount","getCurrentPages","isFetching","getIsFetching","getIsFollowingProgress","followTC","unFollowTC","setUsers","setUsersAC","setCurrentPageAC","setTotalUsersCount","setTotalUsersCountAC","setUserIdForDisabledAC","toogleIsFetching","getUsersTC","toggleFollowAC","Header","info","unLog","HeaderContainerConnect","location","reload","refreshHeader","HeaderContainer","AboutMeEditForm","formContainer","editBlock","item1","item2","MainEdit","mainInfo","photoChangeBlock","large","htmlFor","customfileupload","target","files","inputFile","ContactsEditForm","initialValues","editName","editContacts","contacts","Object","keys","key","contact","Setting","setX","y","setY","Preloader","editContainer","nav","ProfileConteiner","ownerId","authorizationUserId","history","getOneProfile","refreshProfile","match","params","SettingContainer","getOneProfileTC","updatePhotoTC","updateInfoProfileTC","withRouter","WithSuspenseHOC","Suspense","fallback","ChatPage","Chat","useSelector","useEffect","Messages","memo","scrol","setScrol","mesAchorRef","useRef","current","scrollIntoView","behavior","onScroll","el","abs","scrollHeight","scrollTop","clientHeight","my","width","height","sms","userName","ref","AddItemForm","mes","setMes","sendMesBlock","sendMess","MessagesContainer","lazy","ProfileContainerConnect","App","catchAllUnhandleError","promiseRejectEvent","alert","initializeApp","pathname","path","render","AppContainer","promise","Promise","all","ReactDOM","document","getElementById","createSelector","usersData","pageSize","userIdForDisabled","looading","pril","ADD_POST","DELETE_POST","SET_USER_PROFILE","SET_STATUS","SAVE_PHOTO","postsDataArray","likeCount","massages","setOneProfileAC","getStatusTC","updateStatusAC","updateStatusTC","updatePhotoAC","getState","reject","FOLLOW","UN_FOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","SET_USERID_FOR_DISABLE","TOGGLE_IS_FOLLOW","SEARCH","totalCounter","followAC","unFollowAC","total"],"mappings":"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","file":"static/js/main.14ed0b25.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"app_block__sEMSB\",\"container\":\"app_container__2QXCc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"priloader_block__3gPC2\",\"pril\":\"priloader_pril__2WW1u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"login_block__3_udS\",\"container\":\"login_container__DukJL\",\"rightPart\":\"login_rightPart__1bKCf\",\"pathContainer\":\"login_pathContainer__1weu4\",\"firstText\":\"login_firstText__1ZYqQ\",\"secondText\":\"login_secondText__1g8Fr\",\"oneAdvantage\":\"login_oneAdvantage__1ClLI\",\"icon\":\"login_icon__W7cfQ\",\"description\":\"login_description__Wrkfh\",\"title\":\"login_title__3O8Pr\",\"desc\":\"login_desc__3GLNQ\",\"leftPart\":\"login_leftPart__QqwSH\",\"iconNetwork\":\"login_iconNetwork__2f7lo\",\"welcome\":\"login_welcome__3d5N8\"};","import {messagesAPI} from \"../../DAL/api\";\r\nimport {Dispatch} from \"redux\";\r\nimport {toggleIsFetchingAC} from \"./users-reducer\";\r\n\r\nconst GET_SELECTED_DIALOG = \"GET_SELECTED_DIALOG\"\r\nconst GET_SELECTED_DIALOG_MORE = \"GET_SELECTED_DIALOG_MORE\"\r\nconst GET_USERS_TALKED_WITH = \"GET_USERS_TALKED_WITH\"\r\n//type for Reduces\r\ntype GetSelectedDialogType = {\r\n    type: \"GET_SELECTED_DIALOG\"\r\n    items: any;\r\n}\r\ntype GetSelectedDialogMoreType = {\r\n    type: \"GET_SELECTED_DIALOG_MORE\"\r\n    items: any;\r\n}\r\n\r\ntype GetUsersTalkedWithType = {\r\n    type: \"GET_USERS_TALKED_WITH\"\r\n    usersArray: any;\r\n}\r\n\r\n//type for Action\r\ntype ActionType = GetSelectedDialogType | GetUsersTalkedWithType | GetSelectedDialogMoreType\r\n\r\n//initial State\r\ntype StateType = {\r\n    recipientId: number | null\r\n    messages: any\r\n    users: any\r\n    totalCount: any\r\n}\r\nlet initialState: StateType = {\r\n    recipientId: null,\r\n    messages: null,\r\n    users: null,\r\n    totalCount: null\r\n}\r\n\r\nexport const dialogReducer = (state: StateType = initialState, action: ActionType): StateType => {\r\n    if (state) {\r\n        switch (action.type) {\r\n            case GET_SELECTED_DIALOG:\r\n                /*let oldMessages = {...state}\r\n                if (state.messages !== null) {\r\n                    return {\r\n                        ...state,\r\n                        messages: action.items.concat(oldMessages.messages)\r\n                    }\r\n                } else */\r\n                return {\r\n                    ...state,\r\n                    messages: action.items.items,\r\n                    totalCount: action.items.totalCount\r\n                }\r\n            case GET_SELECTED_DIALOG_MORE:\r\n                let oldMessages = {...state}\r\n\r\n                return {\r\n                    ...state,\r\n                    messages: action.items.items.concat(oldMessages.messages),\r\n                    totalCount: action.items.totalCount\r\n\r\n                }\r\n            case GET_USERS_TALKED_WITH:\r\n                return {\r\n                    ...state,\r\n                    users: action.usersArray\r\n                }\r\n\r\n            default:\r\n                return state;\r\n        }\r\n    } else return state\r\n}\r\n\r\n\r\n//Thunk Creator\r\n// получить с сервера список сообщений с выбранным пользователем\r\nexport const getSelectedDialogTC = (id: any, currentPages: any, pagesize: any) => async (dispatch: Dispatch) => {\r\n    dispatch(toggleIsFetchingAC(true))\r\n\r\n    let response = await messagesAPI.getSelectedDialog(id, currentPages, pagesize)\r\n    if (currentPages === 1) {\r\n        dispatch(getSelectedDialogAC(response));\r\n    } else {\r\n        dispatch(getSelectedDialogMoreAC(response));\r\n    }\r\n    dispatch(toggleIsFetchingAC(false))\r\n\r\n}\r\n// отправить сообщение на сервер\r\nexport const senMessageTC = (userId: any, body: string) => async (dispatch: any) => {\r\n    dispatch(toggleIsFetchingAC(true))\r\n\r\n    let response = await messagesAPI.sendMessage(userId, body)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getSelectedDialogTC(userId, 1, 20))\r\n    }\r\n    dispatch(toggleIsFetchingAC(false))\r\n\r\n}\r\n// получить список пользователей с кем общался\r\nexport const getUsersTalkedWithTC = () => async (dispatch: Dispatch) => {\r\n    dispatch(toggleIsFetchingAC(true))\r\n\r\n    let response = await messagesAPI.getUsersTalkedWith()\r\n    dispatch(getUsersTalkedWithAC(response));\r\n    dispatch(toggleIsFetchingAC(false))\r\n\r\n\r\n}\r\n\r\n// Action Creator\r\nexport const getSelectedDialogAC = (items: any): GetSelectedDialogType => ({\r\n    type: GET_SELECTED_DIALOG,\r\n    items: items\r\n})\r\n\r\n\r\nexport const getSelectedDialogMoreAC = (items: any): GetSelectedDialogMoreType => ({\r\n    type: GET_SELECTED_DIALOG_MORE,\r\n    items: items\r\n})\r\nexport const getUsersTalkedWithAC = (users: any): GetUsersTalkedWithType => ({\r\n    type: GET_USERS_TALKED_WITH,\r\n    usersArray: users\r\n})\r\n\r\n\r\n\r\n\r\n","import axios from \"axios\";\r\n\r\n\r\nconst instanse = axios.create({\r\n    withCredentials: true,\r\n    headers: {\r\n       \"API-KEY\": \"603ef8c0-4933-4294-ab5f-b170d3ebe6d8\"\r\n       //  \"API-KEY\": \"48cd781d-ab35-4a63-97ba-b184f71ed662\"\r\n    },\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/'\r\n})\r\n\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPages: any, pagesize: any,friend: any, term: any) {\r\n        return (\r\n            instanse.get(`users?page=${currentPages}&count=${pagesize}&friend=${friend}&term=${term}`, {})\r\n                .then(response => response.data)\r\n        )\r\n    },\r\n\r\n    follow(id: any) {\r\n        return (\r\n            instanse.post(`follow/${id}`, {}, {})\r\n                .then(response => response.data)\r\n        )\r\n    },\r\n    getProfile(id: any) {\r\n        return profileAPI.getProfile(id)\r\n    },\r\n    unFollow(id: any) {\r\n        return (\r\n            instanse.delete(`follow/${id}`, {})\r\n                .then(response => response.data)\r\n        )\r\n    }\r\n\r\n}\r\nexport const profileAPI = {\r\n    getProfile(id: any) {\r\n        return (\r\n            instanse.get(`profile/${id}`)\r\n        )\r\n    },\r\n    getStatus(userID: any) {\r\n        return (\r\n            instanse.get(`/profile/status/${userID}`)\r\n        )\r\n    },\r\n    updateStatus(statusText: string) {\r\n        return (\r\n            instanse.put(`/profile/status`, {status: statusText})\r\n        )\r\n    },\r\n    updatePhoto(file: any) {\r\n        let formData = new FormData();\r\n        formData.append(\"image\", file)\r\n        return (instanse.put(`profile/photo`, formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            })\r\n        )\r\n    },\r\n    updateInfoProfile(profile: any) {\r\n        return instanse.put(`/profile`, profile)\r\n    }\r\n}\r\nexport const authorizationAPI = {\r\n    me() {\r\n        return (\r\n            instanse.get(`auth/me`, {})\r\n        )\r\n    },\r\n    login(email: string, password: string, rememberMe: boolean = false, captcha: any) {\r\n        return (\r\n            instanse.post(`auth/login`, {email, password, rememberMe, captcha}, {})\r\n\r\n        )\r\n    },\r\n    logout() {\r\n        return (\r\n            instanse.delete(`auth/login`, {})\r\n        )\r\n    }\r\n}\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return (\r\n            instanse.get(`security/get-captcha-url`)\r\n        )\r\n    }\r\n}\r\nexport const messagesAPI = {\r\n    getSelectedDialog(userId: any,currentPages: any, pagesize: any ) {\r\n        return (\r\n            instanse.get(`dialogs/${userId}/messages?page=${currentPages}&count=${pagesize}`, {})\r\n                .then(response => response.data)\r\n        )\r\n    },\r\n    sendMessage(userId: any, body: string) {\r\n        return (\r\n            instanse.post(`dialogs/${userId}/messages`, {body}, {})\r\n        )\r\n    },\r\n    getUsersTalkedWith() {\r\n        return (\r\n            instanse.get(`dialogs`, {})\r\n                .then(response => response.data)\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport style from './forms.module.css'\r\nimport {Field} from \"redux-form\";\r\n\r\nexport const Textarea = ({input, meta, ...props}: any) => {\r\n    const hasError = meta.touched && meta.error\r\n    return <div className={style.formControl + \" \" + (hasError ? style.error : \"\")}>\r\n        <textarea {...input} {...props}/>\r\n        <div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    </div>\r\n}\r\nexport const Input = ({input, meta, ...props}: any) => {\r\n    const hasError = meta.touched && meta.error\r\n    return <div className={style.formControl + \" \" + (hasError ? style.error : \"\")}>\r\n        <input {...input} {...props}/>\r\n        <div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    </div>\r\n}\r\nexport const Form = ({input, meta, el, ...props}: any) => {\r\n    const hasError = meta.touched && meta.error\r\n    return <div className={style.formControl + \" \" + (hasError ? style.error : \"\")}>\r\n        <props.el {...input} {...props}/>\r\n        <div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport const createFormField = (placeholder: any, name: any, validator: any, component: any, props = {}, text = \"\") => (\r\n    <>\r\n        <Field placeholder={placeholder}\r\n               name={name}\r\n               validate={validator}\r\n               component={component}\r\n               {...props}/> {text}\r\n    </>\r\n)\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainInfo\":\"contacts-edit-form_mainInfo__1PkIp\",\"photoChangeBlock\":\"contacts-edit-form_photoChangeBlock__23qiP\",\"photo\":\"contacts-edit-form_photo__snaVO\",\"customfileupload\":\"contacts-edit-form_customfileupload__30MSl\",\"inputFile\":\"contacts-edit-form_inputFile__Tj80A\",\"formContainer\":\"contacts-edit-form_formContainer__3s-7o\",\"editName\":\"contacts-edit-form_editName__1qe7z\",\"title\":\"contacts-edit-form_title__3g0JI\",\"input\":\"contacts-edit-form_input__1LD_L\",\"editContacts\":\"contacts-edit-form_editContacts__2iBK9\",\"contacts\":\"contacts-edit-form_contacts__3yY_Q\",\"contact\":\"contacts-edit-form_contact__Obgae\",\"btn\":\"contacts-edit-form_btn__2Y2jU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"nav_block__1GB-e\",\"iconMenu\":\"nav_iconMenu__2CJ9I\",\"container\":\"nav_container__2NfBV\",\"menu\":\"nav_menu__u0sDu\",\"item\":\"nav_item__2Fqq1\",\"logOut\":\"nav_logOut__3ORVn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formContainer\":\"aboutMe-edit-form_formContainer__3zhRl\",\"editBlock\":\"aboutMe-edit-form_editBlock__2paPj\",\"item1\":\"aboutMe-edit-form_item1__bI0uV\",\"input\":\"aboutMe-edit-form_input__22S9P\",\"item2\":\"aboutMe-edit-form_item2__8RpbT\",\"btn\":\"aboutMe-edit-form_btn__ktBa9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginForm\":\"login-form_loginForm__3Nfi0\",\"input\":\"login-form_input__624wX\",\"rememberMe\":\"login-form_rememberMe__2m9Np\",\"checkbox\":\"login-form_checkbox__2xz7W\",\"captcha\":\"login-form_captcha__lzo6i\",\"button\":\"login-form_button__1LSoq\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {authorizationAPI, securityAPI} from \"../../DAL/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nconst SET_USER_DATA = \"SET_USER_DATA\"\r\nconst GET_CAPTCHA = \"CAPTCHA\"\r\n\r\n//type for Reduces\r\ntype SetUserType = {\r\n    type: \"SET_USER_DATA\"\r\n    userId: any,\r\n    email: any,\r\n    login: any,\r\n    isAuthorization: any\r\n}\r\ntype GetCaptchaType = {\r\n    type: \"CAPTCHA\"\r\n    captchaURl: any\r\n}\r\n\r\n\r\n///////type for Action\r\ntype ActionType = SetUserType | GetCaptchaType\r\n\r\n/////initial State\r\ntype AuthorizationStateType = {\r\n    userId: number | null\r\n    email: string | null\r\n    login: boolean | null\r\n    isAuthorization: boolean | null\r\n    captchaURl: any\r\n}\r\n\r\nlet initialState: AuthorizationStateType = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuthorization: false,\r\n    captchaURl: null\r\n}\r\n\r\nexport const AuthorizationReducer = (state: AuthorizationStateType = initialState, action: ActionType): AuthorizationStateType => {\r\n    if (state) {\r\n        switch (action.type) {\r\n            case SET_USER_DATA:\r\n                return {\r\n                    ...state,\r\n                    userId: action.userId,\r\n                    email: action.email,\r\n                    login: action.login,\r\n                    isAuthorization: action.isAuthorization\r\n                }\r\n                case GET_CAPTCHA:\r\n                return {\r\n                    ...state,\r\n                    captchaURl: action.captchaURl\r\n                }\r\n            default:\r\n                return state;\r\n        }\r\n    } else return state\r\n}\r\n//Thunk Creator\r\n// авторизируемся\r\nexport const loginTC = (email: string, password: string, rememberMe: boolean, captcha: any) => async (dispath: any) => {\r\n    let response = await authorizationAPI.login(email, password, rememberMe, captcha)\r\n    // если авт прошла успешно, то выполняем это\r\n    if (response.data.resultCode === 0) {\r\n        dispath(getAuthorizationDataTC())\r\n    }\r\n    else {\r\n        if (response.data.resultCode === 10){\r\n            dispath(getCaptchaTC())\r\n        }\r\n        let errorMessages = response.data.messages.length > 0\r\n            ? response.data.messages[0]\r\n            : \"some error\"\r\n        dispath(stopSubmit(\"Login\", {_error: errorMessages}))\r\n    }\r\n}\r\n//получаем данные о пользователе, который авторизировался\r\nexport const getAuthorizationDataTC = () => async (dispath: Dispatch) => {\r\n    // т к авт прошла успешно, то делаем запрос, от куда берем даные текущего пользователя\r\n    let response = await authorizationAPI.me()\r\n    if (response.data.resultCode === 0) {\r\n        let {id, email, login} = response.data.data\r\n        dispath(setAuthorizationDataAC(id, email, login, true))\r\n    }\r\n}\r\n//делаем запрос на сервер, удаляем свои данные для автаризации\r\nexport const logoutTC = () => async (dispath: Dispatch) => {\r\n    let response = await authorizationAPI.logout()\r\n    if (response.data.resultCode === 0) {\r\n        dispath(setAuthorizationDataAC(null, null, null, false));\r\n    }\r\n}\r\n// делаем запрос на сервер, получаем картинку антибот\r\nexport const getCaptchaTC = () => async (dispath: Dispatch) => {\r\n    let response = await securityAPI.getCaptchaUrl()\r\n    let captchaUrl = response.data.url\r\n    debugger\r\n    dispath(setCaptchaAC(captchaUrl))\r\n}\r\n\r\n//ACTION CREATOR\r\n// меняем данные в в стейте на данные авторизированного пользователя\r\nexport const setAuthorizationDataAC = (userId: number | null, email: string | null, login: string | null, isAuthorization: boolean | null): SetUserType => ({\r\n    type: SET_USER_DATA,\r\n    userId: userId,\r\n    email: email,\r\n    login: login,\r\n    isAuthorization: isAuthorization\r\n})\r\n// добовляем капчу, пришедшую из сервера, в наш стейт\r\nexport const setCaptchaAC = (captchaURl: any): GetCaptchaType => ({\r\n    type: GET_CAPTCHA,\r\n    captchaURl: captchaURl\r\n})","import {getAuthorizationDataTC} from \"./authorization-reducer\";\r\n\r\nconst SET_INITIALIZED = \"SET_INITIALIZED\"\r\n\r\n//type for Reduces\r\ntype InitializedType = {\r\n    type: \"SET_INITIALIZED\"\r\n}\r\n\r\n//type for Action\r\ntype ActionType = InitializedType\r\n\r\n//initial State\r\ntype StateType = {\r\n    initialized: boolean\r\n}\r\nlet initialState: StateType = {\r\n    initialized: false\r\n}\r\n\r\nexport const AppReducer = (state: StateType = initialState, action: ActionType): StateType => {\r\n    if (state) {\r\n        switch (action.type) {\r\n            case SET_INITIALIZED:{\r\n                return {\r\n                    ...state,\r\n                    initialized: true\r\n                }\r\n            }\r\n            default:\r\n                return state;\r\n        }\r\n    }\r\n    else return state\r\n}\r\n\r\n//Thunk Creator\r\nexport const initializeTC = () => (dispath: any) => {\r\n   let promise= dispath(getAuthorizationDataTC());\r\n    Promise.all([promise]).then(()=>{\r\n        dispath(initializedSuccessAC());\r\n    })\r\n}\r\n\r\n// Action Creator\r\nexport const initializedSuccessAC = (): InitializedType => ({type: SET_INITIALIZED})\r\n\r\n\r\n","export type MessagesType = {\r\n    message: string\r\n    photo: string\r\n    userId: number\r\n    userName: string\r\n}\r\nexport type StatusType='ready' | \"pending\" | 'error'\r\ntype EventName='message-received'| 'statusChanget'\r\n\r\ntype MessagesReceivedSubscriberType = (mes: MessagesType[]) => void\r\ntype StatusChangedSubscriberType = (st: StatusType) => void\r\n\r\nlet subscribes ={\r\n    'message-received':[]as MessagesReceivedSubscriberType[],\r\n    'statusChanget':[]as StatusChangedSubscriberType[],\r\n}\r\n\r\nlet ws: WebSocket | null = null;\r\n\r\nlet messagesHandler = (e: MessageEvent) => {\r\n    subscribes['message-received'].forEach(s => s(JSON.parse(e.data)))\r\n}\r\nlet openHandler = () => {\r\n    subscribes['statusChanget'].forEach(s=>s('ready'))\r\n}\r\nlet errorHandler = () => {\r\n    subscribes['statusChanget'].forEach(s=>s('error'))\r\n    console.log(\"Error, restart page!\")\r\n}\r\n\r\nconst closeHandler = () => {\r\n    console.log(\"close 23 min\");\r\n    subscribes['statusChanget'].forEach(s=>s('pending'))\r\n    setTimeout(createChanel, 3000)\r\n}\r\n\r\nconst cleanUp=()=>{\r\n    ws?.removeEventListener('close', closeHandler)\r\n    ws?.removeEventListener('message', messagesHandler)\r\n    ws?.removeEventListener('open', openHandler)\r\n    ws?.removeEventListener('error', errorHandler)\r\n\r\n}\r\n\r\nfunction createChanel() {\r\n    cleanUp()\r\n    ws?.close()\r\n    ws = new WebSocket(\"wss://social-network.samuraijs.com/handlers/ChatHandler.ashx\")\r\n    subscribes['statusChanget'].forEach(s=>s('pending'))\r\n    ws.addEventListener('close', closeHandler)\r\n    ws.addEventListener('message', messagesHandler)\r\n    ws.addEventListener('open', openHandler)\r\n    ws.addEventListener('error', errorHandler)\r\n}\r\n\r\nexport const chatAPI = {\r\n    subscribe(event:EventName, callback: MessagesReceivedSubscriberType | StatusChangedSubscriberType) {\r\n        // @ts-ignore\r\n        subscribes[event].push(callback);\r\n        return () => {\r\n            // @ts-ignore\r\n            subscribes[event] = subscribes[event].filter(s => s !== callback)\r\n        }\r\n    },\r\n    unsubscribe(event:EventName,callback: MessagesReceivedSubscriberType | StatusChangedSubscriberType) {\r\n        // @ts-ignore\r\n        subscribes[event] = subscribes[event].filter(s => s !== callback)\r\n    },\r\n    sendMessages(message: string) {\r\n        ws?.send(message)\r\n    },\r\n    start() {\r\n        createChanel()\r\n    },\r\n    stop() {\r\n        subscribes['message-received'] = []\r\n        subscribes['statusChanget'] = []\r\n        ws?.close()\r\n        cleanUp()\r\n    },\r\n}\r\n\r\n","import {getAuthorizationDataTC} from \"./authorization-reducer\";\r\nimport {chatAPI, MessagesType, StatusType} from \"../../DAL/chat-api\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nconst SN_CHAT_MESSAGES_RECEVIED = \"SN/CHAT/MESSAGES_RECEVIED\"\r\nconst SN_CHAT_STATUS_CHANGED = \"SN_CHAT_STATUS_CHANGED\"\r\n\r\n//type for Reduces\r\ntype ChatMesType = {\r\n    type: \"SN/CHAT/MESSAGES_RECEVIED\",\r\n    payload: { messages: MessagesType[] }\r\n\r\n}\r\ntype StatusChangetType = {\r\n    type: \"SN_CHAT_STATUS_CHANGED\",\r\n    payload: { status: StatusType}\r\n\r\n}\r\n\r\n//type for Action\r\ntype ActionType = ChatMesType | StatusChangetType\r\n\r\n//initial State\r\ntype StateType = {\r\n    messages: MessagesType[]\r\n    status: StatusType\r\n}\r\nlet initialState: StateType = {\r\n    messages: [] as MessagesType[],\r\n    status: \"pending\"\r\n}\r\n\r\nexport const ChatReducer = (state = initialState, action: ActionType): StateType => {\r\n\r\n    switch (action.type) {\r\n        case SN_CHAT_MESSAGES_RECEVIED:\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, ...action.payload.messages].filter((m, index, arr)=>arr.length-30<=index)\r\n            }\r\n        case SN_CHAT_STATUS_CHANGED:\r\n            return {\r\n                ...state,\r\n                status: action.payload.status\r\n            }\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\n// Action Creator\r\nexport const actions = {\r\n    messagesReceived: (messages: MessagesType[]) => ({\r\n        type: SN_CHAT_MESSAGES_RECEVIED, payload: {messages}\r\n    } as const),\r\n    statusChanged: (status: StatusType) => ({\r\n        type: SN_CHAT_STATUS_CHANGED, payload: {status}\r\n    } as const)\r\n}\r\n\r\n\r\nlet _messagesHandler: ((messages: MessagesType[]) => void) | null = null\r\n\r\nconst newMessageHandler = (dispatch: Dispatch) => {\r\n    if (_messagesHandler === null) {\r\n        _messagesHandler = (messages) => {\r\n            dispatch(actions.messagesReceived(messages))\r\n        }\r\n    }\r\n    return _messagesHandler\r\n}\r\n\r\n\r\nlet _statusChangedHandler: ((st: StatusType) => void) | null = null\r\n\r\nconst statusChengedHandler = (dispatch: Dispatch) => {\r\n    if (_statusChangedHandler === null) {\r\n        _statusChangedHandler = (status:StatusType) => {\r\n            dispatch(actions.statusChanged(status))\r\n        }\r\n    }\r\n    return _statusChangedHandler\r\n}\r\n\r\n//Thunk Creator\r\nexport const startMessagesListening = () => async (dispath: Dispatch) => {\r\n    chatAPI.start()\r\n    chatAPI.subscribe('message-received',newMessageHandler(dispath))\r\n    chatAPI.subscribe('statusChanget',statusChengedHandler(dispath))\r\n}\r\nexport const stopMessagesListening = () => (dispath: Dispatch) => {\r\n    chatAPI.unsubscribe('message-received',newMessageHandler(dispath))\r\n    chatAPI.unsubscribe('statusChanget',statusChengedHandler(dispath))\r\n    chatAPI.stop()\r\n}\r\nexport const sendMessagesThunk = (messages: string) => (dispath: any) => {\r\n    chatAPI.sendMessages(messages)\r\n}\r\n\r\n\r\n\r\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport {ProfileReducer} from \"./Reducers/profile-reducer\";\r\nimport {UsersReducer} from \"./Reducers/users-reducer\";\r\nimport {AuthorizationReducer} from \"./Reducers/authorization-reducer\";\r\nimport thunkMiddlewere from \"redux-thunk\";//thunk as thunkMiddleWere\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport {AppReducer} from \"./Reducers/app-reducer\";\r\nimport {dialogReducer} from \"./Reducers/dialogs-reducer\";\r\nimport {ChatReducer} from \"./Reducers/chat-reducer\";\r\n\r\n\r\nexport const reducers = combineReducers(\r\n    {\r\n        profile: ProfileReducer,\r\n        dialog: dialogReducer,\r\n        usersPage: UsersReducer,\r\n        auth: AuthorizationReducer,\r\n        form: formReducer,\r\n        app: AppReducer,\r\n        chat: ChatReducer\r\n    }\r\n)\r\n\r\nexport type StoreStateType = ReturnType<typeof reducers>\r\n\r\nconst composeEnhancers = (window && (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\nexport const store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddlewere)));\r\n\r\n// @ts-ignore\r\nwindow.store = store\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport s from \"./nav.module.scss\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {logoutTC} from \"../../BLL/Reducers/authorization-reducer\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {AiOutlineUser, AiOutlineWechat} from \"react-icons/ai\";\r\nimport {AiOutlineMessage} from \"react-icons/ai\";\r\nimport {AiOutlineTeam} from \"react-icons/ai\";\r\nimport {AiOutlineSetting} from \"react-icons/ai\";\r\nimport {FiMenu} from \"react-icons/all\";\r\n\r\n\r\nexport const Nav = () => {\r\n    const dispatch = useDispatch()\r\n    const logOut = () => {\r\n        dispatch(logoutTC())\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.block}>\r\n\r\n            <div className={s.iconMenu}>\r\n                <FiMenu/>\r\n            </div>\r\n            <div className={s.container}>\r\n                <div className={s.menu}>\r\n                    <div className={s.item}>\r\n                        <NavLink to=\"/profile\" className={s.buttonItem}>\r\n                            <AiOutlineUser/>\r\n\r\n                        </NavLink>\r\n                    </div>\r\n                    <div className={s.item}>\r\n                        <NavLink to=\"/messages\" className={s.buttonItem}>\r\n                            <AiOutlineMessage/>\r\n                        </NavLink>\r\n                    </div>\r\n                    <div className={s.item}>\r\n                        <NavLink to=\"/users\" className={s.buttonItem}>\r\n                            <AiOutlineTeam/>\r\n                        </NavLink>\r\n                    </div>\r\n                    <div className={s.item}>\r\n                        <NavLink to=\"/setting\" className={s.buttonItem}>\r\n                            <AiOutlineSetting/>\r\n                        </NavLink>\r\n                    </div>\r\n                    <div className={s.item}>\r\n                        <NavLink to=\"/messages/chat\" className={s.buttonItem}>\r\n                            <AiOutlineWechat/>\r\n                        </NavLink>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n                <NavLink to=\"/login\" className={s.logOut} onClick={() => logOut()}>\r\n                    LogOut\r\n                </NavLink>\r\n            </div>\r\n        </div>)\r\n}","import React from 'react'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport s from \"./login-form.module.scss\";\r\nimport {maxLength, requiredField} from \"../utils/validators/validators\";\r\nimport {createFormField, Input} from \"../Common/forms-control/FormsControl\";\r\n\r\nconst maxLengthValidator = maxLength(50)\r\n\r\nconst LoginForm = ({handleSubmit, error, x}: any) => {\r\n    return (\r\n        /*        В пропсах теперь нам очень много всего приходит после оборачивания компоненты с формой в HOC.\r\n                В т.ч. метод handleSubmit, который позволяет не перезагружать страницу при отправке.*/\r\n        <form onSubmit={handleSubmit} className={s.loginForm}>\r\n            <Field placeholder={\"Email\"}\r\n                   component={Input}\r\n                   name={\"email\"}\r\n                   validate={[requiredField, maxLengthValidator]}\r\n                   props={{className: s.input}}/>\r\n            {/*Все поля в форме меняем на компоненты Field, которые пришли к нам из библиотеки, с указанием component аналогично пропсам*/}\r\n            <Field placeholder={\"Password\"}\r\n                   component={Input}\r\n                   name={\"password\"}\r\n                   validate={[requiredField, maxLengthValidator]}\r\n                   props={{className: s.input}}/>\r\n            <div className={s.rememberMe}>\r\n                <Field type={\"checkbox\"}\r\n                       component={Input}\r\n                       name={\"rememberMe\"}\r\n                       validate={[maxLengthValidator]}\r\n                       props={{className: s.checkbox}}/> Remember\r\n            </div>\r\n            {x && <img className={s.captcha} src={x} alt={\"\"}/>}\r\n\r\n            {x && createFormField(\"captcha URl\", \"captcha\", [], Input, {className: s.input})}\r\n\r\n            {error && <div className={s.formSunnierError}>\r\n                {error}\r\n            </div>}\r\n\r\n            <button className={s.button} type='submit'>Login</button>\r\n\r\n        </form>\r\n\r\n    )\r\n}\r\n//присвоили уникальное имя нашей новой форме в параметре – {form: 'login'}\r\nexport const LoginReduxForm: any = reduxForm({\r\n    form: 'Login'\r\n})(LoginForm)\r\n\r\n// Теперь при вводе текста в форме в нашем стейте появляется временный объект login (имя нашей формы),\r\n// который содержит много объектов, свойствами которых являются наши поля (берутся по name).\r\n// Среди них объекты «было ли посещено поле», «было ли тронуто» и т.д.\r\n//     А также объект values, где в свойства (берутся по name) попадает вводимый текст.\r\n// можно вывести в консоль и посмотреть параметры, потом их использовать","import {StoreStateType} from \"../../BLL/store\";\r\nimport {loginTC} from \"../../BLL/Reducers/authorization-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {Login} from \"./login\";\r\n\r\nconst mapStateToProps = (state: StoreStateType) => ({\r\n    isAuth: state.auth.isAuthorization,\r\n    captcha: state.auth.captchaURl\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n    return {\r\n        login: (email: string, password: string, rememberMe: boolean, captcha: any) => {\r\n            dispatch(loginTC(email, password, rememberMe, captcha))\r\n        }\r\n    }\r\n}\r\n\r\nexport const LoginContainer = connect(\r\n    mapStateToProps, mapDispatchToProps)(Login)","import React from 'react'\r\nimport s from \"./login.module.scss\"\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {LoginReduxForm} from \"./login-form\";\r\nimport {AiOutlineShopping, CgWorkAlt, MdComputer} from \"react-icons/all\";\r\n\r\nexport const Login = (props:any) => {\r\n/*    в месте вызова нашей компоненты с окончательной «редаксовской формой» теперь нужно повесить\r\n    произвольную функцию через onSubmit, которая соберет данные из полей из полей и обработает их при нажатии на кнопку:*/\r\n    const onSubmit = (formData: any) => {\r\n        console.log(formData)//здесь мы получаем данные с формы и будем из диспатчить потом\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha)\r\n        // dispatch(reset(\"profileAddPostForm\")) для очистки полей в форме, в кавычках имя формы\r\n    }\r\n    if (props.isAuth) return <Redirect to={\"/profile\"}/>\r\n\r\n    return (\r\n        <div className={s.block}>\r\n            <div className={s.container}>\r\n                <div className={s.rightPart}>\r\n                    <div className={s.pathContainer}>\r\n                        <div className={s.firstText}>Join the club</div>\r\n                        <div className={s.secondText}>Lorem ipsum dolor sit amet,\r\n                            consectetur adipiscing elit. Ut elit tellus, luctus.\r\n                        </div>\r\n                        <div className={s.oneAdvantage}>\r\n                            <div className={s.icon}> <MdComputer/></div>\r\n                            <div className={s.description}>\r\n                                <div className={s.title}>Community</div>\r\n                                <div className={s.desc}>At vero eos et accusamus et.</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className={s.oneAdvantage}>\r\n                            <div className={s.icon}><AiOutlineShopping/></div>\r\n                            <div className={s.description}>\r\n                                <div className={s.title}>Online shop</div>\r\n                                <div className={s.desc}>At vero eos et accusamus et.</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className={s.oneAdvantage}>\r\n                            <div className={s.icon}> <CgWorkAlt/></div>\r\n                            <div className={s.description}>\r\n                                <div className={s.title}>Job search</div>\r\n                                <div className={s.desc}>At vero eos et accusamus et.</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={s.leftPart}>\r\n                    <div className={s.pathContainer}>\r\n                        <img  className={s.iconNetwork} src={\"https://mythemestore.com/beehive-preview/wp-content/uploads/2020/07/logo-icon.svg\"} alt={\"\"}/>\r\n                        <div className={s.welcome}>Welcome</div>\r\n                        <LoginReduxForm onSubmit={onSubmit} x={props.captcha}/>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n","import s from \"./one-user.module.scss\";\r\nimport no_image from \"../../assets/img/no_image.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {AiOutlineUserAdd, AiOutlineUserDelete} from \"react-icons/all\";\r\nimport {AiOutlineMail} from \"react-icons/ai\";\r\n\r\nexport const OneUser = (props: any) => {\r\n    const user = props.user;\r\n    return (\r\n        <div className={s.oneFriendContainer}>\r\n            <img className={s.photo}\r\n                 src={user.photos.small != null ? user.photos.small : no_image} alt={\"\"}/>\r\n\r\n            <div className={s.name}>{user.name}</div>\r\n            <div className={s.btn}>\r\n                {user.followed\r\n                    ?//arr.some возвращает true, если хотя бы для одного элемента массива условие верно\r\n                    //при раздизабл. кнопки к нам прихоидот пустой массив\r\n                    <button className={s.item}\r\n                            disabled={props.IsFollowingProgress.some((id: any) => id === user.id)}\r\n                            onClick={() => {\r\n                                props.unfollow(user.id)\r\n                            }\r\n                            }><AiOutlineUserDelete/></button>\r\n                    :\r\n                    <button className={s.item}\r\n                            disabled={props.IsFollowingProgress.some((id: any) => id === user.id)}\r\n                            onClick={() => {\r\n                                props.follower(user.id)\r\n                            }\r\n                            }><AiOutlineUserAdd/></button>}\r\n                <NavLink to={'/messages/' + user.id} className={s.item}>\r\n                    <AiOutlineMail/>\r\n                </NavLink>\r\n            </div>\r\n            <NavLink className={s.viewProfileBtn} to={'/profile/' + user.id}>\r\n                view profile\r\n            </NavLink>\r\n        </div>\r\n\r\n    )\r\n}","import React, {useState} from 'react';\r\nimport s from \"./Paginator.module.scss\"\r\nimport {GrNext, GrPrevious} from \"react-icons/all\";\r\n\r\ntype PaginatorPropsType = {\r\n    pagesize: number\r\n    totalItemsCount: number\r\n    onPageChanget: (x: any) => void\r\n    currentPages: number\r\n}\r\nexport const Paginator = (props: PaginatorPropsType) => {\r\n    let portionSize = 10;\r\n    let pagesCount = Math.ceil(props.totalItemsCount / props.pagesize)\r\n    let pages = []\r\n\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize)\r\n    let [portionNumber, setPortionNumber] = useState(1)\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n    let rightPortionPageNumber = portionNumber * portionSize\r\n\r\n\r\n    return (\r\n        <div className={s.block}>\r\n            {portionNumber > 1 &&\r\n            <div className={s.btn}\r\n                 onClick={() => {\r\n                     setPortionNumber(portionNumber - 1)\r\n                 }}><GrPrevious/>\r\n            </div>}\r\n            {pages\r\n                .filter(x => x >= leftPortionPageNumber && x <= rightPortionPageNumber)\r\n                .map(x => {\r\n                    return <div className={props.currentPages === x ? s.selectPage : s.page}\r\n                                key={x}\r\n                                onClick={(e) => {\r\n                                    props.onPageChanget(x)\r\n                                }}>{x}</div>\r\n                })}\r\n            {portionCount > portionNumber &&\r\n            <div  className={s.btn} onClick={() => {\r\n                setPortionNumber(portionNumber + 1)\r\n            }}><GrNext/></div>}\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport s from \"./users.module.scss\"\r\nimport {OneUsersType} from \"../../BLL/Reducers/users-reducer\";\r\nimport {OneUser} from \"./one-user/oneUser\";\r\nimport {Paginator} from \"./paginator/Paginator\";\r\n\r\nexport const Users = (props:any) => {\r\n\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pagesize)\r\n    let pages = []\r\n\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    return (\r\n        <div className={s.block}>\r\n            {/*посмотреть друзей*/}\r\n            <div className={s.container}>\r\n\r\n                <div className={s.search}>\r\n                    <input className={s.inp}\r\n    placeholder={\"Search Members\"} value={props.search} onChange={(event) => {\r\n    props.searchAC(event.currentTarget.value)\r\n}}/>\r\n                    <button onClick={()=>{props.FiendsAC(true)}}>show frind</button>\r\n                    <button onClick={()=>{props.FiendsAC(false)}}>show all user</button>\r\n                </div>\r\n                <div className={s.userBlock}>\r\n                    {props.users.map((user: OneUsersType) =>\r\n                        <OneUser user={user}\r\n                                 unfollow={props.unfollow}\r\n                                 IsFollowingProgress={props.IsFollowingProgress}\r\n                                 follower={props.follower}\r\n                                 key={user.id}\r\n                        />\r\n                    )\r\n                    }\r\n                </div>\r\n                <div className={s.paginator}>\r\n                    <Paginator pagesize={props.pagesize}\r\n                               totalItemsCount={props.totalUsersCount}\r\n                               onPageChanget={props.onPageChanget}\r\n                               currentPages={props.currentPages}/>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    followTC, getUsersTC, toggleFollowAC,\r\n    setCurrentPageAC, toggleIsFetchingAC, setUserIdForDisabledAC,\r\n    setTotalUsersCountAC,\r\n    setUsersAC,\r\n    unFollowTC,\r\n    OneUsersType, searchAC\r\n} from \"../../BLL/Reducers/users-reducer\";\r\nimport {StoreStateType} from \"../../BLL/store\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPages,\r\n    getIsFetching,\r\n    getIsFollowingProgress,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsersCreateSelector\r\n} from \"../../BLL/users-selectors\";\r\nimport {Users} from \"./users\";\r\nimport {Preloader} from \"../Common/preloader/Preloader\";\r\n\r\n\r\nexport type MapStateToPropsType = {\r\n    users: OneUsersType[]\r\n    pagesize: number\r\n    totalUsersCount: number\r\n    currentPages: number\r\n    isFetching: boolean\r\n    IsFollowingProgress:boolean\r\n    isFollow: boolean\r\n    search: string\r\n}\r\nexport type MapDispatchTopropsType = {\r\n    follower: (id: number) => void\r\n    unfollow: (id: number) => void\r\n    setUsers: (x: []) => void\r\n    SetCurrentPage: (x: number) => void\r\n    setTotalUsersCount: (x: number) => void\r\n    toogleIsFetching: (x: boolean) => void\r\n    setIsFollowingProgress: any\r\n    getUsersThunk: any\r\n    FiendsAC:any\r\n    searchAC:any\r\n}\r\n\r\n\r\n\r\nclass UsersAPI extends React.Component<MapDispatchTopropsType & MapStateToPropsType, any> {\r\n    componentDidMount() {\r\n\r\n        this.props.getUsersThunk(this.props.currentPages, this.props.pagesize, this.props.isFollow, this.props.search)\r\n\r\n    }\r\n    componentDidUpdate(prevProps: Readonly<MapDispatchTopropsType & MapStateToPropsType>, prevState: Readonly<any>, snapshot?: any) {\r\n        if(this.props.search!==prevProps.search || this.props.isFollow!== prevProps.isFollow)\r\n            this.props.getUsersThunk(this.props.currentPages, this.props.pagesize, this.props.isFollow,this.props.search)\r\n\r\n    }\r\n\r\n    onPageChanget = (pageNumber: number) => {\r\n        this.props.getUsersThunk(pageNumber, this.props.pagesize,  this.props.isFollow,this.props.search)\r\n        this.props.SetCurrentPage(pageNumber);\r\n    }\r\n\r\n    render() {\r\n        /*if(this.props.isFetching){\r\n          return  <Preloader/>\r\n        }else */ return <>\r\n            <Users users={this.props.users}\r\n                   totalUsersCount={this.props.totalUsersCount}\r\n                   currentPages={this.props.currentPages}\r\n                   pagesize={this.props.pagesize}\r\n                   follower={this.props.follower}\r\n                   unfollow={this.props.unfollow}\r\n                   onPageChanget={this.onPageChanget}\r\n                   IsFollowingProgress={this.props.IsFollowingProgress}\r\n                   setIsFollowingProgress={this.props.setIsFollowingProgress}\r\n                   isFollow={this.props.isFollow}\r\n                   FiendsAC={this.props.FiendsAC}\r\n                   search={this.props.search}\r\n                   searchAC={this.props.searchAC}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: StoreStateType): MapStateToPropsType => {\r\n\r\n    return {\r\n        users: getUsersCreateSelector(state),\r\n        pagesize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPages: getCurrentPages(state),\r\n        isFetching: getIsFetching(state),\r\n        IsFollowingProgress: getIsFollowingProgress(state),\r\n        isFollow: state.usersPage.isFollow,\r\n        search: state.usersPage.search\r\n    }\r\n}\r\n\r\nexport const UsersContainer:any = compose(/*WithAuthRedirect,*/connect(mapStateToProps, {\r\n\r\n    follower:followTC,\r\n    unfollow: unFollowTC,\r\n    setUsers:setUsersAC,\r\n    SetCurrentPage:setCurrentPageAC,\r\n    setTotalUsersCount: setTotalUsersCountAC,\r\n    setIsFollowingProgress: setUserIdForDisabledAC,\r\n    toogleIsFetching:toggleIsFetchingAC,\r\n    getUsersThunk: getUsersTC,\r\n    FiendsAC: toggleFollowAC,\r\n    searchAC: searchAC\r\n    //getUsersThunk: getFriendsThunkCreater\r\n}))(UsersAPI)\r\n\r\n\r\n","import React from 'react';\r\nimport s from \"./header.module.scss\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport const Header = (props: any) => {\r\n    return (\r\n        <div className={s.block}>\r\n            <div className={s.icon}>\r\n                <img className={s.iconNetwork}\r\n                     src={\"https://mythemestore.com/beehive-preview/wp-content/uploads/2020/07/logo-icon.svg\"} alt={\"\"}/>\r\n            </div>\r\n            <div className={s.container}>\r\n                {props.isAuthorization\r\n                    ? <div className={s.info}>\r\n                        <div className={s.name}>\r\n                            {props.login}\r\n                        </div>\r\n                    </div>\r\n                    : <></>}\r\n                <div className={s.unLog}>\r\n                    {props.isAuthorization\r\n                        ? <NavLink to=\"/login\" className={s.btn} onClick={props.logOut}>\r\n                            LogOut\r\n                        </NavLink>\r\n                        : <></>}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {StoreStateType} from \"../../BLL/store\";\r\nimport {logoutTC} from \"../../BLL/Reducers/authorization-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {Header} from \"./header\";\r\n\r\nclass HeaderContainerConnect extends React.Component<any, any> {\r\n    refreshHeader(){\r\n        window.location.reload();\r\n    }\r\n    componentDidMount() {\r\n\r\n    }\r\n    componentDidUpdate(prevProps: Readonly<any>, prevState: Readonly<any>, snapshot?: any) {\r\n        if(this.props.isAuthorization !==prevProps.isAuthorization )\r\n            this.refreshHeader()\r\n    }\r\n    render() {\r\n        return (\r\n            <Header login={this.props.login} isAuthorization={this.props.isAuthorization} logOut={this.props.logOut}/>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: StoreStateType) => ({\r\n    isAuthorization: state.auth.isAuthorization,\r\n    login: state.auth.login\r\n})\r\nlet mapDispatchToProps = (dispatch: any) => {\r\n    return {\r\n        logOut: () => {\r\n            dispatch(logoutTC())\r\n        }\r\n    }\r\n}\r\nexport const HeaderContainer = connect(mapStateToProps, mapDispatchToProps)(HeaderContainerConnect)","import s from \"./aboutMe-edit-form.module.scss\"\r\nimport {reduxForm} from \"redux-form\";\r\nimport React from \"react\";\r\nimport {createFormField, Input, Textarea} from \"../../Common/forms-control/FormsControl\";\r\n\r\n\r\nconst AboutMeEdit = ({handleSubmit, profile, error}: any) => {\r\n    return (\r\n        <form onSubmit={handleSubmit} className={s.formContainer}>\r\n            {error && <div className={s.formSunnierError}>\r\n                {error}\r\n            </div>}\r\n\r\n            <div className={s.editBlock}>\r\n                <div className={s.item1}>\r\n                    <h4>looking for a job: </h4>{createFormField(\"\", \"lookingForAJob\", [], Input, {type: \"checkbox\",  className: s.input })}\r\n                </div>\r\n\r\n                <div className={s.item2}>\r\n                    <h4>I can: </h4>\r\n                    {createFormField(\"skils\", \"lookingForAJobDescription\", [], Textarea, {  className: s.input })}\r\n                </div>\r\n                <div className={s.item2}>\r\n                    <h4>About me: </h4>\r\n                    {createFormField(\"About me\", \"aboutMe\", [], Textarea, {  className: s.input })}\r\n\r\n                </div>\r\n            </div>\r\n            <button className={s.btn}>save</button>\r\n        </form>\r\n    )\r\n}\r\nexport const AboutMeEditForm: any = reduxForm({form: 'editProfileAbout'})(AboutMeEdit)","import s from \"./contacts-edit-form.module.scss\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport React from \"react\";\r\nimport no_image from \"../../assets/img/no_image.png\";\r\nimport {createFormField, Input} from \"../../Common/forms-control/FormsControl\";\r\n\r\n export const MainEdit=(props: any)=>{\r\n     const updatePhoto = (e: any/*: ChangeEvent<HTMLInputElement>*/) => {\r\n         if (e.target.files.length) {\r\n             props.updatePhoto(e.target.files[0])\r\n         }\r\n     }\r\n//отправка данных с формы на сервер через санку. когда данные отправились, то меняемм  режим редактирования\r\n     const onSubmit = (formData: any) => {\r\n         props.updateInfoProfile(formData)\r\n             /*.then(() => {\r\n                 setEditMode(false);\r\n             })*/\r\n     }\r\n     return(\r\n         <div className={s.mainInfo}>\r\n             <div className={s.photoChangeBlock}>\r\n                 {props.profile.photos.large === null\r\n                     ? <img className={s.photo} src={no_image} alt={\"\"}/>\r\n                     : <img className={s.photo} src={props.profile.photos.large} alt={\"\"}/>}\r\n                 <label htmlFor=\"file-upload\" className={s.customfileupload} onChange={updatePhoto}>\r\n                     <input className={s.inputFile} id=\"file-upload\" type=\"file\"/>\r\n                     Upgrade photo\r\n                 </label>\r\n             </div>\r\n             <ContactsEditForm onSubmit={onSubmit} initialValues={props.profile}\r\n                               profile={props.profile}/>\r\n         </div>\r\n     )\r\n\r\n }\r\n\r\n\r\n\r\nconst ContactsEdit = ({handleSubmit, profile, error}: any) => {\r\n    return (\r\n        <form onSubmit={handleSubmit} className={s.formContainer}>\r\n            {error && <div className={s.formSunnierError}>\r\n                {error}\r\n            </div>}\r\n            <div className={s.editName}>\r\n                <div className={s.title}>FullName: </div>\r\n                {createFormField(\"\", \"fullName\", [], Input, {  className: s.input })}\r\n\r\n            </div>\r\n            <div className={s.editContacts}>\r\n                <h4>Contacts</h4>\r\n                <div className={s.contacts} >\r\n                    {Object.keys(profile.contacts).map(key => {\r\n                            return <div key={key} className={s.contact}>\r\n                                <div className={s.title}>{key}:</div>\r\n                                {createFormField(\"\", \"contacts.\" + key, [], Input, {  className: s.input })}\r\n                            </div>\r\n                        }\r\n                    )}\r\n                </div>\r\n            </div>\r\n            <button className={s.btn}>save</button>\r\n        </form>\r\n    )\r\n}\r\n const ContactsEditForm: any = reduxForm({form: 'editProfileContacts'})(ContactsEdit)","import React, {useState} from 'react'\r\nimport s from \"./setting.module.scss\"\r\nimport {AboutMeEditForm} from \"./aboutMe-edit-form/aboutMe-edit-form\";\r\nimport {MainEdit} from \"./contacts-edit-form/contacts-edit-form\";\r\nimport {Preloader} from \"../Common/preloader/Preloader\";\r\n\r\nexport const Setting = (props: any) => {\r\n    let [x, setX] = useState(true)\r\n    let [y, setY] = useState(false)\r\n// пока профайл не пришел с сервера, показываем загрузку страницы\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n\r\n//отправка данных с формы на сервер через санку. когда данные отправились, то меняемм  режим редактирования\r\n    const onSubmit = (formData: any) => {\r\n        props.updateInfoProfile(formData)\r\n            // .then(() => {\r\n            //     setEditMode(false);\r\n            // })\r\n    }\r\n\r\n    return <div className={s.block}>\r\n        <div className={s.container}>\r\n            <div className={s.editContainer}>\r\n\r\n                {x && <MainEdit profile={props.profile}\r\n                                updateInfoProfile={props.updateInfoProfile}\r\n                                updatePhoto={props.updatePhoto} />\r\n\r\n                }\r\n                {y &&\r\n\r\n                    <AboutMeEditForm onSubmit={onSubmit} initialValues={props.profile}\r\n                                     profile={props.profile}/>\r\n                }\r\n            </div>\r\n            <div className={s.nav}>\r\n                <div className={s.item} onClick={() => {\r\n                    setX(true);\r\n                    setY(false);\r\n                }}>1</div>\r\n                <div className={s.item} onClick={() => {\r\n                    setX(false);\r\n                    setY(true);\r\n                }}>2</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n}\r\n\r\n","import React from \"react\";\r\nimport {StoreStateType} from \"../../BLL/store\";\r\nimport {\r\n    getOneProfileTC,\r\n    updateInfoProfileTC,\r\n    updatePhotoTC,\r\n} from \"../../BLL/Reducers/profile-reducer\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {Setting} from \"./setting\";\r\n\r\n\r\nclass ProfileConteiner extends React.Component<any, any>{\r\n// match из  withRouter  взялся\r\n    refreshProfile(){\r\n        let ownerId =this.props.authorizationUserId\r\n        // если айди не найден, то задаем айди авторизированного пользователя\r\n        if (!ownerId){\r\n            this.props.history.push(\"/login\")\r\n            // если пользователь не авторизирован, то в айди ничего нет и мы редеректемся на страницу логина\r\n\r\n        }\r\n        this.props.getOneProfile(ownerId)\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        this.refreshProfile()\r\n    }\r\n    componentDidUpdate(prevProps: Readonly<any>, prevState: Readonly<any>, snapshot?: any) {\r\n        if(this.props.match.params.userID !==prevProps.match.params.userID )\r\n            this.refreshProfile()\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Setting profile={this.props.profile}\r\n                     ownerId={!this.props.match.params.userID}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}\r\n                     updatePhoto={this.props.updatePhoto}\r\n                     updateInfoProfile={this.props.updateInfoProfile}\r\n                     follower={this.props.follower}/>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToprops=(state:StoreStateType):any=>{\r\n    return{\r\n        profile: state.profile.profile,\r\n        authorizationUserId: state.auth.userId,\r\n        isAuthorization: state.auth.isAuthorization\r\n\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch: any)  => {\r\n    return {\r\n        getOneProfile: (id: number) => {\r\n            dispatch(getOneProfileTC(id))\r\n        },\r\n        updatePhoto: (file: any) => {\r\n            dispatch(updatePhotoTC(file))\r\n        },\r\n        updateInfoProfile: (profile: any) => {\r\n            dispatch(updateInfoProfileTC(profile))\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst SettingContainer:any= compose(\r\n    connect (mapStateToprops,mapDispatchToProps)\r\n    ,withRouter\r\n)(ProfileConteiner)\r\nexport default SettingContainer","import React from \"react\";\r\nimport {Preloader} from \"../Common/preloader/Preloader\";\r\n\r\n\r\nexport const WithSuspenseHOC=(Component:any)=>{\r\n\r\n   return(props: any)=>{\r\n       return <React.Suspense fallback={<Preloader/>}>\r\n           <Component{...props}/>\r\n       </React.Suspense>\r\n   }\r\n\r\n}","import s from \"./chat.module.scss\";\r\nimport React, {useEffect, useRef, useState} from \"react\";\r\nimport {MessagesType} from \"../../DAL/chat-api\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {sendMessagesThunk, startMessagesListening, stopMessagesListening} from \"../../BLL/Reducers/chat-reducer\";\r\nimport {StoreStateType} from \"../../BLL/store\";\r\nimport {FiSend} from \"react-icons/all\";\r\n\r\n\r\nexport const ChatPage = () => {\r\n    return (\r\n        <Chat/>\r\n    )\r\n}\r\nexport const Chat = () => {\r\n    const status = useSelector((state: StoreStateType) => state.chat.status)\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(startMessagesListening())\r\n        return () => {\r\n            dispatch(stopMessagesListening())\r\n        }\r\n    }, [])\r\n    return (<div className={s.block}>\r\n            <div className={s.container}>\r\n                {status===\"error\"? <h3>error</h3>: <></>}\r\n                <Messages/>\r\n                <AddItemForm/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\ntype wsChanaleType = {\r\n    wsChanale: WebSocket | null\r\n}\r\n\r\nconst Messages = React.memo(() => {\r\n    console.log(\"render mes\")\r\n    const messages = useSelector((state: StoreStateType) => state.chat.messages)\r\n    const [ scrol, setScrol]=useState(true)\r\n    const mesAchorRef=useRef<HTMLDivElement>(null);\r\n    const scrollHandler=(e: React.UIEvent<HTMLDivElement, UIEvent>)=>{\r\n        const el= e.currentTarget;\r\n        if(Math.abs((el.scrollHeight-el.scrollTop)-el.clientHeight)<300)\r\n        {\r\n            !scrol && setScrol(true)\r\n        }\r\n        else {            scrol && setScrol(false)\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(scrol) {mesAchorRef.current?.scrollIntoView({behavior:'smooth'})}\r\n    },[messages])\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className={s.chat}  onScroll={scrollHandler}>\r\n            {messages.map((m, index) =><>\r\n                <div   className={s.my}>\r\n                    <img src={m.photo} width={\"50px\"} height={\"50px\"}/>\r\n                    <div className={s.sms}>\r\n                        <b>{m.userName}</b>\r\n                        <p className={s.sms}>{m.message}</p>\r\n                    </div>\r\n                </div>\r\n\r\n            </>\r\n            )}\r\n            <div ref={mesAchorRef}></div>\r\n        </div>\r\n\r\n    )\r\n\r\n})\r\nconst AddItemForm = () => {\r\n    const [mes, setMes] = useState(\"\")\r\n    const status = useSelector((state: StoreStateType) => state.chat.status)\r\n    const dispatch = useDispatch()\r\n\r\n    const sendMessages = () => {\r\n        if (!mes) {\r\n            return;\r\n        }\r\n        dispatch(sendMessagesThunk(mes))\r\n        setMes(\"\")\r\n    }\r\n\r\n    return (\r\n        <div className={s.sendMesBlock}>\r\n            <textarea value={mes} onChange={(e) => setMes(e.currentTarget.value)}/>\r\n            <button disabled={status!==\"ready\"} className={s.sendMess} onClick={sendMessages}><FiSend/></button>\r\n        </div>\r\n    )\r\n\r\n}","import React from 'react';\r\nimport s from \"./app.module.scss\"\r\nimport {Redirect, Route, Switch, withRouter} from \"react-router-dom\";\r\nimport {Nav} from \"./nav/nav\";\r\nimport {LoginContainer} from \"./login-page/login-container\";\r\nimport {UsersContainer} from \"./users-page/users-container\";\r\nimport {StoreStateType} from \"../BLL/store\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {initializeTC} from \"../BLL/Reducers/app-reducer\";\r\nimport {HeaderContainer} from \"./header/header-container\";\r\nimport SettingContainer from \"./setting/setting-container\";\r\nimport {WithSuspenseHOC} from \"./HOC/with-suspense\";\r\nimport {Preloader} from \"./Common/preloader/Preloader\";\r\nimport {ChatPage} from \"./chat-page/chat\";\r\n\r\n\r\n// лейзи говорит, что он компаненту не импортирую. когда ее надо будет отрисоввать, он запросится с сервера\r\nconst MessagesContainer = React.lazy(() => import('./messages-page/messages-container'));\r\nconst ProfileContainerConnect = React.lazy(() => import('./profile-page/profile-container'));\r\n\r\n\r\nclass App extends React.Component<any, any> {\r\n// componentDidMount срабатывает один раз, когда компанента  вмонтируется\r\n    catchAllUnhandleError = (promiseRejectEvent: PromiseRejectionEvent) => {\r\n        alert(promiseRejectEvent)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.initializeApp()\r\n        window.addEventListener(\"unhandledrejection\", this.catchAllUnhandleError)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"unhandledrejection\", this.catchAllUnhandleError)\r\n\r\n    }\r\n\r\n    render() {\r\n        // при первой загрузке у на нет данных, показываем поэтому крутилку\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n        // задача компаненты вернуть jsx(tsx) в зависимости от пропсов либо личного локального стейта\r\n        // exact требует полное совпадение урла. Можно добавить <Switch>..роутер..</Switch> и тогда при первом совпадении будет отрисовка.\r\n        // в этом случает лучше точные урлы ставить выше, а общие ниже\r\n        return (<div className={s.block}>\r\n                {window.location.pathname === '/'\r\n                || window.location.pathname === '/login'\r\n                    ? null\r\n                    : <HeaderContainer/>}\r\n\r\n                <div className={s.container}>\r\n                    {window.location.pathname === '/'\r\n                    || window.location.pathname === '/login'\r\n                        ? null\r\n                        : <Nav/>}\r\n\r\n\r\n                    <Switch>\r\n                        <Route path='/messages/chat'\r\n                               render={()=><ChatPage/>}/>\r\n                        <Route path='/profile/:userID?'\r\n                               render={WithSuspenseHOC(ProfileContainerConnect)}/>\r\n                        <Route path='/messages/:userID?'\r\n                               render={WithSuspenseHOC(MessagesContainer)}/>\r\n\r\n                        <Route path='/users'\r\n                               render={() => <UsersContainer/>}/>\r\n                        <Route path='/login'\r\n                               render={() => <LoginContainer/>}/>\r\n                        <Route path='/setting'\r\n                               render={() => <SettingContainer/>}/>\r\n                        <Route path='/'\r\n                               render={() => <Redirect to={'/login'}/>}/>\r\n                        <Route path='*'\r\n                               render={() => <>not found</>}/>\r\n\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: StoreStateType) => ({\r\n    initialized: state.app.initialized\r\n})\r\n// compose создает контейнернкю компанету, применяя один за одним HOCи=>\r\n// (компанента высшего порядка-это функция, которая принимает одну компаненту и возвращает другую компаненту.\r\n// Это нужно для того, что бы наша компанента получила какие-то данные)\r\n\r\n// connect  дает данные из Store с помощью mapStateToProps и mapDispatchToProps\r\n// withRouter дает компоненте данные из url\r\nexport const AppContainer: any = compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp: initializeTC}))(App)\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {store} from \"./BLL/store\";\r\nimport {Provider} from \"react-redux\";\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport {AppContainer} from \"./ui-new/App\";\r\n\r\n// BrowserRouter добовляет\r\n// Provider добовляет store в контекст, из которого все компаненты могут брать данные ( наприер стор, тема темная/светлая, язык)\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <BrowserRouter>\r\n\r\n            <AppContainer/>\r\n\r\n        </BrowserRouter>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\nreportWebVitals();\r\n// реакт библиотека- это библиотека, которая эффективно отрисовывает html. Эффективно, в плане она не перерисовывает те элементы, которые не надо\r\n// реакт загружается и живет в браузере\r\n//компанента возвращает тсикс или джсикс\r\n\r\n//сайдэффект= запросы на сервер, сетТаймаут, обращение к дом элементам на прямую\r\n//  шудКомпонентАпдейт - реакт.Мемо\r\n// пьюрКомпонент\r\n//\r\n//\r\n///\r\n// редакс это система стейт менеджмента, то что позволчет управлять удобно стейто\r\n// редакс состоит из одного главного обьекта стор(хранилище,обьект ооп) .В стор мы засовываем редьюсеры, из которых он будет состоять.\r\n// редьюсеры это функции преобразователи. они получают на входе\r\n// экшен(обьект, инструкция, у которого минимум есть тип и мб данные) и часть стейта и преобразовывает стейт\r\n// делает преобраования он иммутабельно( изменяет не стейт а его копию)\r\n//\r\n// стор(хранилище) обьект ооп,  с ним можно взаимодействовать через его интерфейс( методы и свойства)\r\n// есть три главных метода:\r\n//getState позволяет получить из стора актуальный стейт\r\n//subscribe позволяет подписаться подпищику на изменение стейта\r\n//dispatch позволяет приобразовать стейт\r\n\r\n\r\n// реакт редакс для связки реакта и редакса. обеспечивает связь коспоненты со стором.\r\n// на помощь для связи комп. со стором приходит фунция connect\r\n// connect это хок. он создает вокгруг нашей компаненты другую компаненту. она снабжает нашу компаненты\r\n// connect(mstp, mdtp). mstp берет из стейта часть, которая использоваться будет в нашей компаненте( в нашу комп приходит это впропсах)\r\n// mdtp берем функцию (метод диспатч у стора) , который возвращает нам колбеки в которых диспатчи\r\n// в новой компаненте есть доступ к стору, у которого она может вызывать подписку на изменения стейта.\r\n// все обернута провайдером из р-р для того, что бы у всего приложения был доступ к стейту в контексте\r\n\r\n\r\n\r\n\r\n\r\n// node js это альтернатива браузеру. это платформа, позолябщая писать на js  любые приложения. его моно загрузить в телевизор холодильник пылесос север..\r\n// конкретно нам он нужен для подключения куси пакетов\r\n\r\n// компаненты\r\n// фунцкциональная компонента это функц принимающая пропсы и возврашает jsx\r\n\r\n// классовая компанента.\r\n\r\n// фунция мар принимает один обькт возвращает массив других обьектов (всегда добовлять key)\r\n// идентпотентность или детерменированность - получаем на входе одно и тоже и на выходе получаем одно и тоже\r\n// в чистой функции нет сайдэффектов, локального стейта\r\n// имьютабельность - функция не может менять то, что в нее приходит.\r\n\r\n\r\n\r\n// SERVER API\r\n// интрфейс сервера- это эндпоинты(урлы, на которые мы делаем запрос).рест апи это правила. какой тип запроса, какой ответ будет\r\n// делаем запросы с помощью axios. нам возвращаются промисы. у промиса  есть метод then, в которую мы передаем коллбек , который срабатывает когдп промис выполнился\r\n\r\n//ajax запросы выносим в контейнерную компаненту. контейнерных коспанент может быть много.\r\n// хок withRouter. тягает данные из урла. как коннект\r\n\r\n// thunk- это функция, которая принимает метод диспаитч, и внутри себя делаем асинхронную опирация и разные диспатчи\r\n// используем санк креатер. санку можно задиспатчить. 3\r\n//что бы ui не общался ни с кем, кроме блл.\r\n\r\n\r\n// редакс форм. есть пакет релакс форм реакт. он для того, что бы работал\r\n// флакс круговорот(ничего не появляется в юай без появления этого сначала в блл. например логин и пароль)\r\n\r\n\r\n// селекторы для mstp в connect. они для того случая, если очень тяжело достаются данные из стейта. что бы не засорять мстпya","// extracted by mini-css-extract-plugin\nmodule.exports = {\"oneFriendContainer\":\"one-user_oneFriendContainer__IqkV5\",\"photo\":\"one-user_photo__NQoB7\",\"name\":\"one-user_name__eLmQa\",\"btn\":\"one-user_btn__3E5Y8\",\"item\":\"one-user_item__4HlJa\",\"viewProfileBtn\":\"one-user_viewProfileBtn__3y-5r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"header_block__GGVhJ\",\"icon\":\"header_icon__2UwuE\",\"iconNetwork\":\"header_iconNetwork__2-Iwd\",\"container\":\"header_container__YiPjg\",\"info\":\"header_info__2xgWL\",\"unLog\":\"header_unLog__104om\",\"btn\":\"header_btn__2nH68\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"chat_block__3VLcM\",\"container\":\"chat_container__AVvz-\",\"chat\":\"chat_chat__2YAG5\",\"my\":\"chat_my__1fnUp\",\"sms\":\"chat_sms__9DwXm\",\"sendMesBlock\":\"chat_sendMesBlock__xb1D3\",\"sendMess\":\"chat_sendMess__2vzKl\"};","import { createSelector } from 'reselect';\r\n\r\nexport const getUsers=(state: any)=>{\r\n    return state.usersPage.usersData\r\n}\r\nexport const getUsersCreateSelector=createSelector(getUsers,(users)=>{\r\n    return users.filter((x:any)=>true)\r\n})\r\nexport const getPageSize=(state: any)=>{\r\n    return state.usersPage.pageSize\r\n}\r\nexport const getTotalUsersCount=(state: any)=>{\r\n    return state.usersPage.totalUsersCount\r\n}\r\nexport const getCurrentPages=(state: any)=>{\r\n    return state.usersPage.currentPages\r\n}\r\nexport const getIsFetching=(state: any)=>{\r\n    return state.usersPage.isFetching\r\n}\r\nexport const getIsFollowingProgress=(state: any)=>{\r\n    return state.usersPage.userIdForDisabled\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"forms_formControl__snBcv\",\"error\":\"forms_error__3IsYX\",\"formSunnierError\":\"forms_formSunnierError__YIHyZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"users_block__2UOdh\",\"container\":\"users_container__22NfB\",\"search\":\"users_search__1pKs8\",\"inp\":\"users_inp__15EnU\",\"userBlock\":\"users_userBlock__37CNP\",\"paginator\":\"users_paginator__1c1rK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"setting_block__2e_co\",\"container\":\"setting_container__2hwTL\",\"editContainer\":\"setting_editContainer__xsklh\",\"nav\":\"setting_nav__2u35T\",\"item\":\"setting_item__2o6DG\"};","export default __webpack_public_path__ + \"static/media/looading.c1b8565f.gif\";","import looading from '../../assets/img/looading.gif'\r\nimport React from \"react\";\r\nimport s from \"./priloader.module.scss\";\r\n\r\nexport const Preloader=()=>{\r\n    return <div className={s.block}><img src={looading} className={s.pril} alt={\"\"}/></div>\r\n}","import {profileAPI, usersAPI} from \"../../DAL/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {toggleIsFetchingAC} from \"./users-reducer\";\r\n\r\nconst ADD_POST = \"ADD_POST\"\r\nconst DELETE_POST = \"DELETE_POST\"\r\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\"\r\nconst SET_STATUS = \"SET_STATUS\"\r\nconst SAVE_PHOTO = \"SAVE_PHOTO\"\r\n\r\n// Type for Reduces\r\ntype AddPostType = {\r\n    type: \"ADD_POST\"\r\n    massages: string\r\n}\r\ntype DeletePostType = {\r\n    type: \"DELETE_POST\"\r\n    id: number\r\n}\r\ntype SetProfileType = {\r\n    type: \"SET_USER_PROFILE\"\r\n    profile: any\r\n}\r\ntype UpdateStatusType = {\r\n    type: \"SET_STATUS\"\r\n    status: any\r\n}\r\n\r\ntype UpdatePhotoType = {\r\n    type: \"SAVE_PHOTO\"\r\n    photos: any\r\n}\r\n\r\n// type for Action\r\nexport type ActionType = AddPostType\r\n    | SetProfileType\r\n    | UpdateStatusType\r\n    | DeletePostType\r\n    | UpdatePhotoType\r\n\r\n//   Initial State\r\nexport type StateType = {\r\n    profile: any\r\n    postsDataArray: {\r\n        id: number;\r\n        post: string;\r\n        likeCount: number;\r\n    }[];\r\n    status: string\r\n}\r\nlet initialState: StateType = {\r\n    profile: null,\r\n    postsDataArray: [\r\n        {id: 1, post: \"Приветики??\", likeCount: 1},\r\n        {id: 2, post: \"Ребята аууу...\", likeCount: 0},\r\n        {id: 3, post: \"Это мой первый пост!\", likeCount: 1200}\r\n    ],\r\n    status: \"\"\r\n}\r\n\r\n\r\nexport const ProfileReducer = (state: StateType = initialState, action: ActionType): StateType => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let text = action.massages\r\n            return {\r\n                ...state,\r\n                postsDataArray: [{id: 4, post: text, likeCount: 10}, ...state.postsDataArray]\r\n            }\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                postsDataArray: state.postsDataArray.filter(x => x.id !== action.id)\r\n            }\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        case SAVE_PHOTO:\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.photos}\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n//Thunk Creator\r\n// с сервера берет всю инфу о профайле выбранного пользователя\r\nexport const getOneProfileTC = (id: any) => {\r\n    return async (dispatch: any) => {\r\n        dispatch(toggleIsFetchingAC(true))\r\n\r\n        let response = await usersAPI.getProfile(id)\r\n        dispatch(setOneProfileAC(response.data))\r\n        dispatch(toggleIsFetchingAC(false))\r\n\r\n    }\r\n}\r\n// с сервера достает статус выбранного пользователя\r\nexport const getStatusTC = (id: any) => {\r\n    return async (dispatch: any) => {\r\n        dispatch(toggleIsFetchingAC(true))\r\n\r\n        let response = await profileAPI.getStatus(id)\r\n        dispatch(updateStatusAC(response.data))\r\n        dispatch(toggleIsFetchingAC(false))\r\n\r\n    }\r\n}\r\n// обновляет статус на сервере\r\nexport const updateStatusTC = (status: string) => {\r\n    return async (dispatch: any) => {\r\n        dispatch(toggleIsFetchingAC(true))\r\n\r\n        try {\r\n            let response = await profileAPI.updateStatus(status)\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(updateStatusAC(status))\r\n            }\r\n        } catch (error: any) {\r\n            console.log(\"я перехватил ошибку \")\r\n            console.log(error)\r\n        }\r\n        dispatch(toggleIsFetchingAC(false))\r\n\r\n    }\r\n}\r\n// обновляет фото на сервере\r\nexport const updatePhotoTC = (file: any) => {\r\n    return async (dispatch: any) => {\r\n        dispatch(toggleIsFetchingAC(true))\r\n\r\n        let response = await profileAPI.updatePhoto(file)\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(updatePhotoAC(response.data.data.photos))\r\n        }\r\n        dispatch(toggleIsFetchingAC(false))\r\n\r\n    }\r\n}\r\n// обновляет информацию о профиле на сервере\r\nexport const updateInfoProfileTC = (profile: any) => async (dispatch: any, getState: any) => {\r\n    dispatch(toggleIsFetchingAC(true))\r\n\r\n    const userId = getState().auth.userId\r\n    let response = await profileAPI.updateInfoProfile(profile)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getOneProfileTC(userId))\r\n    } else {\r\n        dispatch(stopSubmit(\"editProfile\", {_error: response.data.messages[0]}))\r\n        return Promise.reject()\r\n    }\r\n    dispatch(toggleIsFetchingAC(false))\r\n\r\n}\r\n\r\n//Action Creator\r\nexport const setOneProfileAC = (profile: any): SetProfileType => ({type: SET_USER_PROFILE, profile})\r\nexport const updateStatusAC = (status: string): UpdateStatusType => ({type: SET_STATUS, status})\r\nexport const updatePhotoAC = (photos: any): UpdatePhotoType => ({type: SAVE_PHOTO, photos})\r\nexport const addPostAC = (massages: string): AddPostType => ({type: ADD_POST, massages})\r\nexport const deletePostAC = (id: number): DeletePostType => ({type: DELETE_POST, id})\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Paginator_block__16mGz\",\"btn\":\"Paginator_btn__2k-up\",\"selectPage\":\"Paginator_selectPage__hgCCW\",\"page\":\"Paginator_page__1Vktn\"};","export default __webpack_public_path__ + \"static/media/no_image.4a9ff6fc.png\";","export const requiredField=(value:any)=>{\r\n    if(value) return undefined\r\n    return \"Field is required\"\r\n}\r\nexport const maxLength=(maxLength: number)=>(value:any)=>{\r\n    if(value && value.length>maxLength) return `max lenght is ${maxLength} symbols`\r\n    return undefined\r\n}","import {usersAPI} from \"../../DAL/api\";\r\n\r\nconst FOLLOW = \"FOLLOW\"\r\nconst UN_FOLLOW = \"UN_FOLLOW\"\r\nconst SET_USERS = \"SET_USERS\"\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\"\r\nconst SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\"\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\"\r\nconst SET_USERID_FOR_DISABLE = \"SET_USERID_FOR_DISABLE\"\r\nconst TOGGLE_IS_FOLLOW = \"TOGGLE_IS_FOLLOW\"\r\nconst SEARCH = \"SEARCH\"\r\n\r\n\r\n//type for Reduces\r\ntype FollowType = {\r\n    type: \"FOLLOW\"\r\n    userId: number\r\n}\r\ntype UNfollowType = {\r\n    type: \"UN_FOLLOW\"\r\n    userId: number\r\n}\r\ntype SetUsersType = {\r\n    type: \"SET_USERS\"\r\n    users: []\r\n}\r\ntype SetCurrentPageType = {\r\n    type: \"SET_CURRENT_PAGE\"\r\n    currentPages: number\r\n}\r\ntype SetTotalUsersCountACType = {\r\n    type: \"SET_TOTAL_USERS_COUNT\"\r\n    totalCounter: number\r\n}\r\ntype ToggleIsFetchingType = {\r\n    type: \"TOGGLE_IS_FETCHING\"\r\n    isFetching: boolean\r\n}\r\ntype SetUserIdForDisableType = {\r\n    type: \"SET_USERID_FOR_DISABLE\"\r\n    IsFollowingProgress: boolean\r\n    userId: any\r\n}\r\ntype ToggleIsFollowType = {\r\n    type: \"TOGGLE_IS_FOLLOW\"\r\n    follow: boolean\r\n}\r\ntype SearchType = {\r\n    type: \"SEARCH\"\r\n    search: string\r\n}\r\n\r\n//type for Action\r\ntype ActionType =\r\n    FollowType\r\n    | UNfollowType\r\n    | SetUsersType\r\n    | SetCurrentPageType\r\n    | SetTotalUsersCountACType\r\n    | ToggleIsFetchingType\r\n    | SetUserIdForDisableType\r\n    | ToggleIsFollowType\r\n    | SearchType\r\n\r\n//initial State type\r\nexport type OneUsersType = {\r\n    id: number,\r\n    followed: boolean,\r\n    name: string,\r\n    status: string,\r\n    photos: any\r\n    uniqueUrlName: any\r\n}\r\ntype UsersType = {\r\n    usersData: Array<OneUsersType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPages: number\r\n    isFetching: boolean\r\n    userIdForDisabled: any\r\n    isFollow: boolean\r\n    search: string\r\n}\r\nlet initialState: UsersType = {\r\n    usersData: [],\r\n    pageSize: 30,\r\n    totalUsersCount: 0,\r\n    currentPages: 1,\r\n    isFetching: true,\r\n    userIdForDisabled: [],\r\n    isFollow: false,\r\n    search: \"\"\r\n}\r\n\r\nexport const UsersReducer = (state: UsersType = initialState, action: ActionType): UsersType => {\r\n    if (state) {\r\n        switch (action.type) {\r\n            case TOGGLE_IS_FOLLOW:\r\n                return {\r\n                    ...state,\r\n                    isFollow: action.follow\r\n                }\r\n\r\n            case SEARCH:\r\n                return {\r\n                    ...state,\r\n                    search: action.search\r\n                }\r\n            case FOLLOW:\r\n                return {\r\n                    ...state,\r\n                    usersData: state.usersData.map((x) => {\r\n                        if (x.id === action.userId) {\r\n                            return {...x, followed: true}\r\n                        } else return x\r\n                    })\r\n                }\r\n            case UN_FOLLOW:\r\n                return {\r\n                    ...state,\r\n                    usersData: state.usersData.map((x) => {\r\n                        if (x.id === action.userId) {\r\n                            return {...x, followed: false}\r\n                        } else return x\r\n                    })\r\n                }\r\n            case SET_USERS:\r\n                return {...state, usersData: [...action.users]}\r\n            case SET_CURRENT_PAGE:\r\n                return {...state, currentPages: action.currentPages}\r\n            case SET_TOTAL_USERS_COUNT:\r\n                return {...state, totalUsersCount: action.totalCounter}\r\n            case TOGGLE_IS_FETCHING:\r\n                return {...state, isFetching: action.isFetching}\r\n            case SET_USERID_FOR_DISABLE:\r\n                return {\r\n                    ...state,\r\n                    userIdForDisabled: action.IsFollowingProgress\r\n                        ? [action.userId]\r\n                        : []\r\n                }\r\n            default:\r\n                return state;\r\n        }\r\n    } else return state\r\n}\r\n\r\n//Thunk Creator\r\n// делает запрос на сервер, возвращет всех пользователей\r\nexport const getUsersTC = (currentPages: number, pagesize: number, follow: boolean, term: any) => {\r\n    return async (dispatch: any) => {\r\n        dispatch(toggleIsFetchingAC(true))\r\n        let response;\r\n\r\n            response = await usersAPI.getUsers(currentPages, pagesize,follow, term)\r\n\r\n        dispatch(toggleIsFetchingAC(false))\r\n        dispatch(setUsersAC(response.items))\r\n        dispatch(setTotalUsersCountAC(response.totalCount))\r\n    }\r\n}\r\n\r\n// делает запрос на сервер, меняет на сервере свойство фоллоу на true\r\nexport const followTC = (id: any) => {\r\n    return async (dispatch: any) => {\r\n        dispatch(setUserIdForDisabledAC(true, id))\r\n        let response = await usersAPI.follow(id)\r\n        if (response.resultCode === 0) {\r\n            dispatch(followAC(id))\r\n        }\r\n        dispatch(setUserIdForDisabledAC(false, id))\r\n    }\r\n}\r\n// делает запрос на сервер, удаляет на сервере свойство фоллоу(ставит по умолчанию false)\r\nexport const unFollowTC = (id: any) => {\r\n    return async (dispatch: any) => {\r\n        dispatch(setUserIdForDisabledAC(true, id))\r\n        let response = await usersAPI.unFollow(id)\r\n        if (response.resultCode === 0) {\r\n            dispatch(unFollowAC(id))\r\n        }\r\n        dispatch(setUserIdForDisabledAC(false, id))\r\n    }\r\n}\r\n\r\n//ActionCreator\r\nexport const followAC = (userId: number): FollowType =>\r\n    ({type: FOLLOW, userId})\r\nexport const unFollowAC = (userId: number): UNfollowType =>\r\n    ({type: UN_FOLLOW, userId})\r\n\r\n\r\nexport const setUsersAC = (users: []): SetUsersType =>\r\n    ({type: SET_USERS, users})\r\n\r\n\r\nexport const searchAC = (search: string): SearchType =>\r\n    ({type: SEARCH, search})\r\n\r\n\r\nexport const setCurrentPageAC = (currentPages: number): SetCurrentPageType =>\r\n    ({type: SET_CURRENT_PAGE, currentPages})\r\nexport const setTotalUsersCountAC = (total: number): SetTotalUsersCountACType =>\r\n    ({\r\n        type: SET_TOTAL_USERS_COUNT,\r\n        totalCounter: total\r\n    })\r\n// isFoll.Pr true, то в IsFollowingProgress в стейте записываем айди выбранного пользователя, иначе пустой массив\r\nexport const setUserIdForDisabledAC = (IsFollowingProgress: boolean, userId: any): SetUserIdForDisableType =>\r\n    ({\r\n        type: SET_USERID_FOR_DISABLE,\r\n        IsFollowingProgress: IsFollowingProgress,\r\n        userId\r\n    })\r\n\r\n\r\n// меняем в стейте значение isFetching. тру, значит, еще в процессе загрузки.\r\nexport const toggleIsFetchingAC = (isFetching: boolean): ToggleIsFetchingType =>\r\n    ({\r\n        type: TOGGLE_IS_FETCHING,\r\n        isFetching: isFetching\r\n    })\r\nexport const toggleFollowAC = (follow: boolean): ToggleIsFollowType =>\r\n    ({type: TOGGLE_IS_FOLLOW, follow})\r\n\r\n"],"sourceRoot":""}
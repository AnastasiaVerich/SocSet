{"version":3,"sources":["ui-new/app.module.scss","ui-new/login-page/login.module.scss","ui-new/Common/pr/priloader.module.scss","BLL/Reducers/dialogs-reducer.tsx","DAL/api.tsx","ui-new/nav/nav.module.scss","ui-new/setting/setting.module.scss","BLL/Reducers/users-reducer.tsx","ui-new/Common/FormsControl/FormsControl.tsx","BLL/Reducers/profile-reducer.tsx","reportWebVitals.ts","BLL/Reducers/authorization-reducer.tsx","BLL/Reducers/app-reducer.tsx","BLL/store.tsx","ui-new/nav/nav.tsx","ui-new/login-page/login-form.tsx","ui-new/login-page/login-container.tsx","ui-new/login-page/login.tsx","ui-new/users-page/one-user/oneUser.tsx","ui-new/users-page/paginator/Paginator.tsx","ui-new/users-page/users.tsx","ui-new/users-page/users-container.tsx","UI/HOC/WithSuspense.tsx","ui-new/header/header.tsx","ui-new/header/header-container.tsx","UI/component/Common/FormsControl/FormsControl.tsx","ui-new/setting/contacts-edit-form/contacts-edit-form.tsx","ui-new/setting/aboutMe-edit-form/aboutMe-edit-form.tsx","ui-new/setting/main-edit-form/main-edit-form.tsx","ui-new/setting/setting.tsx","ui-new/setting/setting-container.tsx","ui-new/App.tsx","index.tsx","ui-new/login-page/login-form.module.scss","ui-new/setting/aboutMe-edit-form/aboutMe-edit-form.module.scss","ui-new/users-page/one-user/one-user.module.scss","ui-new/header/header.module.scss","BLL/users-selectors.tsx","ui-new/Common/FormsControl/forms.module.css","ui-new/users-page/users.module.scss","ui-new/setting/contacts-edit-form/contacts-edit-form.module.scss","UI/component/Common/FormsControl/forms.module.css","UI/assets/img/looading.gif","ui-new/Common/pr/Preloader.tsx","ui-new/users-page/paginator/Paginator.module.scss","UI/component/Profile/ProfileInfo/ProfileInfo.module.css","UI/assets/img/no_image.png","UI/utils/validators/validators.tsx"],"names":["module","exports","GET_SELECTED_DIALOG","GET_SELECTED_DIALOG_MORE","GET_USERS_TALKED_WITH","initialState","recipientId","messages","users","totalCount","dialogReducer","state","action","type","items","oldMessages","concat","usersArray","getSelectedDialogTC","id","currentPages","pagesize","dispatch","a","messagesAPI","getSelectedDialog","response","getSelectedDialogAC","getSelectedDialogMoreAC","senMessageTC","userId","body","sendMessage","data","resultCode","getUsersTalkedWithTC","getUsersTalkedWith","getUsersTalkedWithAC","instanse","axios","create","withCredentials","headers","baseURL","usersAPI","getUsers","term","get","then","follow","post","getProfile","profileAPI","unFollow","delete","getFriendsUsers","getStatus","userID","updateStatus","statusText","put","status","updatePhoto","file","formData","FormData","append","updateInfoProfile","profile","authorizationAPI","me","login","email","password","rememberMe","captcha","logout","securityAPI","getCaptchaUrl","FOLLOW","UN_FOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","SET_USERID_FOR_DISABLE","TOGGLE_IS_FOLLOW","SEARCH","usersData","pageSize","totalUsersCount","isFetching","userIdForDisabled","isFollow","search","UsersReducer","map","x","followed","totalCounter","IsFollowingProgress","getUsersTC","toggleIsFetchingAC","setUsersAC","setTotalUsersCountAC","followTC","setUserIdForDisabledAC","followAC","unFollowTC","unFollowAC","searchAC","setCurrentPageAC","total","toggleFollowAC","Textarea","input","meta","props","hasError","touched","error","className","style","formControl","Input","createFormField","placeholder","name","validator","component","text","validate","ADD_POST","DELETE_POST","SET_USER_PROFILE","SET_STATUS","SAVE_PHOTO","postsDataArray","likeCount","ProfileReducer","massages","filter","photos","getOneProfileTC","setOneProfileAC","getStatusTC","updateStatusAC","updateStatusTC","console","log","updatePhotoTC","updatePhotoAC","updateInfoProfileTC","getState","auth","stopSubmit","_error","Promise","reject","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","SET_USER_DATA","GET_CAPTCHA","isAuthorization","captchaURl","getAuthorizationDataTC","dispath","setAuthorizationDataAC","logoutTC","getCaptchaTC","captchaUrl","url","setCaptchaAC","SET_INITIALIZED","initialized","initializedSuccessAC","reducers","combineReducers","dialog","usersPage","form","formReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddlewere","Nav","useDispatch","s","block","butMenu","d1","d2","d3","container1","container","item","to","buttonItem","logOut","onClick","maxLengthValidator","maxLength","LoginReduxForm","reduxForm","handleSubmit","onSubmit","loginForm","Field","requiredField","checkbox","src","formSunnierError","button","LoginContainer","connect","isAuth","errorMessages","length","loginTC","rightPart","pathContainer","firstText","secondText","oneAdvantage","icon","description","title","desc","leftPart","iconNetwork","welcome","OneUser","user","friendContainer","ava","small","no_image","butt","butItem","disabled","some","unfollow","follower","viewProfileFriend","Paginator","pagesCount","Math","ceil","totalItemsCount","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","btn","selectPage","page","e","onPageChanget","Users","inp","value","onChange","event","currentTarget","viewFriends","paginator","UsersAPI","pageNumber","getUsersThunk","SetCurrentPage","this","prevProps","prevState","snapshot","setIsFollowingProgress","FiendsAC","React","Component","UsersContainer","getUsersCreateSelector","getPageSize","getTotalUsersCount","getCurrentPages","getIsFetching","getIsFollowingProgress","setUsers","setTotalUsersCount","toogleIsFetching","WithSuspenseHOC","Suspense","fallback","Preloader","Header","info","unLog","HeaderContainerConnect","location","reload","refreshHeader","HeaderConteiner","ContactsEditForm","formContainer","contacts","Object","keys","key","contact","AboutMeEditForm","editBlock","item1","item2","MainEditForm","Setting","setX","y","setY","z","setZ","setEditMode","editContainer","mainInfo","photoChangeBlock","large","photo","htmlFor","customfileupload","target","files","inputFile","nSubmit","initialValues","aboutMeBlock","contactBlock","nav","ProfileConteiner","ownerId","authorizationUserId","history","getOneProfile","refreshProfile","match","params","SettingContainer","withRouter","MessagesContainer","lazy","ProfileContainerConnect","App","catchAllUnhandleError","promiseRejectEvent","alert","initializeApp","addEventListener","removeEventListener","pathname","path","render","AppContainer","promise","all","ReactDOM","document","getElementById","createSelector","looading","pril"],"mappings":"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","file":"static/js/main.4bd4bc70.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"app_block__sEMSB\",\"container\":\"app_container__2QXCc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"login_block__3_udS\",\"container\":\"login_container__DukJL\",\"rightPart\":\"login_rightPart__1bKCf\",\"pathContainer\":\"login_pathContainer__1weu4\",\"firstText\":\"login_firstText__1ZYqQ\",\"secondText\":\"login_secondText__1g8Fr\",\"oneAdvantage\":\"login_oneAdvantage__1ClLI\",\"icon\":\"login_icon__W7cfQ\",\"description\":\"login_description__Wrkfh\",\"title\":\"login_title__3O8Pr\",\"desc\":\"login_desc__3GLNQ\",\"leftPart\":\"login_leftPart__QqwSH\",\"iconNetwork\":\"login_iconNetwork__2f7lo\",\"welcome\":\"login_welcome__3d5N8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"priloader_block__1msor\",\"pril\":\"priloader_pril__1JhG9\"};","import {messagesAPI} from \"../../DAL/api\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nconst GET_SELECTED_DIALOG = \"GET_SELECTED_DIALOG\"\r\nconst GET_SELECTED_DIALOG_MORE = \"GET_SELECTED_DIALOG_MORE\"\r\nconst GET_USERS_TALKED_WITH = \"GET_USERS_TALKED_WITH\"\r\n//type for Reduces\r\ntype GetSelectedDialogType = {\r\n    type: \"GET_SELECTED_DIALOG\"\r\n    items: any;\r\n}\r\ntype GetSelectedDialogMoreType = {\r\n    type: \"GET_SELECTED_DIALOG_MORE\"\r\n    items: any;\r\n}\r\n\r\ntype GetUsersTalkedWithType = {\r\n    type: \"GET_USERS_TALKED_WITH\"\r\n    usersArray: any;\r\n}\r\n\r\n//type for Action\r\ntype ActionType = GetSelectedDialogType | GetUsersTalkedWithType | GetSelectedDialogMoreType\r\n\r\n//initial State\r\ntype StateType = {\r\n    recipientId: number | null\r\n    messages: any\r\n    users: any\r\n    totalCount: any\r\n}\r\nlet initialState: StateType = {\r\n    recipientId: null,\r\n    messages: null,\r\n    users: null,\r\n    totalCount: null\r\n}\r\n\r\nexport const dialogReducer = (state: StateType = initialState, action: ActionType): StateType => {\r\n    if (state) {\r\n        switch (action.type) {\r\n            case GET_SELECTED_DIALOG:\r\n                /*let oldMessages = {...state}\r\n                if (state.messages !== null) {\r\n                    return {\r\n                        ...state,\r\n                        messages: action.items.concat(oldMessages.messages)\r\n                    }\r\n                } else */\r\n                return {\r\n                    ...state,\r\n                    messages: action.items.items,\r\n                    totalCount: action.items.totalCount\r\n                }\r\n            case GET_SELECTED_DIALOG_MORE:\r\n                let oldMessages = {...state}\r\n\r\n                return {\r\n                    ...state,\r\n                    messages: action.items.items.concat(oldMessages.messages),\r\n                    totalCount: action.items.totalCount\r\n\r\n                }\r\n            case GET_USERS_TALKED_WITH:\r\n                return {\r\n                    ...state,\r\n                    users: action.usersArray\r\n                }\r\n\r\n            default:\r\n                return state;\r\n        }\r\n    } else return state\r\n}\r\n\r\n\r\n//Thunk Creator\r\n// получить с сервера список сообщений с выбранным пользователем\r\nexport const getSelectedDialogTC = (id: any, currentPages: any, pagesize: any) => async (dispatch: Dispatch) => {\r\n    let response = await messagesAPI.getSelectedDialog(id, currentPages, pagesize)\r\n    if (currentPages === 1) {\r\n        dispatch(getSelectedDialogAC(response));\r\n    } else {\r\n        dispatch(getSelectedDialogMoreAC(response));\r\n    }\r\n}\r\n// отправить сообщение на сервер\r\nexport const senMessageTC = (userId: any, body: string) => async (dispatch: any) => {\r\n    let response = await messagesAPI.sendMessage(userId, body)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getSelectedDialogTC(userId, 1, 20))\r\n    }\r\n}\r\n// получить список пользователей с кем общался\r\nexport const getUsersTalkedWithTC = () => async (dispatch: Dispatch) => {\r\n    let response = await messagesAPI.getUsersTalkedWith()\r\n    dispatch(getUsersTalkedWithAC(response));\r\n\r\n}\r\n\r\n// Action Creator\r\nexport const getSelectedDialogAC = (items: any): GetSelectedDialogType => ({\r\n    type: GET_SELECTED_DIALOG,\r\n    items: items\r\n})\r\n\r\n\r\nexport const getSelectedDialogMoreAC = (items: any): GetSelectedDialogMoreType => ({\r\n    type: GET_SELECTED_DIALOG_MORE,\r\n    items: items\r\n})\r\nexport const getUsersTalkedWithAC = (users: any): GetUsersTalkedWithType => ({\r\n    type: GET_USERS_TALKED_WITH,\r\n    usersArray: users\r\n})\r\n\r\n\r\n\r\n\r\n","import axios from \"axios\";\r\n\r\n\r\nconst instanse = axios.create({\r\n    withCredentials: true,\r\n    headers: {\r\n       \"API-KEY\": \"603ef8c0-4933-4294-ab5f-b170d3ebe6d8\"\r\n       //  \"API-KEY\": \"48cd781d-ab35-4a63-97ba-b184f71ed662\"\r\n    },\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/'\r\n})\r\n\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPages: any, pagesize: any, term: any) {\r\n        return (\r\n            instanse.get(`users?page=${currentPages}&count=${pagesize}&term=${term}`, {})\r\n                .then(response => response.data)\r\n        )\r\n    },\r\n\r\n    follow(id: any) {\r\n        return (\r\n            instanse.post(`follow/${id}`, {}, {})\r\n                .then(response => response.data)\r\n        )\r\n    },\r\n    getProfile(id: any) {\r\n        return profileAPI.getProfile(id)\r\n    },\r\n    unFollow(id: any) {\r\n        return (\r\n            instanse.delete(`follow/${id}`, {})\r\n                .then(response => response.data)\r\n        )\r\n    },\r\n    getFriendsUsers(currentPages: any, pagesize: any) {\r\n        return (\r\n            instanse.get(`users?page=${currentPages}&count=${pagesize}&friend=true`, {})\r\n                .then(response => response.data)\r\n        )\r\n    }\r\n\r\n}\r\nexport const profileAPI = {\r\n    getProfile(id: any) {\r\n        return (\r\n            instanse.get(`profile/${id}`)\r\n        )\r\n    },\r\n    getStatus(userID: any) {\r\n        return (\r\n            instanse.get(`/profile/status/${userID}`)\r\n        )\r\n    },\r\n    updateStatus(statusText: string) {\r\n        return (\r\n            instanse.put(`/profile/status`, {status: statusText})\r\n        )\r\n    },\r\n    updatePhoto(file: any) {\r\n        let formData = new FormData();\r\n        formData.append(\"image\", file)\r\n        return (instanse.put(`profile/photo`, formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            })\r\n        )\r\n    },\r\n    updateInfoProfile(profile: any) {\r\n        return instanse.put(`/profile`, profile)\r\n    }\r\n}\r\nexport const authorizationAPI = {\r\n    me() {\r\n        return (\r\n            instanse.get(`auth/me`, {})\r\n        )\r\n    },\r\n    login(email: string, password: string, rememberMe: boolean = false, captcha: any) {\r\n        return (\r\n            instanse.post(`auth/login`, {email, password, rememberMe, captcha}, {})\r\n\r\n        )\r\n    },\r\n    logout() {\r\n        return (\r\n            instanse.delete(`auth/login`, {})\r\n        )\r\n    }\r\n}\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return (\r\n            instanse.get(`security/get-captcha-url`)\r\n        )\r\n    }\r\n}\r\nexport const messagesAPI = {\r\n    getSelectedDialog(userId: any,currentPages: any, pagesize: any ) {\r\n        return (\r\n            instanse.get(`dialogs/${userId}/messages?page=${currentPages}&count=${pagesize}`, {})\r\n                .then(response => response.data)\r\n        )\r\n    },\r\n    sendMessage(userId: any, body: string) {\r\n        return (\r\n            instanse.post(`dialogs/${userId}/messages`, {body}, {})\r\n        )\r\n    },\r\n    getUsersTalkedWith() {\r\n        return (\r\n            instanse.get(`dialogs`, {})\r\n                .then(response => response.data)\r\n        )\r\n    }\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"nav_block__1GB-e\",\"butMenu\":\"nav_butMenu__1fLrr\",\"d1\":\"nav_d1__1-xBn\",\"d2\":\"nav_d2__YiG9W\",\"d3\":\"nav_d3__u7mit\",\"container1\":\"nav_container1__POSVx\",\"container\":\"nav_container__2NfBV\",\"item\":\"nav_item__2Fqq1\",\"logOut\":\"nav_logOut__3ORVn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"setting_block__2e_co\",\"container\":\"setting_container__2hwTL\",\"editContainer\":\"setting_editContainer__xsklh\",\"mainInfo\":\"setting_mainInfo__1cNSu\",\"photoChangeBlock\":\"setting_photoChangeBlock__2_DDP\",\"photo\":\"setting_photo__3RNG4\",\"customfileupload\":\"setting_customfileupload__1ry2L\",\"inputFile\":\"setting_inputFile__2RJza\",\"aboutMeBlock\":\"setting_aboutMeBlock__1O0NG\",\"contactBlock\":\"setting_contactBlock__2xFTT\",\"nav\":\"setting_nav__2u35T\",\"item\":\"setting_item__2o6DG\"};","import {usersAPI} from \"../../DAL/api\";\r\n\r\nconst FOLLOW = \"FOLLOW\"\r\nconst UN_FOLLOW = \"UN_FOLLOW\"\r\nconst SET_USERS = \"SET_USERS\"\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\"\r\nconst SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\"\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\"\r\nconst SET_USERID_FOR_DISABLE = \"SET_USERID_FOR_DISABLE\"\r\nconst TOGGLE_IS_FOLLOW = \"TOGGLE_IS_FOLLOW\"\r\nconst SEARCH = \"SEARCH\"\r\n\r\n\r\n//type for Reduces\r\ntype FollowType = {\r\n    type: \"FOLLOW\"\r\n    userId: number\r\n}\r\ntype UNfollowType = {\r\n    type: \"UN_FOLLOW\"\r\n    userId: number\r\n}\r\ntype SetUsersType = {\r\n    type: \"SET_USERS\"\r\n    users: []\r\n}\r\ntype SetCurrentPageType = {\r\n    type: \"SET_CURRENT_PAGE\"\r\n    currentPages: number\r\n}\r\ntype SetTotalUsersCountACType = {\r\n    type: \"SET_TOTAL_USERS_COUNT\"\r\n    totalCounter: number\r\n}\r\ntype ToggleIsFetchingType = {\r\n    type: \"TOGGLE_IS_FETCHING\"\r\n    isFetching: boolean\r\n}\r\ntype SetUserIdForDisableType = {\r\n    type: \"SET_USERID_FOR_DISABLE\"\r\n    IsFollowingProgress: boolean\r\n    userId: any\r\n}\r\ntype ToggleIsFollowType = {\r\n    type: \"TOGGLE_IS_FOLLOW\"\r\n    follow: boolean\r\n}\r\ntype SearchType = {\r\n    type: \"SEARCH\"\r\n    search: string\r\n}\r\n\r\n//type for Action\r\ntype ActionType =\r\n    FollowType\r\n    | UNfollowType\r\n    | SetUsersType\r\n    | SetCurrentPageType\r\n    | SetTotalUsersCountACType\r\n    | ToggleIsFetchingType\r\n    | SetUserIdForDisableType\r\n    | ToggleIsFollowType\r\n    | SearchType\r\n\r\n//initial State type\r\nexport type OneUsersType = {\r\n    id: number,\r\n    followed: boolean,\r\n    name: string,\r\n    status: string,\r\n    photos: any\r\n    uniqueUrlName: any\r\n}\r\ntype UsersType = {\r\n    usersData: Array<OneUsersType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPages: number\r\n    isFetching: boolean\r\n    userIdForDisabled: any\r\n    isFollow: boolean\r\n    search: string\r\n}\r\nlet initialState: UsersType = {\r\n    usersData: [],\r\n    pageSize: 30,\r\n    totalUsersCount: 0,\r\n    currentPages: 1,\r\n    isFetching: true,\r\n    userIdForDisabled: [],\r\n    isFollow: false,\r\n    search: \"\"\r\n}\r\n\r\nexport const UsersReducer = (state: UsersType = initialState, action: ActionType): UsersType => {\r\n    if (state) {\r\n        switch (action.type) {\r\n            case TOGGLE_IS_FOLLOW:\r\n                return {\r\n                    ...state,\r\n                    isFollow: action.follow\r\n                }\r\n\r\n            case SEARCH:\r\n                return {\r\n                    ...state,\r\n                    search: action.search\r\n                }\r\n            case FOLLOW:\r\n                return {\r\n                    ...state,\r\n                    usersData: state.usersData.map((x) => {\r\n                        if (x.id === action.userId) {\r\n                            return {...x, followed: true}\r\n                        } else return x\r\n                    })\r\n                }\r\n            case UN_FOLLOW:\r\n                return {\r\n                    ...state,\r\n                    usersData: state.usersData.map((x) => {\r\n                        if (x.id === action.userId) {\r\n                            return {...x, followed: false}\r\n                        } else return x\r\n                    })\r\n                }\r\n            case SET_USERS:\r\n                return {...state, usersData: [...action.users]}\r\n            case SET_CURRENT_PAGE:\r\n                return {...state, currentPages: action.currentPages}\r\n            case SET_TOTAL_USERS_COUNT:\r\n                return {...state, totalUsersCount: action.totalCounter}\r\n            case TOGGLE_IS_FETCHING:\r\n                return {...state, isFetching: action.isFetching}\r\n            case SET_USERID_FOR_DISABLE:\r\n                return {\r\n                    ...state,\r\n                    userIdForDisabled: action.IsFollowingProgress\r\n                        ? [action.userId]\r\n                        : []\r\n                }\r\n            default:\r\n                return state;\r\n        }\r\n    } else return state\r\n}\r\n\r\n//Thunk Creator\r\n// делает запрос на сервер, возвращет всех пользователей\r\nexport const getUsersTC = (currentPages: number, pagesize: number, follow: boolean, term: any) => {\r\n    return async (dispatch: any) => {\r\n        dispatch(toggleIsFetchingAC(true))\r\n        let response;\r\n        // если ищем друзей, то выполняем один запрос на серве\r\n        if (follow) {\r\n            response = await usersAPI.getFriendsUsers(currentPages, pagesize)\r\n        } else {\r\n            response = await usersAPI.getUsers(currentPages, pagesize, term)\r\n        }\r\n        dispatch(toggleIsFetchingAC(false))\r\n        dispatch(setUsersAC(response.items))\r\n        dispatch(setTotalUsersCountAC(response.totalCount))\r\n    }\r\n}\r\n\r\n// делает запрос на сервер, меняет на сервере свойство фоллоу на true\r\nexport const followTC = (id: any) => {\r\n    return async (dispatch: any) => {\r\n        dispatch(setUserIdForDisabledAC(true, id))\r\n        let response = await usersAPI.follow(id)\r\n        if (response.resultCode === 0) {\r\n            dispatch(followAC(id))\r\n        }\r\n        dispatch(setUserIdForDisabledAC(false, id))\r\n    }\r\n}\r\n// делает запрос на сервер, удаляет на сервере свойство фоллоу(ставит по умолчанию false)\r\nexport const unFollowTC = (id: any) => {\r\n    return async (dispatch: any) => {\r\n        dispatch(setUserIdForDisabledAC(true, id))\r\n        let response = await usersAPI.unFollow(id)\r\n        if (response.resultCode === 0) {\r\n            dispatch(unFollowAC(id))\r\n        }\r\n        dispatch(setUserIdForDisabledAC(false, id))\r\n    }\r\n}\r\n\r\n//ActionCreator\r\nexport const followAC = (userId: number): FollowType =>\r\n    ({type: FOLLOW, userId})\r\nexport const unFollowAC = (userId: number): UNfollowType =>\r\n    ({type: UN_FOLLOW, userId})\r\n\r\n\r\nexport const setUsersAC = (users: []): SetUsersType =>\r\n    ({type: SET_USERS, users})\r\n\r\n\r\nexport const searchAC = (search: string): SearchType =>\r\n    ({type: SEARCH, search})\r\n\r\n\r\nexport const setCurrentPageAC = (currentPages: number): SetCurrentPageType =>\r\n    ({type: SET_CURRENT_PAGE, currentPages})\r\nexport const setTotalUsersCountAC = (total: number): SetTotalUsersCountACType =>\r\n    ({\r\n        type: SET_TOTAL_USERS_COUNT,\r\n        totalCounter: total\r\n    })\r\n// isFoll.Pr true, то в IsFollowingProgress в стейте записываем айди выбранного пользователя, иначе пустой массив\r\nexport const setUserIdForDisabledAC = (IsFollowingProgress: boolean, userId: any): SetUserIdForDisableType =>\r\n    ({\r\n        type: SET_USERID_FOR_DISABLE,\r\n        IsFollowingProgress: IsFollowingProgress,\r\n        userId\r\n    })\r\n\r\n\r\n// меняем в стейте значение isFetching. тру, значит, еще в процессе загрузки.\r\nexport const toggleIsFetchingAC = (isFetching: boolean): ToggleIsFetchingType =>\r\n    ({\r\n        type: TOGGLE_IS_FETCHING,\r\n        isFetching: isFetching\r\n    })\r\nexport const toggleFollowAC = (follow: boolean): ToggleIsFollowType =>\r\n    ({type: TOGGLE_IS_FOLLOW, follow})\r\n\r\n","import React from 'react';\r\nimport style from './forms.module.css'\r\nimport {Field} from \"redux-form\";\r\n\r\nexport const Textarea = ({input, meta, ...props}: any) => {\r\n    const hasError = meta.touched && meta.error\r\n    return <div className={style.formControl + \" \" + (hasError ? style.error : \"\")}>\r\n        <textarea {...input} {...props}/>\r\n        <div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    </div>\r\n}\r\nexport const Input = ({input, meta, ...props}: any) => {\r\n    const hasError = meta.touched && meta.error\r\n    return <div className={style.formControl + \" \" + (hasError ? style.error : \"\")}>\r\n        <input {...input} {...props}/>\r\n        <div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    </div>\r\n}\r\nexport const Form = ({input, meta, el, ...props}: any) => {\r\n    const hasError = meta.touched && meta.error\r\n    return <div className={style.formControl + \" \" + (hasError ? style.error : \"\")}>\r\n        <props.el {...input} {...props}/>\r\n        <div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport const createFormField = (placeholder: any, name: any, validator: any, component: any, props = {}, text = \"\") => (\r\n    <>\r\n        <Field placeholder={placeholder}\r\n               name={name}\r\n               validate={validator}\r\n               component={component}\r\n               {...props}/> {text}\r\n    </>\r\n)\r\n","import {profileAPI, usersAPI} from \"../../DAL/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst ADD_POST = \"ADD_POST\"\r\nconst DELETE_POST = \"DELETE_POST\"\r\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\"\r\nconst SET_STATUS = \"SET_STATUS\"\r\nconst SAVE_PHOTO = \"SAVE_PHOTO\"\r\n\r\n// Type for Reduces\r\ntype AddPostType = {\r\n    type: \"ADD_POST\"\r\n    massages: string\r\n}\r\ntype DeletePostType = {\r\n    type: \"DELETE_POST\"\r\n    id: number\r\n}\r\ntype SetProfileType = {\r\n    type: \"SET_USER_PROFILE\"\r\n    profile: any\r\n}\r\ntype UpdateStatusType = {\r\n    type: \"SET_STATUS\"\r\n    status: any\r\n}\r\n\r\ntype UpdatePhotoType = {\r\n    type: \"SAVE_PHOTO\"\r\n    photos: any\r\n}\r\n\r\n// type for Action\r\nexport type ActionType = AddPostType\r\n    | SetProfileType\r\n    | UpdateStatusType\r\n    | DeletePostType\r\n    | UpdatePhotoType\r\n\r\n//   Initial State\r\nexport type StateType = {\r\n    profile: any\r\n    postsDataArray: {\r\n        id: number;\r\n        post: string;\r\n        likeCount: number;\r\n    }[];\r\n    status: string\r\n}\r\nlet initialState: StateType = {\r\n    profile: null,\r\n    postsDataArray: [\r\n        {id: 1, post: \"Приветики??\", likeCount: 1},\r\n        {id: 2, post: \"Ребята аууу...\", likeCount: 0},\r\n        {id: 3, post: \"Это мой первый пост!\", likeCount: 1200}\r\n    ],\r\n    status: \"\"\r\n}\r\n\r\n\r\nexport const ProfileReducer = (state: StateType = initialState, action: ActionType): StateType => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let text = action.massages\r\n            return {\r\n                ...state,\r\n                postsDataArray: [{id: 4, post: text, likeCount: 10}, ...state.postsDataArray]\r\n            }\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                postsDataArray: state.postsDataArray.filter(x => x.id !== action.id)\r\n            }\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        case SAVE_PHOTO:\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.photos}\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n//Thunk Creator\r\n// с сервера берет всю инфу о профайле выбранного пользователя\r\nexport const getOneProfileTC = (id: any) => {\r\n    return async (dispatch: any) => {\r\n        let response = await usersAPI.getProfile(id)\r\n        dispatch(setOneProfileAC(response.data))\r\n    }\r\n}\r\n// с сервера достает статус выбранного пользователя\r\nexport const getStatusTC = (id: any) => {\r\n    return async (dispatch: any) => {\r\n        let response = await profileAPI.getStatus(id)\r\n        dispatch(updateStatusAC(response.data))\r\n    }\r\n}\r\n// обновляет статус на сервере\r\nexport const updateStatusTC = (status: string) => {\r\n    return async (dispatch: any) => {\r\n        try {\r\n            let response = await profileAPI.updateStatus(status)\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(updateStatusAC(status))\r\n            }\r\n        } catch (error: any) {\r\n            console.log(\"я перехватил ошибку \")\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n// обновляет фото на сервере\r\nexport const updatePhotoTC = (file: any) => {\r\n    return async (dispatch: any) => {\r\n        let response = await profileAPI.updatePhoto(file)\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(updatePhotoAC(response.data.data.photos))\r\n        }\r\n    }\r\n}\r\n// обновляет информацию о профиле на сервере\r\nexport const updateInfoProfileTC = (profile: any) => async (dispatch: any, getState: any) => {\r\n    const userId = getState().auth.userId\r\n    let response = await profileAPI.updateInfoProfile(profile)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getOneProfileTC(userId))\r\n    } else {\r\n        dispatch(stopSubmit(\"editProfile\", {_error: response.data.messages[0]}))\r\n        return Promise.reject()\r\n    }\r\n}\r\n\r\n//Action Creator\r\nexport const setOneProfileAC = (profile: any): SetProfileType => ({type: SET_USER_PROFILE, profile})\r\nexport const updateStatusAC = (status: string): UpdateStatusType => ({type: SET_STATUS, status})\r\nexport const updatePhotoAC = (photos: any): UpdatePhotoType => ({type: SAVE_PHOTO, photos})\r\nexport const addPostAC = (massages: string): AddPostType => ({type: ADD_POST, massages})\r\nexport const deletePostAC = (id: number): DeletePostType => ({type: DELETE_POST, id})\r\n\r\n\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {authorizationAPI, securityAPI} from \"../../DAL/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {Dispatch} from \"redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst SET_USER_DATA = \"SET_USER_DATA\"\r\nconst GET_CAPTCHA = \"CAPTCHA\"\r\n\r\n//type for Reduces\r\ntype SetUserType = {\r\n    type: \"SET_USER_DATA\"\r\n    userId: any,\r\n    email: any,\r\n    login: any,\r\n    isAuthorization: any\r\n}\r\ntype GetCaptchaType = {\r\n    type: \"CAPTCHA\"\r\n    captchaURl: any\r\n}\r\n\r\n\r\n///////type for Action\r\ntype ActionType = SetUserType | GetCaptchaType\r\n\r\n/////initial State\r\ntype AuthorizationStateType = {\r\n    userId: number | null\r\n    email: string | null\r\n    login: boolean | null\r\n    isAuthorization: boolean | null\r\n    captchaURl: any\r\n}\r\n\r\nlet initialState: AuthorizationStateType = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuthorization: false,\r\n    captchaURl: null\r\n}\r\n\r\nexport const AuthorizationReducer = (state: AuthorizationStateType = initialState, action: ActionType): AuthorizationStateType => {\r\n    if (state) {\r\n        switch (action.type) {\r\n            case SET_USER_DATA:\r\n                return {\r\n                    ...state,\r\n                    userId: action.userId,\r\n                    email: action.email,\r\n                    login: action.login,\r\n                    isAuthorization: action.isAuthorization\r\n                }\r\n                case GET_CAPTCHA:\r\n                return {\r\n                    ...state,\r\n                    captchaURl: action.captchaURl\r\n                }\r\n            default:\r\n                return state;\r\n        }\r\n    } else return state\r\n}\r\n//Thunk Creator\r\n// авторизируемся\r\nexport const loginTC = (email: string, password: string, rememberMe: boolean, captcha: any) => async (dispath: any) => {\r\n    let response = await authorizationAPI.login(email, password, rememberMe, captcha)\r\n    // если авт прошла успешно, то выполняем это\r\n    if (response.data.resultCode === 0) {\r\n        dispath(getAuthorizationDataTC())\r\n    }\r\n    else {\r\n        if (response.data.resultCode === 10){\r\n            dispath(getCaptchaTC())\r\n        }\r\n        let errorMessages = response.data.messages.length > 0\r\n            ? response.data.messages[0]\r\n            : \"some error\"\r\n        dispath(stopSubmit(\"Login\", {_error: errorMessages}))\r\n    }\r\n}\r\n//получаем данные о пользователе, который авторизировался\r\nexport const getAuthorizationDataTC = () => async (dispath: Dispatch) => {\r\n    // т к авт прошла успешно, то делаем запрос, от куда берем даные текущего пользователя\r\n    let response = await authorizationAPI.me()\r\n    if (response.data.resultCode === 0) {\r\n        let {id, email, login} = response.data.data\r\n        dispath(setAuthorizationDataAC(id, email, login, true))\r\n    }\r\n}\r\n//делаем запрос на сервер, удаляем свои данные для автаризации\r\nexport const logoutTC = () => async (dispath: Dispatch) => {\r\n    let response = await authorizationAPI.logout()\r\n    if (response.data.resultCode === 0) {\r\n        dispath(setAuthorizationDataAC(null, null, null, false));\r\n    }\r\n}\r\n// делаем запрос на сервер, получаем картинку антибот\r\nexport const getCaptchaTC = () => async (dispath: Dispatch) => {\r\n    let response = await securityAPI.getCaptchaUrl()\r\n    let captchaUrl = response.data.url\r\n    debugger\r\n    dispath(setCaptchaAC(captchaUrl))\r\n}\r\n\r\n//ACTION CREATOR\r\n// меняем данные в в стейте на данные авторизированного пользователя\r\nexport const setAuthorizationDataAC = (userId: number | null, email: string | null, login: string | null, isAuthorization: boolean | null): SetUserType => ({\r\n    type: SET_USER_DATA,\r\n    userId: userId,\r\n    email: email,\r\n    login: login,\r\n    isAuthorization: isAuthorization\r\n})\r\n// добовляем капчу, пришедшую из сервера, в наш стейт\r\nexport const setCaptchaAC = (captchaURl: any): GetCaptchaType => ({\r\n    type: GET_CAPTCHA,\r\n    captchaURl: captchaURl\r\n})","import {getAuthorizationDataTC} from \"./authorization-reducer\";\r\n\r\nconst SET_INITIALIZED = \"SET_INITIALIZED\"\r\n\r\n//type for Reduces\r\ntype InitializedType = {\r\n    type: \"SET_INITIALIZED\"\r\n}\r\n\r\n//type for Action\r\ntype ActionType = InitializedType\r\n\r\n//initial State\r\ntype StateType = {\r\n    initialized: boolean\r\n}\r\nlet initialState: StateType = {\r\n    initialized: false\r\n}\r\n\r\nexport const AppReducer = (state: StateType = initialState, action: ActionType): StateType => {\r\n    if (state) {\r\n        switch (action.type) {\r\n            case SET_INITIALIZED:{\r\n                return {\r\n                    ...state,\r\n                    initialized: true\r\n                }\r\n            }\r\n            default:\r\n                return state;\r\n        }\r\n    }\r\n    else return state\r\n}\r\n\r\n//Thunk Creator\r\nexport const initializeTC = () => (dispath: any) => {\r\n   let promise= dispath(getAuthorizationDataTC());\r\n    Promise.all([promise]).then(()=>{\r\n        dispath(initializedSuccessAC());\r\n    })\r\n}\r\n\r\n// Action Creator\r\nexport const initializedSuccessAC = (): InitializedType => ({type: SET_INITIALIZED})\r\n\r\n\r\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport {ProfileReducer} from \"./Reducers/profile-reducer\";\r\nimport {UsersReducer} from \"./Reducers/users-reducer\";\r\nimport {AuthorizationReducer} from \"./Reducers/authorization-reducer\";\r\nimport thunkMiddlewere from \"redux-thunk\";//thunk as thunkMiddleWere\r\nimport  {reducer as formReducer} from 'redux-form'\r\nimport {AppReducer} from \"./Reducers/app-reducer\";\r\nimport {dialogReducer} from \"./Reducers/dialogs-reducer\";\r\n\r\n\r\nexport const reducers = combineReducers(\r\n    {\r\n        profile: ProfileReducer,\r\n        dialog: dialogReducer,\r\n        usersPage: UsersReducer,\r\n        auth: AuthorizationReducer,\r\n        form: formReducer,\r\n        app: AppReducer\r\n    }\r\n)\r\n\r\nexport type StoreStateType = ReturnType<typeof reducers>\r\n\r\nconst composeEnhancers = (window && (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\nexport const store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddlewere)));\r\n\r\n// @ts-ignore\r\nwindow.store = store\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport s from \"./nav.module.scss\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {logoutTC} from \"../../BLL/Reducers/authorization-reducer\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {AiOutlineUser} from \"react-icons/ai\";\r\nimport {AiOutlineMessage} from \"react-icons/ai\";\r\nimport {AiOutlineTeam} from \"react-icons/ai\";\r\nimport {AiOutlineSetting} from \"react-icons/ai\";\r\n\r\n\r\nexport const Nav = () => {\r\n    const dispatch = useDispatch()\r\n    const logOut = () => {\r\n        dispatch(logoutTC())\r\n    }\r\n\r\n\r\n    return (<div className={s.block}>\r\n\r\n        <div className={s.butMenu}>\r\n            <div className={s.d1}></div>\r\n            <div className={s.d2}></div>\r\n            <div className={s.d3}></div>\r\n\r\n        </div>\r\n        <div className={s.container1}>\r\n            <div className={s.container}>\r\n                <div className={s.item}>\r\n                    <NavLink to=\"/profile\" className={s.buttonItem}>\r\n                        <AiOutlineUser/>\r\n\r\n                    </NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to=\"/messages\" className={s.buttonItem}>\r\n                        <AiOutlineMessage/>\r\n                    </NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to=\"/users\" className={s.buttonItem}>\r\n                        <AiOutlineTeam/>\r\n                    </NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to=\"/setting\" className={s.buttonItem}>\r\n                        <AiOutlineSetting/>\r\n                    </NavLink>\r\n                </div>\r\n\r\n\r\n            </div>\r\n            <NavLink to=\"/login\" className={s.logOut} onClick={() => logOut()}>\r\n                LogOut\r\n            </NavLink>\r\n        </div>\r\n    </div>)\r\n}","import React from 'react'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLength, requiredField} from \"../../UI/utils/validators/validators\";\r\nimport s from \"./login-form.module.scss\";\r\nimport {createFormField, Input} from \"../Common/FormsControl/FormsControl\";\r\n\r\nconst maxLengthValidator = maxLength(50)\r\n\r\nconst LoginForm = ({handleSubmit, error, x}: any) => {\r\n    return (\r\n/*        В пропсах теперь нам очень много всего приходит после оборачивания компоненты с формой в HOC.\r\n        В т.ч. метод handleSubmit, который позволяет не перезагружать страницу при отправке.*/\r\n        <form onSubmit={handleSubmit} className={s.loginForm}>\r\n                <Field placeholder={\"Email\"}\r\n                       component={Input}\r\n                       name={\"email\"}\r\n                       validate={[requiredField, maxLengthValidator]}\r\n                       props={{ className: s.input }}/>\r\n{/*Все поля в форме меняем на компоненты Field, которые пришли к нам из библиотеки, с указанием component аналогично пропсам*/}\r\n                <Field placeholder={\"Password\"}\r\n                       component={Input}\r\n                       name={\"password\"}\r\n                       validate={[requiredField, maxLengthValidator]}\r\n                       props={{ className: s.input }}/>\r\n            <div className={s.rememberMe}>\r\n                <Field type={\"checkbox\"}\r\n                       component={Input}\r\n                       name={\"rememberMe\"}\r\n                       validate={[maxLengthValidator]}\r\n                       props={{ className: s.checkbox }}/> Remember\r\n            </div>\r\n            {x && <img className={s.captcha} src={x}/>}\r\n\r\n            {x && createFormField(\"captcha URl\", \"captcha\", [], Input, {className: s.input})}\r\n\r\n            {error && <div className={s.formSunnierError}>\r\n                {error}\r\n            </div>}\r\n\r\n                <button className={s.button} type='submit' >Login</button>\r\n\r\n        </form>\r\n\r\n    )\r\n}\r\n//присвоили уникальное имя нашей новой форме в параметре – {form: 'login'}\r\n export const LoginReduxForm: any = reduxForm({\r\n    form: 'Login'\r\n})(LoginForm)\r\n\r\n// Теперь при вводе текста в форме в нашем стейте появляется временный объект login (имя нашей формы),\r\n// который содержит много объектов, свойствами которых являются наши поля (берутся по name).\r\n// Среди них объекты «было ли посещено поле», «было ли тронуто» и т.д.\r\n//     А также объект values, где в свойства (берутся по name) попадает вводимый текст.\r\n// можно вывести в консоль и посмотреть параметры, потом их использовать","import React from \"react\";\r\nimport {StoreStateType} from \"../../BLL/store\";\r\nimport {loginTC} from \"../../BLL/Reducers/authorization-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {Login} from \"./login\";\r\n\r\nconst mapStateToProps = (state: StoreStateType) => ({\r\n    isAuth: state.auth.isAuthorization,\r\n    captcha: state.auth.captchaURl\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n    return {\r\n        login: (email: string, password: string, rememberMe: boolean, captcha: any) => {\r\n            dispatch(loginTC(email, password, rememberMe, captcha))\r\n        }\r\n    }\r\n}\r\n\r\nexport const LoginContainer = connect(\r\n    mapStateToProps, mapDispatchToProps)(Login)","import React from 'react'\r\nimport s from \"./login.module.scss\"\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {LoginReduxForm} from \"./login-form\";\r\nimport {reset} from \"redux-form\";\r\nimport {AiOutlineShopping, CgWorkAlt, MdComputer} from \"react-icons/all\";\r\n\r\nexport const Login = (props:any) => {\r\n/*    в месте вызова нашей компоненты с окончательной «редаксовской формой» теперь нужно повесить\r\n    произвольную функцию через onSubmit, которая соберет данные из полей из полей и обработает их при нажатии на кнопку:*/\r\n    const onSubmit = (formData: any) => {\r\n        console.log(formData)//здесь мы получаем данные с формы и будем из диспатчить потом\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha)\r\n        // dispatch(reset(\"profileAddPostForm\")) для очистки полей в форме, в кавычках имя формы\r\n    }\r\n    if (props.isAuth) return <Redirect to={\"/profile\"}/>\r\n\r\n    const on= false;\r\n\r\n    return (\r\n        <div className={s.block}>\r\n            <div className={s.container}>\r\n                <div className={s.rightPart}>\r\n                    <div className={s.pathContainer}>\r\n                        <div className={s.firstText}>Join the club</div>\r\n                        <div className={s.secondText}>Lorem ipsum dolor sit amet,\r\n                            consectetur adipiscing elit. Ut elit tellus, luctus.\r\n                        </div>\r\n                        <div className={s.oneAdvantage}>\r\n                            <div className={s.icon}> <MdComputer/></div>\r\n                            <div className={s.description}>\r\n                                <div className={s.title}>Community</div>\r\n                                <div className={s.desc}>At vero eos et accusamus et.</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className={s.oneAdvantage}>\r\n                            <div className={s.icon}><AiOutlineShopping/></div>\r\n                            <div className={s.description}>\r\n                                <div className={s.title}>Online shop</div>\r\n                                <div className={s.desc}>At vero eos et accusamus et.</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className={s.oneAdvantage}>\r\n                            <div className={s.icon}> <CgWorkAlt/></div>\r\n                            <div className={s.description}>\r\n                                <div className={s.title}>Job search</div>\r\n                                <div className={s.desc}>At vero eos et accusamus et.</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={s.leftPart}>\r\n                    <div className={s.pathContainer}>\r\n                        <img  className={s.iconNetwork} src={\"https://mythemestore.com/beehive-preview/wp-content/uploads/2020/07/logo-icon.svg\"}/>\r\n                        <div className={s.welcome}>Welcome</div>\r\n                        <LoginReduxForm onSubmit={onSubmit} x={props.captcha}/>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n","import s from \"./one-user.module.scss\";\r\nimport no_image from \"../../../UI/assets/img/no_image.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {AiOutlineUserAdd, AiOutlineUserDelete} from \"react-icons/all\";\r\nimport {AiOutlineMail} from \"react-icons/ai\";\r\n\r\nexport const OneUser = (props: any) => {\r\n    const user = props.user;\r\n    return (\r\n        <div className={s.friendContainer}>\r\n            <img className={s.ava}\r\n                 src={user.photos.small != null ? user.photos.small : no_image}/>\r\n\r\n            <div className={s.name}>{user.name}</div>\r\n            <div className={s.butt}>\r\n                {user.followed\r\n                    ?//arr.some возвращает true, если хотя бы для одного элемента массива условие верно\r\n                    //при раздизабл. кнопки к нам прихоидот пустой массив\r\n                    <button className={s.butItem}\r\n                            disabled={props.IsFollowingProgress.some((id: any) => id === user.id)}\r\n                            onClick={() => {\r\n                                props.unfollow(user.id)\r\n                            }\r\n                            }><AiOutlineUserDelete/></button>\r\n                    :\r\n                    <button className={s.butItem}\r\n                            disabled={props.IsFollowingProgress.some((id: any) => id === user.id)}\r\n                            onClick={() => {\r\n                                props.follower(user.id)\r\n                            }\r\n                            }><AiOutlineUserAdd/></button>}\r\n                <NavLink to={'/messages/' + user.id} className={s.butItem}>\r\n                    <AiOutlineMail/>\r\n                </NavLink>\r\n            </div>\r\n            <NavLink className={s.viewProfileFriend} to={'/profile/' + user.id}>\r\n                view profile\r\n            </NavLink>\r\n        </div>\r\n\r\n    )\r\n}","import React, {useState} from 'react';\r\nimport s from \"./Paginator.module.scss\"\r\nimport {GrNext, GrPrevious} from \"react-icons/all\";\r\n\r\ntype PaginatorPropsType = {\r\n    pagesize: number\r\n    totalItemsCount: number\r\n    onPageChanget: (x: any) => void\r\n    currentPages: number\r\n}\r\nexport const Paginator = (props: PaginatorPropsType) => {\r\n    let portionSize = 10;\r\n    let pagesCount = Math.ceil(props.totalItemsCount / props.pagesize)\r\n    let pages = []\r\n\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize)\r\n    let [portionNumber, setPortionNumber] = useState(1)\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n    let rightPortionPageNumber = portionNumber * portionSize\r\n\r\n\r\n    return (\r\n        <div className={s.block}>\r\n            {portionNumber > 1 &&\r\n            <div className={s.btn}\r\n                 onClick={() => {\r\n                     setPortionNumber(portionNumber - 1)\r\n                 }}><GrPrevious/>\r\n            </div>}\r\n            {pages\r\n                .filter(x => x >= leftPortionPageNumber && x <= rightPortionPageNumber)\r\n                .map(x => {\r\n                    return <div className={props.currentPages === x ? s.selectPage : s.page}\r\n                                key={x}\r\n                                onClick={(e) => {\r\n                                    props.onPageChanget(x)\r\n                                }}>{x}</div>\r\n                })}\r\n            {portionCount > portionNumber &&\r\n            <div  className={s.btn} onClick={() => {\r\n                setPortionNumber(portionNumber + 1)\r\n            }}><GrNext/></div>}\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport s from \"./users.module.scss\"\r\nimport {OneUsersType} from \"../../BLL/Reducers/users-reducer\";\r\nimport {OneUser} from \"./one-user/oneUser\";\r\nimport {Paginator} from \"./paginator/Paginator\";\r\n\r\nexport const Users = (props:any) => {\r\n\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pagesize)\r\n    let pages = []\r\n\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    return (\r\n        <div className={s.block}>\r\n            {/*посмотреть друзей*/}\r\n            <div className={s.container}>\r\n\r\n                <div className={s.search}>\r\n                    <input className={s.inp}\r\n                           placeholder={\"Search Members\"} value={props.search} onChange={(event)=>{props.searchAC(event.currentTarget.value)}}></input>\r\n                </div>\r\n                <div className={s.viewFriends}>\r\n                    {props.users.map((user: OneUsersType) =>\r\n                        <OneUser user={user}\r\n                                 unfollow={props.unfollow}\r\n                                 IsFollowingProgress={props.IsFollowingProgress}\r\n                                 follower={props.follower}\r\n                        />\r\n                    )\r\n                    }\r\n                </div>\r\n                <div className={s.paginator}>\r\n                    <Paginator pagesize={props.pagesize}\r\n                               totalItemsCount={props.totalUsersCount}\r\n                               onPageChanget={props.onPageChanget}\r\n                               currentPages={props.currentPages}/>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    followTC, getUsersTC, toggleFollowAC,\r\n    setCurrentPageAC, toggleIsFetchingAC, setUserIdForDisabledAC,\r\n    setTotalUsersCountAC,\r\n    setUsersAC,\r\n    unFollowTC,\r\n    OneUsersType, searchAC\r\n} from \"../../BLL/Reducers/users-reducer\";\r\nimport {StoreStateType} from \"../../BLL/store\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPages,\r\n    getIsFetching,\r\n    getIsFollowingProgress,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsersCreateSelector\r\n} from \"../../BLL/users-selectors\";\r\nimport {Users} from \"./users\";\r\nimport {Preloader} from \"../Common/pr/Preloader\";\r\n\r\n\r\nexport type MapStateToPropsType = {\r\n    users: OneUsersType[]\r\n    pagesize: number\r\n    totalUsersCount: number\r\n    currentPages: number\r\n    isFetching: boolean\r\n    IsFollowingProgress:boolean\r\n    isFollow: boolean\r\n    search: string\r\n}\r\nexport type MapDispatchTopropsType = {\r\n    follower: (id: number) => void\r\n    unfollow: (id: number) => void\r\n    setUsers: (x: []) => void\r\n    SetCurrentPage: (x: number) => void\r\n    setTotalUsersCount: (x: number) => void\r\n    toogleIsFetching: (x: boolean) => void\r\n    setIsFollowingProgress: any\r\n    getUsersThunk: any\r\n    FiendsAC:any\r\n    searchAC:any\r\n}\r\n\r\nlet mapStateToProps = (state: StoreStateType): MapStateToPropsType => {\r\n\r\n    return {\r\n        users: getUsersCreateSelector(state),\r\n        pagesize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPages: getCurrentPages(state),\r\n        isFetching: getIsFetching(state),\r\n        IsFollowingProgress: getIsFollowingProgress(state),\r\n        isFollow: state.usersPage.isFollow,\r\n        search: state.usersPage.search\r\n    }\r\n}\r\n\r\nclass UsersAPI extends React.Component<MapDispatchTopropsType & MapStateToPropsType, any> {\r\n    componentDidMount() {\r\n\r\n        this.props.getUsersThunk(this.props.currentPages, this.props.pagesize, false, this.props.search)\r\n\r\n    }\r\n    componentDidUpdate(prevProps: Readonly<MapDispatchTopropsType & MapStateToPropsType>, prevState: Readonly<any>, snapshot?: any) {\r\n        if(this.props.search!==prevProps.search)\r\n            this.props.getUsersThunk(this.props.currentPages, this.props.pagesize, this.props.isFollow,this.props.search)\r\n    }\r\n\r\n\r\n    onPageChanget = (pageNumber: number) => {\r\n        this.props.getUsersThunk(pageNumber, this.props.pagesize,  this.props.isFollow,this.props.search)\r\n\r\n        this.props.SetCurrentPage(pageNumber);\r\n\r\n    }\r\n\r\n    render() {\r\n        /*if (this.props.isFetching ) {\r\n            return <Preloader/>\r\n        } else */\r\n            return <>\r\n            <Users users={this.props.users}\r\n                   totalUsersCount={this.props.totalUsersCount}\r\n                   currentPages={this.props.currentPages}\r\n                   pagesize={this.props.pagesize}\r\n                   follower={this.props.follower}\r\n                   unfollow={this.props.unfollow}\r\n                   onPageChanget={this.onPageChanget}\r\n                   IsFollowingProgress={this.props.IsFollowingProgress}\r\n                   setIsFollowingProgress={this.props.setIsFollowingProgress}\r\n                   isFollow={this.props.isFollow}\r\n                   FiendsAC={this.props.FiendsAC}\r\n                   search={this.props.search}\r\n                   searchAC={this.props.searchAC}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nexport const UsersContainer:any = compose(/*WithAuthRedirect,*/connect(mapStateToProps, {\r\n\r\n    follower:followTC,\r\n    unfollow: unFollowTC,\r\n    setUsers:setUsersAC,\r\n    SetCurrentPage:setCurrentPageAC,\r\n    setTotalUsersCount: setTotalUsersCountAC,\r\n    setIsFollowingProgress: setUserIdForDisabledAC,\r\n    toogleIsFetching:toggleIsFetchingAC,\r\n    getUsersThunk: getUsersTC,\r\n    FiendsAC: toggleFollowAC,\r\n    searchAC: searchAC\r\n    //getUsersThunk: getFriendsThunkCreater\r\n}))(UsersAPI)\r\n\r\n\r\n","import React from \"react\";\r\nimport {Preloader} from \"../../ui-new/Common/pr/Preloader\";\r\n\r\n\r\nexport const WithSuspenseHOC=(Component:any)=>{\r\n\r\n   return(props: any)=>{\r\n       return <React.Suspense fallback={<Preloader/>}>\r\n           <Component{...props}/>\r\n       </React.Suspense>\r\n   }\r\n\r\n}","import React from 'react';\r\nimport s from \"./header.module.scss\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {Button} from \"@material-ui/core\";\r\n\r\nexport const Header = (props: any) => {\r\n    return (\r\n        <div className={s.block}>\r\n\r\n            <div className={s.icon}>\r\n                <img className={s.iconNetwork}\r\n                     src={\"https://mythemestore.com/beehive-preview/wp-content/uploads/2020/07/logo-icon.svg\"}/>\r\n            </div>\r\n            <div className={s.container}>\r\n                {props.isAuthorization\r\n                    ?\r\n                    <div className={s.info}>\r\n                        <div className={s.name}>{props.login}</div>\r\n                    </div>\r\n                    : <></>\r\n                }\r\n                <div className={s.unLog}>\r\n                    {props.isAuthorization\r\n                        ? <>\r\n                            <NavLink to=\"/login\" className={s.btn} onClick={props.logOut}>\r\n                                LogOut\r\n                            </NavLink>\r\n                        </>\r\n                        : <></>}</div>\r\n\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {StoreStateType} from \"../../BLL/store\";\r\nimport {logoutTC} from \"../../BLL/Reducers/authorization-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {Header} from \"./header\";\r\n\r\nclass HeaderContainerConnect extends React.Component<any, any> {\r\n    refreshHeader(){\r\n        window.location.reload();\r\n    }\r\n    componentDidMount() {\r\n\r\n\r\n    }\r\n    componentDidUpdate(prevProps: Readonly<any>, prevState: Readonly<any>, snapshot?: any) {\r\n        if(this.props.isAuthorization !==prevProps.isAuthorization )\r\n            this.refreshHeader()\r\n    }\r\n    render() {\r\n        return (\r\n            <Header login={this.props.login} isAuthorization={this.props.isAuthorization} logOut={this.props.logOut}/>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: StoreStateType) => ({\r\n    isAuthorization: state.auth.isAuthorization,\r\n    login: state.auth.login\r\n})\r\nlet mapDispatchToProps = (dispatch: any) => {\r\n    return {\r\n        logOut: () => {\r\n            dispatch(logoutTC())\r\n        }\r\n    }\r\n}\r\nexport const HeaderConteiner = connect(mapStateToProps, mapDispatchToProps)(HeaderContainerConnect)","import React from 'react';\r\nimport style from './forms.module.css'\r\nimport {Field} from \"redux-form\";\r\n\r\nexport const Textarea = ({input, meta, ...props}: any) => {\r\n    const hasError = meta.touched && meta.error\r\n    return <div  className={style.formControl + \" \" + (hasError ? style.error : \"\")}>\r\n        <textarea {...input} {...props}/>\r\n        <div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    </div>\r\n}\r\nexport const Input = ({input, meta, ...props}: any) => {\r\n    const hasError = meta.touched && meta.error\r\n    return <div className={style.formControl + \" \" + (hasError ? style.error : \"\")}>\r\n        <input {...input} {...props}/>\r\n        <div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    </div>\r\n}\r\nexport const Form = ({input, meta, el, ...props}: any) => {\r\n    const hasError = meta.touched && meta.error\r\n    return <div className={style.formControl + \" \" + (hasError ? style.error : \"\")}>\r\n        <props.el {...input} {...props}/>\r\n        <div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport const createFormField = (placeholder: any, name: any, validator: any, component: any, props = {}, text = \"\") => (\r\n    <>\r\n        <Field placeholder={placeholder}\r\n               name={name}\r\n               validate={validator}\r\n               component={component}\r\n               {...props}/> {text}\r\n    </>\r\n)\r\n","import s from \"./contacts-edit-form.module.scss\";\r\nimport {createFormField, Textarea} from \"../../../UI/component/Common/FormsControl/FormsControl\";\r\nimport {Input} from \"@material-ui/core\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport React from \"react\";\r\n\r\nconst ContactsEdit = ({handleSubmit, profile, error}: any) => {\r\n    return (\r\n        <form onSubmit={handleSubmit} className={s.formContainer}>\r\n            {error && <div className={s.formSunnierError}>\r\n                {error}\r\n            </div>}\r\n            <h4>Contacts:</h4>\r\n            <div className={s.contacts} >\r\n                {Object.keys(profile.contacts).map(key => {\r\n                        return <div key={key} className={s.contact}>\r\n                            <h4>{key}:</h4> {createFormField(key, \"contacts.\" + key, [], Input, {  className: s.input })}\r\n                        </div>\r\n                    }\r\n                )}\r\n            </div>\r\n            <button className={s.btn}>save</button>\r\n        </form>\r\n    )\r\n}\r\nexport const ContactsEditForm: any = reduxForm({form: 'editProfile'})(ContactsEdit)","import style from \"../../../UI/component/Profile/ProfileInfo/ProfileInfo.module.css\";\r\nimport s from \"./aboutMe-edit-form.module.scss\"\r\nimport {Input} from \"@material-ui/core\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport React from \"react\";\r\nimport {createFormField, Textarea} from \"../../Common/FormsControl/FormsControl\";\r\n\r\n\r\nconst AboutMeEdit = ({handleSubmit, profile, error}: any) => {\r\n    return (\r\n        <form onSubmit={handleSubmit} className={s.formContainer}>\r\n            {error && <div className={style.formSunnierError}>\r\n                {error}\r\n            </div>}\r\n\r\n            <div className={s.editBlock}>\r\n                <div className={s.item1}>\r\n                    <h4>looking for a job: </h4>{createFormField(\"\", \"lookingForAJob\", [], Input, {type: \"checkbox\",  className: s.input })}\r\n                </div>\r\n\r\n                <div className={s.item2}>\r\n                    <h4>I can: </h4>\r\n                    {createFormField(\"skils\", \"lookingForAJobDescription\", [], Textarea, {  className: s.input })}\r\n                </div>\r\n                <div className={s.item2}>\r\n                    <h4>About me: </h4>\r\n                    {createFormField(\"About me\", \"aboutMe\", [], Textarea, {  className: s.input })}\r\n\r\n                </div>\r\n            </div>\r\n            <button className={s.btn}>save</button>\r\n        </form>\r\n    )\r\n}\r\nexport const AboutMeEditForm: any = reduxForm({form: 'editProfile'})(AboutMeEdit)","import style from \"../../../UI/component/Profile/ProfileInfo/ProfileInfo.module.css\";\r\nimport {createFormField, Textarea} from \"../../../UI/component/Common/FormsControl/FormsControl\";\r\nimport {Input} from \"@material-ui/core\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport React from \"react\";\r\n\r\n\r\nconst MainEdit = ({handleSubmit, profile, error}: any) => {\r\n    return (\r\n        <form onSubmit={handleSubmit} className={style.formContainer}>\r\n            {error && <div className={style.formSunnierError}>\r\n                {error}\r\n            </div>}\r\n            <div>\r\n                <b>FullName: </b> {createFormField(\"Full name\", \"fullName\", [], Input)}\r\n            </div>\r\n            <button>save</button>\r\n        </form>\r\n    )\r\n}\r\nexport const MainEditForm: any = reduxForm({form: 'editProfile'})(MainEdit)","import React, {useState} from 'react'\r\nimport s from \"./setting.module.scss\"\r\nimport {Preloader} from \"../Common/pr/Preloader\";\r\nimport style from \"../../UI/component/Profile/ProfileInfo/ProfileInfo.module.css\";\r\nimport no_image from \"../../UI/assets/img/no_image.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport c from \"../../UI/component/Nav/Nav.module.css\";\r\nimport {createFormField, Textarea} from \"../../UI/component/Common/FormsControl/FormsControl\";\r\nimport {Button, Input} from \"@material-ui/core\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {ContactsEditForm} from \"./contacts-edit-form/contacts-edit-form\";\r\nimport {AboutMeEditForm} from \"./aboutMe-edit-form/aboutMe-edit-form\";\r\nimport {MainEditForm} from \"./main-edit-form/main-edit-form\";\r\n\r\nexport const Setting = (props: any) => {\r\n    let [x, setX] = useState(true)\r\n    let [y, setY] = useState(false)\r\n    let [z, setZ] = useState(false)\r\n    let [editMode, setEditMode] = useState(false)\r\n// пока профайл не пришел с сервера, показываем загрузку страницы\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const updatePhoto = (e: any/*: ChangeEvent<HTMLInputElement>*/) => {\r\n        if (e.target.files.length) {\r\n            props.updatePhoto(e.target.files[0])\r\n        }\r\n    }\r\n//отправка данных с формы на сервер через санку. когда данные отправились, то меняемм  режим редактирования\r\n    const onSubmit = (formData: any) => {\r\n        props.updateInfoProfile(formData)\r\n            .then(() => {\r\n                setEditMode(false);\r\n            })\r\n    }\r\n\r\n    return <div className={s.block}>\r\n        <div className={s.container}>\r\n            <div className={s.editContainer}>\r\n                {x && <div className={s.mainInfo}>\r\n                    <div className={s.photoChangeBlock}>\r\n                        {props.profile.photos.large === null\r\n                            ? <img className={s.photo} src={no_image}/>\r\n                            : <img className={s.photo} src={props.profile.photos.large}/>}\r\n                        <label htmlFor=\"file-upload\" className={s.customfileupload} onChange={updatePhoto}>\r\n                            <input className={s.inputFile} id=\"file-upload\" type=\"file\"/>\r\n                            Upgrade photo\r\n                        </label>\r\n                    </div>\r\n                    <MainEditForm nSubmit={onSubmit} initialValues={props.profile}\r\n                                  profile={props.profile}/>\r\n                </div>}\r\n                {y &&<div className={s.aboutMeBlock}>\r\n\r\n                    <AboutMeEditForm onSubmit={onSubmit} initialValues={props.profile}\r\n                                     profile={props.profile}/>\r\n                </div>}\r\n                {z && <div className={s.contactBlock}>\r\n                    <ContactsEditForm onSubmit={onSubmit} initialValues={props.profile}\r\n                                      profile={props.profile}/>\r\n\r\n                </div>}\r\n            </div>\r\n            <div className={s.nav}>\r\n                <div className={s.item} onClick={() => {\r\n                    setX(true);\r\n                    setY(false);\r\n                    setZ(false);\r\n                }}>1</div>\r\n                <div className={s.item} onClick={() => {\r\n                    setX(false);\r\n                    setY(true);\r\n                    setZ(false);\r\n                }}>2</div>\r\n                <div className={s.item} onClick={() => {\r\n                    setX(false);\r\n                    setY( false);\r\n                    setZ(true);\r\n                }}>3</div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n\r\n    </div>\r\n\r\n}\r\n\r\n","import React from \"react\";\r\nimport {Profile} from \"../../UI/component/Profile/Profile\";\r\nimport {StoreStateType} from \"../../BLL/store\";\r\nimport {\r\n    getOneProfileTC,\r\n    getStatusTC,\r\n    updateInfoProfileTC,\r\n    updatePhotoTC,\r\n    updateStatusTC\r\n} from \"../../BLL/Reducers/profile-reducer\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {Setting} from \"./setting\";\r\n\r\n\r\nclass ProfileConteiner extends React.Component<any, any>{\r\n// match из  withRouter  взялся\r\n    refreshProfile(){\r\n        let ownerId =this.props.authorizationUserId\r\n        // если айди не найден, то задаем айди авторизированного пользователя\r\n        if (!ownerId){\r\n            this.props.history.push(\"/login\")\r\n            // если пользователь не авторизирован, то в айди ничего нет и мы редеректемся на страницу логина\r\n\r\n        }\r\n        this.props.getOneProfile(ownerId)\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        this.refreshProfile()\r\n    }\r\n    componentDidUpdate(prevProps: Readonly<any>, prevState: Readonly<any>, snapshot?: any) {\r\n        if(this.props.match.params.userID !==prevProps.match.params.userID )\r\n            this.refreshProfile()\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Setting profile={this.props.profile}\r\n                     ownerId={!this.props.match.params.userID}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}\r\n                     updatePhoto={this.props.updatePhoto}\r\n                     updateInfoProfile={this.props.updateInfoProfile}\r\n                     follower={this.props.follower}/>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToprops=(state:StoreStateType):any=>{\r\n    return{\r\n        profile: state.profile.profile,\r\n        authorizationUserId: state.auth.userId,\r\n        isAuthorization: state.auth.isAuthorization\r\n\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch: any)  => {\r\n    return {\r\n        getOneProfile: (id: number) => {\r\n            dispatch(getOneProfileTC(id))\r\n        },\r\n        getStatus: (id: number) => {\r\n            dispatch(getStatusTC(id))\r\n        },updateStatus: (status: string) => {\r\n            dispatch(updateStatusTC(status))\r\n        },updatePhoto: (file: any) => {\r\n            dispatch(updatePhotoTC(file))\r\n        },\r\n        updateInfoProfile: (profile: any) => {\r\n            dispatch(updateInfoProfileTC(profile))\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst SettingContainer:any= compose(\r\n    connect (mapStateToprops,{\r\n        getOneProfile:getOneProfileTC,\r\n        updatePhoto: updatePhotoTC,\r\n        updateInfoProfile: updateInfoProfileTC\r\n    })\r\n    ,withRouter\r\n)(ProfileConteiner)\r\nexport default SettingContainer","import React from 'react';\r\nimport s from \"./app.module.scss\"\r\nimport {Redirect, Route, Switch, useLocation, withRouter} from \"react-router-dom\";\r\n\r\nimport {Nav} from \"./nav/nav\";\r\nimport {LoginContainer} from \"./login-page/login-container\";\r\nimport {UsersContainer} from \"./users-page/users-container\";\r\nimport {Preloader} from \"./Common/pr/Preloader\";\r\nimport {WithSuspenseHOC} from \"../UI/HOC/WithSuspense\";\r\nimport {StoreStateType} from \"../BLL/store\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {initializeTC} from \"../BLL/Reducers/app-reducer\";\r\nimport {HeaderConteiner} from \"./header/header-container\";\r\nimport {Setting} from \"./setting/setting\";\r\nimport SettingContainer from \"./setting/setting-container\";\r\n\r\n\r\n// лейзи говорит, что он компаненту не импортирую. когда ее надо будет отрисоввать, он запросится с сервера\r\nconst MessagesContainer = React.lazy(() => import('./messages-page/messages-container'));\r\n\r\nconst ProfileContainerConnect = React.lazy(() => import('./profile-page/profile-container'));\r\n\r\n\r\nclass App extends React.Component<any, any> {\r\n// componentDidMount срабатывает один раз, когда К. вмонтируется\r\n    catchAllUnhandleError = (promiseRejectEvent: PromiseRejectionEvent) => {\r\n        alert(promiseRejectEvent)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.initializeApp()\r\n        window.addEventListener(\"unhandledrejection\", this.catchAllUnhandleError)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"unhandledrejection\", this.catchAllUnhandleError)\r\n\r\n    }\r\n\r\n    render() {\r\n        // при первой загрузке у на нет данных, показываем поэтому крутилку\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n// задача К. вернуть jsx(tsx) в зависимости от пропсов либо личного локального стейта\r\n        // exact требует полное совпадение урла. Можно добавить <Switch>..роутер..</Switch> и тогда при первом совпадении будет отрисовка.\r\n        // в этом случает лучше точные урлы ставить выше, а общие ниже\r\n        return (<div className={s.block}>\r\n                {window.location.pathname === '/'\r\n                || window.location.pathname === '/login'\r\n                    ? null\r\n                    : <HeaderConteiner/>}\r\n\r\n                <div className={s.container}>\r\n                    {window.location.pathname === '/'\r\n                    || window.location.pathname === '/login'\r\n                        ? null\r\n                        : <Nav/>}\r\n\r\n\r\n                    <Switch>\r\n\r\n                        <Route path='/profile/:userID?'\r\n                               render={WithSuspenseHOC(ProfileContainerConnect)}/>\r\n                        <Route path='/messages/:userID?'\r\n                               render={WithSuspenseHOC(MessagesContainer)}/>\r\n                        <Route path='/users'\r\n                               render={() => <UsersContainer/>}/>\r\n                        <Route path='/login'\r\n                               render={() => <LoginContainer/>}/>\r\n                        <Route path='/setting'\r\n                               render={() => <SettingContainer/>}/>\r\n                        <Route path='/'\r\n                               render={() => <LoginContainer/>}/>\r\n                        <Route path='*'\r\n                               render={() => <>not found</>}/>\r\n\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: StoreStateType) => ({\r\n    initialized: state.app.initialized\r\n})\r\n// compose создает контейнернкю компанету, применяя один за одним HOCи=>\r\n// (компанента высшего порядка-это функция, которая принимает одну компаненту и возвращает другую компаненту.\r\n// Это нужно для того, что бы наша компанента получила какие-то данные)\r\n\r\n// connect  дает данные из Store с помощью mapStateToProps и mapDispatchToProps\r\n// withRouter дает компоненте данные из url\r\nexport const AppContainer: any = compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp: initializeTC}))(App)\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n// import {AppContainer} from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {store} from \"./BLL/store\";\r\nimport {Provider} from \"react-redux\";\r\nimport {BrowserRouter, HashRouter} from \"react-router-dom\";\r\nimport {Login} from \"./ui-new/login-page/login\";\r\nimport {Profile} from \"./ui-new/profile-page/profile\";\r\nimport {AppContainer} from \"./ui-new/App\";\r\nimport {Users} from \"./ui-new/users-page/users\";\r\nimport {Messages} from \"./ui-new/messages-page/messages\";\r\n\r\n// BrowserRouter добовляет\r\n// Provider добовляет store в контекст, из которого все компаненты могут брать данные ( наприер стор, тема темная/светлая, язык)\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <BrowserRouter>\r\n{/*\r\n            <AppContainer/>\r\n*/}\r\n\r\n\r\n            <AppContainer/>\r\n\r\n\r\n        </BrowserRouter>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\nreportWebVitals();\r\n// реакт библиотека- это библиотека, которая эффективно отрисовывает html. Эффективно, в плане она не перерисовывает те элементы, которые не надо\r\n// реакт загружается и живет в браузере\r\n//компанента возвращает тсикс или джсикс\r\n\r\n//сайдэффект= запросы на сервер, сетТаймаут, обращение к дом элементам на прямую\r\n//  шудКомпонентАпдейт - реакт.Мемо\r\n// пьюрКомпонент\r\n//\r\n//\r\n///\r\n// редакс это система стейт менеджмента, то что позволчет управлять удобно стейто\r\n// редакс состоит из одного главного обьекта стор(хранилище,обьект ооп) .В стор мы засовываем редьюсеры, из которых он будет состоять.\r\n// редьюсеры это функции преобразователи. они получают на входе\r\n// экшен(обьект, инструкция, у которого минимум есть тип и мб данные) и часть стейта и преобразовывает стейт\r\n// делает преобраования он иммутабельно( изменяет не стейт а его копию)\r\n//\r\n// стор(хранилище) обьект ооп,  с ним можно взаимодействовать через его интерфейс( методы и свойства)\r\n// есть три главных метода:\r\n//getState позволяет получить из стора актуальный стейт\r\n//subscribe позволяет подписаться подпищику на изменение стейта\r\n//dispatch позволяет приобразовать стейт\r\n\r\n\r\n// реакт редакс для связки реакта и редакса. обеспечивает связь коспоненты со стором.\r\n// на помощь для связи комп. со стором приходит фунция connect\r\n// connect это хок. он создает вокгруг нашей компаненты другую компаненту. она снабжает нашу компаненты\r\n// connect(mstp, mdtp). mstp берет из стейта часть, которая использоваться будет в нашей компаненте( в нашу комп приходит это впропсах)\r\n// mdtp берем функцию (метод диспатч у стора) , который возвращает нам колбеки в которых диспатчи\r\n// в новой компаненте есть доступ к стору, у которого она может вызывать подписку на изменения стейта.\r\n// все обернута провайдером из р-р для того, что бы у всего приложения был доступ к стейту в контексте\r\n\r\n\r\n\r\n\r\n\r\n// node js это альтернатива браузеру. это платформа, позолябщая писать на js  любые приложения. его моно загрузить в телевизор холодильник пылесос север..\r\n// конкретно нам он нужен для подключения куси пакетов\r\n\r\n// компаненты\r\n// фунцкциональная компонента это функц принимающая пропсы и возврашает jsx\r\n\r\n// классовая компанента.\r\n\r\n// фунция мар принимает один обькт возвращает массив других обьектов (всегда добовлять key)\r\n// идентпотентность или детерменированность - получаем на входе одно и тоже и на выходе получаем одно и тоже\r\n// в чистой функции нет сайдэффектов, локального стейта\r\n// имьютабельность - функция не может менять то, что в нее приходит.\r\n\r\n\r\n\r\n// SERVER API\r\n// интрфейс сервера- это эндпоинты(урлы, на которые мы делаем запрос).рест апи это правила. какой тип запроса, какой ответ будет\r\n// делаем запросы с помощью axios. нам возвращаются промисы. у промиса  есть метод then, в которую мы передаем коллбек , который срабатывает когдп промис выполнился\r\n\r\n//ajax запросы выносим в контейнерную компаненту. контейнерных коспанент может быть много.\r\n// хок withRouter. тягает данные из урла. как коннект\r\n\r\n// thunk- это функция, которая принимает метод диспаитч, и внутри себя делаем асинхронную опирация и разные диспатчи\r\n// используем санк креатер. санку можно задиспатчить. 3\r\n//что бы ui не общался ни с кем, кроме блл.\r\n\r\n\r\n// редакс форм. есть пакет релакс форм реакт. он для того, что бы работал\r\n// флакс круговорот(ничего не появляется в юай без появления этого сначала в блл. например логин и пароль)\r\n\r\n\r\n// селекторы для mstp в connect. они для того случая, если очень тяжело достаются данные из стейта. что бы не засорять мстпya","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginForm\":\"login-form_loginForm__3Nfi0\",\"input\":\"login-form_input__624wX\",\"rememberMe\":\"login-form_rememberMe__2m9Np\",\"checkbox\":\"login-form_checkbox__2xz7W\",\"captcha\":\"login-form_captcha__lzo6i\",\"button\":\"login-form_button__1LSoq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formContainer\":\"aboutMe-edit-form_formContainer__3zhRl\",\"editBlock\":\"aboutMe-edit-form_editBlock__2paPj\",\"item1\":\"aboutMe-edit-form_item1__bI0uV\",\"input\":\"aboutMe-edit-form_input__22S9P\",\"item2\":\"aboutMe-edit-form_item2__8RpbT\",\"btn\":\"aboutMe-edit-form_btn__ktBa9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendContainer\":\"one-user_friendContainer__1VDfw\",\"ava\":\"one-user_ava__36pc4\",\"name\":\"one-user_name__eLmQa\",\"butt\":\"one-user_butt__n9E_x\",\"butItem\":\"one-user_butItem__3lgTc\",\"viewProfileFriend\":\"one-user_viewProfileFriend__104mU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"header_block__GGVhJ\",\"icon\":\"header_icon__2UwuE\",\"iconNetwork\":\"header_iconNetwork__2-Iwd\",\"container\":\"header_container__YiPjg\",\"info\":\"header_info__2xgWL\",\"ava\":\"header_ava__1FFaj\",\"unLog\":\"header_unLog__104om\",\"btn\":\"header_btn__2nH68\"};","import React from 'react';\r\nimport { createSelector } from 'reselect';\r\n\r\nexport const getUsers=(state: any)=>{\r\n    return state.usersPage.usersData\r\n}\r\nexport const getUsersCreateSelector=createSelector(getUsers,(users)=>{\r\n    return users.filter((x:any)=>true)\r\n})\r\nexport const getPageSize=(state: any)=>{\r\n    return state.usersPage.pageSize\r\n}\r\nexport const getTotalUsersCount=(state: any)=>{\r\n    return state.usersPage.totalUsersCount\r\n}\r\nexport const getCurrentPages=(state: any)=>{\r\n    return state.usersPage.currentPages\r\n}\r\nexport const getIsFetching=(state: any)=>{\r\n    return state.usersPage.isFetching\r\n}\r\nexport const getIsFollowingProgress=(state: any)=>{\r\n    return state.usersPage.userIdForDisabled\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"forms_formControl__3EzeQ\",\"error\":\"forms_error__2OhMd\",\"formSunnierError\":\"forms_formSunnierError__1xl7f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"users_block__2UOdh\",\"container\":\"users_container__22NfB\",\"search\":\"users_search__1pKs8\",\"inp\":\"users_inp__15EnU\",\"spn\":\"users_spn__3G9ai\",\"viewFriends\":\"users_viewFriends__bDaB3\",\"paginator\":\"users_paginator__1c1rK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formContainer\":\"contacts-edit-form_formContainer__3s-7o\",\"contacts\":\"contacts-edit-form_contacts__3yY_Q\",\"contact\":\"contacts-edit-form_contact__Obgae\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"forms_formControl__3EHfj\",\"error\":\"forms_error__bwAEw\",\"formSunnierError\":\"forms_formSunnierError__1NCLm\"};","export default __webpack_public_path__ + \"static/media/looading.c1b8565f.gif\";","import looading from '../../../UI/assets/img/looading.gif'\r\nimport React from \"react\";\r\nimport s from \"./priloader.module.scss\";\r\n\r\nexport const Preloader=()=>{\r\n    return <div className={s.block}><img src={looading} className={s.pril}/></div>\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Paginator_block__16mGz\",\"btn\":\"Paginator_btn__2k-up\",\"selectPage\":\"Paginator_selectPage__hgCCW\",\"page\":\"Paginator_page__1Vktn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ProfileInfo_container__1Hmme\",\"firstBlock\":\"ProfileInfo_firstBlock__2Hta7\",\"width100\":\"ProfileInfo_width100__3rQkg\",\"divPhoto\":\"ProfileInfo_divPhoto__3g2Ri\",\"photo\":\"ProfileInfo_photo__34hd_\",\"inputFile\":\"ProfileInfo_inputFile__1osS5\",\"customfileupload\":\"ProfileInfo_customfileupload__oW8Na\",\"info\":\"ProfileInfo_info__eDfC1\",\"infoItem\":\"ProfileInfo_infoItem__21TQH\",\"secondBlock\":\"ProfileInfo_secondBlock__3jdxd\",\"fullName\":\"ProfileInfo_fullName__1uuKx\",\"links\":\"ProfileInfo_links__2H22O\",\"title\":\"ProfileInfo_title__2eCqI\",\"contacts\":\"ProfileInfo_contacts__3VRDs\",\"titleContact\":\"ProfileInfo_titleContact__3cfkb\",\"userInfoBlock\":\"ProfileInfo_userInfoBlock__2iUUK\",\"oneInfoContainer\":\"ProfileInfo_oneInfoContainer__3Jtdu\",\"endBlock\":\"ProfileInfo_endBlock__3oGuX\"};","export default __webpack_public_path__ + \"static/media/no_image.4a9ff6fc.png\";","export const requiredField=(value:any)=>{\r\n    if(value) return undefined\r\n    return \"Field is required\"\r\n}\r\nexport const maxLength=(maxLength: number)=>(value:any)=>{\r\n    if(value && value.length>maxLength) return `max lenght is ${maxLength} symbols`\r\n    return undefined\r\n}"],"sourceRoot":""}